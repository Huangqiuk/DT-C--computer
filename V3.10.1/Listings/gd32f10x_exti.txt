; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\gd32f10x_exti.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\gd32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -IC:\Users\Administrator\AppData\Local\Arm\Packs\GigaDevice\GD32F10x_DFP\2.0.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=534 -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\gd32f10x_exti.crf Libraries\src\gd32f10x_exti.c]
                          THUMB

                          AREA ||i.exti_deinit||, CODE, READONLY, ALIGN=2

                  exti_deinit PROC
;;;48     */
;;;49     void exti_deinit(void)
000000  4905              LDR      r1,|L1.24|
;;;50     {
;;;51         /* reset the value of all the EXTI registers */
;;;52         EXTI_INTEN = EXTI_REG_RESET_VALUE;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;53         EXTI_EVEN  = EXTI_REG_RESET_VALUE;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;54         EXTI_RTEN  = EXTI_REG_RESET_VALUE;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;55         EXTI_FTEN  = EXTI_REG_RESET_VALUE;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;56         EXTI_SWIEV = EXTI_REG_RESET_VALUE;
000012  1d09              ADDS     r1,r1,#4
000014  6008              STR      r0,[r1,#0]
;;;57     }
000016  4770              BX       lr
;;;58     
                          ENDP

                  |L1.24|
                          DCD      0x40010400

                          AREA ||i.exti_event_disable||, CODE, READONLY, ALIGN=2

                  exti_event_disable PROC
;;;161    */
;;;162    void exti_event_disable(exti_line_enum linex)
000000  4902              LDR      r1,|L2.12|
;;;163    {
;;;164        EXTI_EVEN &= ~(uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4382              BICS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;165    }
000008  4770              BX       lr
;;;166    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40010404

                          AREA ||i.exti_event_enable||, CODE, READONLY, ALIGN=2

                  exti_event_enable PROC
;;;135    */
;;;136    void exti_event_enable(exti_line_enum linex)
000000  4902              LDR      r1,|L3.12|
;;;137    {
;;;138        EXTI_EVEN |= (uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;139    }
000008  4770              BX       lr
;;;140    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40010404

                          AREA ||i.exti_flag_clear||, CODE, READONLY, ALIGN=2

                  exti_flag_clear PROC
;;;191    */
;;;192    void exti_flag_clear(exti_line_enum linex)
000000  4901              LDR      r1,|L4.8|
;;;193    {
;;;194        EXTI_PD = (uint32_t)linex;
000002  6008              STR      r0,[r1,#0]
;;;195    }
000004  4770              BX       lr
;;;196    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40010414

                          AREA ||i.exti_flag_get||, CODE, READONLY, ALIGN=2

                  exti_flag_get PROC
;;;174    */
;;;175    FlagStatus exti_flag_get(exti_line_enum linex)
000000  4903              LDR      r1,|L5.16|
;;;176    {
;;;177        if(RESET != (EXTI_PD & (uint32_t)linex)){
000002  6809              LDR      r1,[r1,#0]
000004  4201              TST      r1,r0
000006  d001              BEQ      |L5.12|
;;;178            return SET;
000008  2001              MOVS     r0,#1
;;;179        }else{
;;;180            return RESET;
;;;181        } 
;;;182    }
00000a  4770              BX       lr
                  |L5.12|
00000c  2000              MOVS     r0,#0                 ;180
00000e  4770              BX       lr
;;;183    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.exti_init||, CODE, READONLY, ALIGN=2

                  exti_init PROC
;;;75     */
;;;76     void exti_init(exti_line_enum linex, exti_mode_enum mode, exti_trig_type_enum trig_type)
000000  b5f0              PUSH     {r4-r7,lr}
;;;77     {
;;;78         /* reset the EXTI line x */
;;;79         EXTI_INTEN &= ~(uint32_t)linex;
000002  4e1b              LDR      r6,|L6.112|
000004  6833              LDR      r3,[r6,#0]
000006  4383              BICS     r3,r3,r0
000008  6033              STR      r3,[r6,#0]
;;;80         EXTI_EVEN &= ~(uint32_t)linex;
00000a  1d35              ADDS     r5,r6,#4
00000c  682b              LDR      r3,[r5,#0]
00000e  4383              BICS     r3,r3,r0
000010  602b              STR      r3,[r5,#0]
;;;81         EXTI_RTEN &= ~(uint32_t)linex;
000012  1d2b              ADDS     r3,r5,#4
000014  681c              LDR      r4,[r3,#0]
000016  4384              BICS     r4,r4,r0
000018  601c              STR      r4,[r3,#0]
;;;82         EXTI_FTEN &= ~(uint32_t)linex;
00001a  1d1c              ADDS     r4,r3,#4
00001c  6827              LDR      r7,[r4,#0]
00001e  4387              BICS     r7,r7,r0
000020  6027              STR      r7,[r4,#0]
;;;83         
;;;84         /* set the EXTI mode and enable the interrupts or events from EXTI line x */
;;;85         switch(mode){
000022  2900              CMP      r1,#0
000024  d002              BEQ      |L6.44|
000026  2901              CMP      r1,#1
000028  d107              BNE      |L6.58|
00002a  e003              B        |L6.52|
                  |L6.44|
;;;86         case EXTI_INTERRUPT:
;;;87             EXTI_INTEN |= (uint32_t)linex;
00002c  6831              LDR      r1,[r6,#0]
00002e  4301              ORRS     r1,r1,r0
000030  6031              STR      r1,[r6,#0]
;;;88             break;
000032  e002              B        |L6.58|
                  |L6.52|
;;;89         case EXTI_EVENT:
;;;90             EXTI_EVEN |= (uint32_t)linex;
000034  6829              LDR      r1,[r5,#0]
000036  4301              ORRS     r1,r1,r0
000038  6029              STR      r1,[r5,#0]
                  |L6.58|
;;;91             break;
;;;92         default:
;;;93             break;
;;;94         }
;;;95         
;;;96         /* set the EXTI trigger type */
;;;97         switch(trig_type){
00003a  b152              CBZ      r2,|L6.82|
00003c  2a01              CMP      r2,#1
00003e  d00f              BEQ      |L6.96|
000040  2a02              CMP      r2,#2
000042  d105              BNE      |L6.80|
;;;98         case EXTI_TRIG_RISING:
;;;99             EXTI_RTEN |= (uint32_t)linex;
;;;100            EXTI_FTEN &= ~(uint32_t)linex;
;;;101            break;
;;;102        case EXTI_TRIG_FALLING:
;;;103            EXTI_RTEN &= ~(uint32_t)linex;
;;;104            EXTI_FTEN |= (uint32_t)linex;
;;;105            break;
;;;106        case EXTI_TRIG_BOTH:
;;;107            EXTI_RTEN |= (uint32_t)linex;
000044  6819              LDR      r1,[r3,#0]
000046  4301              ORRS     r1,r1,r0
000048  6019              STR      r1,[r3,#0]
;;;108            EXTI_FTEN |= (uint32_t)linex;
00004a  6821              LDR      r1,[r4,#0]
00004c  4301              ORRS     r1,r1,r0
00004e  6021              STR      r1,[r4,#0]
                  |L6.80|
;;;109            break;
;;;110        default:
;;;111            break;
;;;112        }
;;;113    }
000050  bdf0              POP      {r4-r7,pc}
                  |L6.82|
000052  6819              LDR      r1,[r3,#0]            ;99
000054  4301              ORRS     r1,r1,r0              ;99
000056  6019              STR      r1,[r3,#0]            ;99
000058  6821              LDR      r1,[r4,#0]            ;100
00005a  4381              BICS     r1,r1,r0              ;100
00005c  6021              STR      r1,[r4,#0]            ;100
00005e  bdf0              POP      {r4-r7,pc}
                  |L6.96|
000060  6819              LDR      r1,[r3,#0]            ;103
000062  4381              BICS     r1,r1,r0              ;103
000064  6019              STR      r1,[r3,#0]            ;103
000066  6821              LDR      r1,[r4,#0]            ;104
000068  4301              ORRS     r1,r1,r0              ;104
00006a  6021              STR      r1,[r4,#0]            ;104
00006c  bdf0              POP      {r4-r7,pc}
;;;114    
                          ENDP

00006e  0000              DCW      0x0000
                  |L6.112|
                          DCD      0x40010400

                          AREA ||i.exti_interrupt_disable||, CODE, READONLY, ALIGN=2

                  exti_interrupt_disable PROC
;;;148    */
;;;149    void exti_interrupt_disable(exti_line_enum linex)
000000  4902              LDR      r1,|L7.12|
;;;150    {
;;;151        EXTI_INTEN &= ~(uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4382              BICS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;152    }
000008  4770              BX       lr
;;;153    
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      0x40010400

                          AREA ||i.exti_interrupt_enable||, CODE, READONLY, ALIGN=2

                  exti_interrupt_enable PROC
;;;122    */
;;;123    void exti_interrupt_enable(exti_line_enum linex)
000000  4902              LDR      r1,|L8.12|
;;;124    {
;;;125        EXTI_INTEN |= (uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;126    }
000008  4770              BX       lr
;;;127    
                          ENDP

00000a  0000              DCW      0x0000
                  |L8.12|
                          DCD      0x40010400

                          AREA ||i.exti_interrupt_flag_clear||, CODE, READONLY, ALIGN=2

                  exti_interrupt_flag_clear PROC
;;;226    */
;;;227    void exti_interrupt_flag_clear(exti_line_enum linex)
000000  4901              LDR      r1,|L9.8|
;;;228    {
;;;229        EXTI_PD = (uint32_t)linex;
000002  6008              STR      r0,[r1,#0]
;;;230    }
000004  4770              BX       lr
;;;231    
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      0x40010414

                          AREA ||i.exti_interrupt_flag_get||, CODE, READONLY, ALIGN=2

                  exti_interrupt_flag_get PROC
;;;204    */
;;;205    FlagStatus exti_interrupt_flag_get(exti_line_enum linex)
000000  4906              LDR      r1,|L10.28|
;;;206    {
;;;207        uint32_t flag_left, flag_right;
;;;208        
;;;209        flag_left = EXTI_PD & (uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4002              ANDS     r2,r2,r0
;;;210        flag_right = EXTI_INTEN & (uint32_t)linex;
000006  4905              LDR      r1,|L10.28|
000008  3914              SUBS     r1,r1,#0x14
00000a  6809              LDR      r1,[r1,#0]
00000c  4001              ANDS     r1,r1,r0
;;;211        
;;;212        if((RESET != flag_left) && (RESET != flag_right)){
00000e  2a00              CMP      r2,#0
000010  d002              BEQ      |L10.24|
000012  b109              CBZ      r1,|L10.24|
;;;213            return SET;
000014  2001              MOVS     r0,#1
;;;214        }else{
;;;215            return RESET;
;;;216        }
;;;217    }
000016  4770              BX       lr
                  |L10.24|
000018  2000              MOVS     r0,#0                 ;215
00001a  4770              BX       lr
;;;218    
                          ENDP

                  |L10.28|
                          DCD      0x40010414

                          AREA ||i.exti_software_interrupt_disable||, CODE, READONLY, ALIGN=2

                  exti_software_interrupt_disable PROC
;;;252    */
;;;253    void exti_software_interrupt_disable(exti_line_enum linex)
000000  4902              LDR      r1,|L11.12|
;;;254    {
;;;255        EXTI_SWIEV &= ~(uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4382              BICS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;256    }
000008  4770              BX       lr
                          ENDP

00000a  0000              DCW      0x0000
                  |L11.12|
                          DCD      0x40010410

                          AREA ||i.exti_software_interrupt_enable||, CODE, READONLY, ALIGN=2

                  exti_software_interrupt_enable PROC
;;;239    */
;;;240    void exti_software_interrupt_enable(exti_line_enum linex)
000000  4902              LDR      r1,|L12.12|
;;;241    {
;;;242        EXTI_SWIEV |= (uint32_t)linex;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;243    }
000008  4770              BX       lr
;;;244    
                          ENDP

00000a  0000              DCW      0x0000
                  |L12.12|
                          DCD      0x40010410

;*** Start embedded assembler ***

#line 1 "Libraries\\src\\gd32f10x_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_exti_c_3d6b70f4____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___15_gd32f10x_exti_c_3d6b70f4____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_exti_c_3d6b70f4____REVSH|
#line 128
|__asm___15_gd32f10x_exti_c_3d6b70f4____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
