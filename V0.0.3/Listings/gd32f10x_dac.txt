; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\gd32f10x_dac.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\gd32f10x_dac.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_XD -DUSE_STDPERIPH_DRIVER -DGD32F10X_XD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\gd32f10x_dac.crf Libraries\src\gd32f10x_dac.c]
                          THUMB

                          AREA ||i.dac_concurrent_data_set||, CODE, READONLY, ALIGN=2

                  dac_concurrent_data_set PROC
;;;536    */
;;;537    void dac_concurrent_data_set(uint32_t dac_align, uint16_t data0, uint16_t data1)
000000  ea414302          ORR      r3,r1,r2,LSL #16
;;;538    {
;;;539        uint32_t data = 0U;
;;;540        switch(dac_align){
000004  2800              CMP      r0,#0
000006  d008              BEQ      |L1.26|
000008  2801              CMP      r0,#1
00000a  d00a              BEQ      |L1.34|
00000c  2802              CMP      r0,#2
00000e  d103              BNE      |L1.24|
;;;541        /* data right 12b alignment */
;;;542        case DAC_ALIGN_12B_R:
;;;543            data = ((uint32_t)data1 << DH_12BIT_OFFSET) | data0;
;;;544            DACC_R12DH = data;
;;;545            break;
;;;546        /* data left 12b alignment */
;;;547        case DAC_ALIGN_12B_L:
;;;548            data = ((uint32_t)data1 << DH_12BIT_OFFSET) | data0;
;;;549            DACC_L12DH = data;
;;;550            break;
;;;551        /* data right 8b alignment */
;;;552        case DAC_ALIGN_8B_R:
;;;553            data = ((uint32_t)data1 << DH_8BIT_OFFSET) | data0;
000010  ea412002          ORR      r0,r1,r2,LSL #8
;;;554            DACC_R8DH = data;
000014  4905              LDR      r1,|L1.44|
000016  6008              STR      r0,[r1,#0]
                  |L1.24|
;;;555            break;
;;;556        default:
;;;557            break;
;;;558        }
;;;559    }
000018  4770              BX       lr
                  |L1.26|
00001a  4804              LDR      r0,|L1.44|
00001c  3808              SUBS     r0,r0,#8              ;544
00001e  6003              STR      r3,[r0,#0]            ;544
000020  4770              BX       lr
                  |L1.34|
000022  4802              LDR      r0,|L1.44|
000024  1f00              SUBS     r0,r0,#4              ;549
000026  6003              STR      r3,[r0,#0]            ;549
000028  4770              BX       lr
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40007428

                          AREA ||i.dac_concurrent_disable||, CODE, READONLY, ALIGN=2

                  dac_concurrent_disable PROC
;;;465    */
;;;466    void dac_concurrent_disable(void)
000000  4802              LDR      r0,|L2.12|
;;;467    {
;;;468        uint32_t ctl = 0U;
;;;469        ctl = DAC_CTL_DEN0 | DAC_CTL_DEN1;
;;;470        DAC_CTL &= (~ctl);
000002  6801              LDR      r1,[r0,#0]
000004  f0211101          BIC      r1,r1,#0x10001
000008  6001              STR      r1,[r0,#0]
;;;471    }
00000a  4770              BX       lr
;;;472    
                          ENDP

                  |L2.12|
                          DCD      0x40007400

                          AREA ||i.dac_concurrent_enable||, CODE, READONLY, ALIGN=2

                  dac_concurrent_enable PROC
;;;452    */
;;;453    void dac_concurrent_enable(void)
000000  4802              LDR      r0,|L3.12|
;;;454    {
;;;455        uint32_t ctl = 0U;
;;;456        ctl = DAC_CTL_DEN0 | DAC_CTL_DEN1;
;;;457        DAC_CTL |= (ctl);
000002  6801              LDR      r1,[r0,#0]
000004  f0411101          ORR      r1,r1,#0x10001
000008  6001              STR      r1,[r0,#0]
;;;458    }
00000a  4770              BX       lr
;;;459    
                          ENDP

                  |L3.12|
                          DCD      0x40007400

                          AREA ||i.dac_concurrent_output_buffer_disable||, CODE, READONLY, ALIGN=2

                  dac_concurrent_output_buffer_disable PROC
;;;517    */
;;;518    void dac_concurrent_output_buffer_disable(void)
000000  4802              LDR      r0,|L4.12|
;;;519    {
;;;520        uint32_t ctl = 0U;
;;;521        ctl = DAC_CTL_DBOFF0 | DAC_CTL_DBOFF1;
;;;522        DAC_CTL |= (ctl);
000002  6801              LDR      r1,[r0,#0]
000004  f0411102          ORR      r1,r1,#0x20002
000008  6001              STR      r1,[r0,#0]
;;;523    }
00000a  4770              BX       lr
;;;524    
                          ENDP

                  |L4.12|
                          DCD      0x40007400

                          AREA ||i.dac_concurrent_output_buffer_enable||, CODE, READONLY, ALIGN=2

                  dac_concurrent_output_buffer_enable PROC
;;;504    */
;;;505    void dac_concurrent_output_buffer_enable(void)
000000  4802              LDR      r0,|L5.12|
;;;506    {
;;;507        uint32_t ctl = 0U;
;;;508        ctl = DAC_CTL_DBOFF0 | DAC_CTL_DBOFF1;
;;;509        DAC_CTL &= (~ctl);
000002  6801              LDR      r1,[r0,#0]
000004  f0211102          BIC      r1,r1,#0x20002
000008  6001              STR      r1,[r0,#0]
;;;510    }
00000a  4770              BX       lr
;;;511    
                          ENDP

                  |L5.12|
                          DCD      0x40007400

                          AREA ||i.dac_concurrent_software_trigger_disable||, CODE, READONLY, ALIGN=2

                  dac_concurrent_software_trigger_disable PROC
;;;491    */
;;;492    void dac_concurrent_software_trigger_disable(void)
000000  4802              LDR      r0,|L6.12|
;;;493    {
;;;494        uint32_t swt = 0U;
;;;495        swt = DAC_SWT_SWTR0 | DAC_SWT_SWTR1;
;;;496        DAC_SWT &= (~swt);
000002  6801              LDR      r1,[r0,#0]
000004  f0210103          BIC      r1,r1,#3
000008  6001              STR      r1,[r0,#0]
;;;497    }
00000a  4770              BX       lr
;;;498    
                          ENDP

                  |L6.12|
                          DCD      0x40007404

                          AREA ||i.dac_concurrent_software_trigger_enable||, CODE, READONLY, ALIGN=2

                  dac_concurrent_software_trigger_enable PROC
;;;478    */
;;;479    void dac_concurrent_software_trigger_enable(void)
000000  4802              LDR      r0,|L7.12|
;;;480    {
;;;481        uint32_t swt = 0U;
;;;482        swt = DAC_SWT_SWTR0 | DAC_SWT_SWTR1;
;;;483        DAC_SWT |= (swt); 
000002  6801              LDR      r1,[r0,#0]
000004  f0410103          ORR      r1,r1,#3
000008  6001              STR      r1,[r0,#0]
;;;484    }
00000a  4770              BX       lr
;;;485    
                          ENDP

                  |L7.12|
                          DCD      0x40007404

                          AREA ||i.dac_data_set||, CODE, READONLY, ALIGN=2

                  dac_data_set PROC
;;;186    */
;;;187    void dac_data_set(uint32_t dac_periph, uint32_t dac_align, uint16_t data)
000000  2800              CMP      r0,#0
;;;188    {
000002  d007              BEQ      |L8.20|
;;;189        if(DAC0 == dac_periph){
;;;190            switch(dac_align){
;;;191            /* data right 12b alignment */
;;;192            case DAC_ALIGN_12B_R:
;;;193                DAC0_R12DH = data;
;;;194                break;
;;;195            /* data left 12b alignment */
;;;196            case DAC_ALIGN_12B_L:
;;;197                DAC0_L12DH = data;
;;;198                break;
;;;199            /* data right 8b alignment */
;;;200            case DAC_ALIGN_8B_R:
;;;201                DAC0_R8DH = data;
;;;202                break;
;;;203            default:
;;;204                break;
;;;205            }
;;;206        }else{
;;;207            switch(dac_align){
000004  b1b9              CBZ      r1,|L8.54|
000006  2901              CMP      r1,#1
000008  d019              BEQ      |L8.62|
00000a  2902              CMP      r1,#2
00000c  d101              BNE      |L8.18|
;;;208            /* data right 12b alignment */
;;;209            case DAC_ALIGN_12B_R:
;;;210                DAC1_R12DH = data;
;;;211                break;
;;;212            /* data left 12b alignment */
;;;213            case DAC_ALIGN_12B_L:
;;;214                DAC1_L12DH = data;
;;;215                break;
;;;216            /* data right 8b alignment */
;;;217            case DAC_ALIGN_8B_R:
;;;218                DAC1_R8DH = data;
00000e  480e              LDR      r0,|L8.72|
000010  6002              STR      r2,[r0,#0]
                  |L8.18|
;;;219                break;
;;;220            default:
;;;221                break;
;;;222            }
;;;223        }
;;;224    }
000012  4770              BX       lr
                  |L8.20|
000014  b139              CBZ      r1,|L8.38|
000016  2901              CMP      r1,#1                 ;190
000018  d009              BEQ      |L8.46|
00001a  2902              CMP      r1,#2                 ;190
00001c  d1f9              BNE      |L8.18|
00001e  480a              LDR      r0,|L8.72|
000020  380c              SUBS     r0,r0,#0xc            ;201
000022  6002              STR      r2,[r0,#0]            ;201
000024  4770              BX       lr
                  |L8.38|
000026  4808              LDR      r0,|L8.72|
000028  3814              SUBS     r0,r0,#0x14           ;193
00002a  6002              STR      r2,[r0,#0]            ;193
00002c  4770              BX       lr
                  |L8.46|
00002e  4806              LDR      r0,|L8.72|
000030  3810              SUBS     r0,r0,#0x10           ;197
000032  6002              STR      r2,[r0,#0]            ;197
000034  4770              BX       lr
                  |L8.54|
000036  4804              LDR      r0,|L8.72|
000038  3808              SUBS     r0,r0,#8              ;210
00003a  6002              STR      r2,[r0,#0]            ;210
00003c  4770              BX       lr
                  |L8.62|
00003e  4802              LDR      r0,|L8.72|
000040  1f00              SUBS     r0,r0,#4              ;214
000042  6002              STR      r2,[r0,#0]            ;214
000044  4770              BX       lr
;;;225    
                          ENDP

000046  0000              DCW      0x0000
                  |L8.72|
                          DCD      0x4000741c

                          AREA ||i.dac_deinit||, CODE, READONLY, ALIGN=1

                  dac_deinit PROC
;;;51     */
;;;52     void dac_deinit(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54         rcu_periph_reset_enable(RCU_DACRST);
000002  f240441d          MOV      r4,#0x41d
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       rcu_periph_reset_enable
;;;55         rcu_periph_reset_disable(RCU_DACRST);
00000c  4620              MOV      r0,r4
00000e  e8bd4010          POP      {r4,lr}
000012  f7ffbffe          B.W      rcu_periph_reset_disable
;;;56     }
;;;57     
                          ENDP


                          AREA ||i.dac_disable||, CODE, READONLY, ALIGN=2

                  dac_disable PROC
;;;80     */
;;;81     void dac_disable(uint32_t dac_periph)
000000  4906              LDR      r1,|L10.28|
;;;82     {
;;;83         if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L10.16|
;;;84             DAC_CTL &= ~DAC_CTL_DEN0;
;;;85         }else{
;;;86             DAC_CTL &= ~DAC_CTL_DEN1;
000006  6808              LDR      r0,[r1,#0]
000008  f4203080          BIC      r0,r0,#0x10000
00000c  6008              STR      r0,[r1,#0]
;;;87         }
;;;88     }
00000e  4770              BX       lr
                  |L10.16|
000010  6808              LDR      r0,[r1,#0]            ;84
000012  f0200001          BIC      r0,r0,#1              ;84
000016  6008              STR      r0,[r1,#0]            ;84
000018  4770              BX       lr
;;;89     
                          ENDP

00001a  0000              DCW      0x0000
                  |L10.28|
                          DCD      0x40007400

                          AREA ||i.dac_dma_disable||, CODE, READONLY, ALIGN=2

                  dac_dma_disable PROC
;;;112    */
;;;113    void dac_dma_disable(uint32_t dac_periph)
000000  4906              LDR      r1,|L11.28|
;;;114    {
;;;115        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L11.16|
;;;116            DAC_CTL &= ~DAC_CTL_DDMAEN0;
;;;117        }else{
;;;118            DAC_CTL &= ~DAC_CTL_DDMAEN1;
000006  6808              LDR      r0,[r1,#0]
000008  f0205080          BIC      r0,r0,#0x10000000
00000c  6008              STR      r0,[r1,#0]
;;;119        }
;;;120    }
00000e  4770              BX       lr
                  |L11.16|
000010  6808              LDR      r0,[r1,#0]            ;116
000012  f4205080          BIC      r0,r0,#0x1000         ;116
000016  6008              STR      r0,[r1,#0]            ;116
000018  4770              BX       lr
;;;121    
                          ENDP

00001a  0000              DCW      0x0000
                  |L11.28|
                          DCD      0x40007400

                          AREA ||i.dac_dma_enable||, CODE, READONLY, ALIGN=2

                  dac_dma_enable PROC
;;;96     */
;;;97     void dac_dma_enable(uint32_t dac_periph)
000000  4906              LDR      r1,|L12.28|
;;;98     {
;;;99         if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L12.16|
;;;100            DAC_CTL |= DAC_CTL_DDMAEN0;
;;;101        }else{
;;;102            DAC_CTL |= DAC_CTL_DDMAEN1;
000006  6808              LDR      r0,[r1,#0]
000008  f0405080          ORR      r0,r0,#0x10000000
00000c  6008              STR      r0,[r1,#0]
;;;103        }
;;;104    }
00000e  4770              BX       lr
                  |L12.16|
000010  6808              LDR      r0,[r1,#0]            ;100
000012  f4405080          ORR      r0,r0,#0x1000         ;100
000016  6008              STR      r0,[r1,#0]            ;100
000018  4770              BX       lr
;;;105    
                          ENDP

00001a  0000              DCW      0x0000
                  |L12.28|
                          DCD      0x40007400

                          AREA ||i.dac_enable||, CODE, READONLY, ALIGN=2

                  dac_enable PROC
;;;64     */
;;;65     void dac_enable(uint32_t dac_periph)
000000  4906              LDR      r1,|L13.28|
;;;66     {
;;;67         if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L13.16|
;;;68             DAC_CTL |= DAC_CTL_DEN0;
;;;69         }else{
;;;70             DAC_CTL |= DAC_CTL_DEN1;
000006  6808              LDR      r0,[r1,#0]
000008  f4403080          ORR      r0,r0,#0x10000
00000c  6008              STR      r0,[r1,#0]
;;;71         }
;;;72     } 
00000e  4770              BX       lr
                  |L13.16|
000010  6808              LDR      r0,[r1,#0]            ;68
000012  f0400001          ORR      r0,r0,#1              ;68
000016  6008              STR      r0,[r1,#0]            ;68
000018  4770              BX       lr
;;;73     
                          ENDP

00001a  0000              DCW      0x0000
                  |L13.28|
                          DCD      0x40007400

                          AREA ||i.dac_lfsr_noise_config||, CODE, READONLY, ALIGN=2

                  dac_lfsr_noise_config PROC
;;;399    */
;;;400    void dac_lfsr_noise_config(uint32_t dac_periph, uint32_t unmask_bits)
000000  4a09              LDR      r2,|L14.40|
;;;401    {
;;;402        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d008              BEQ      |L14.24|
;;;403            /* configure DAC0 LFSR noise mode */
;;;404            DAC_CTL &= ~DAC_CTL_DWBW0;
;;;405            DAC_CTL |= unmask_bits;
;;;406        }else{
;;;407            /* configure DAC1 LFSR noise mode */
;;;408            DAC_CTL &= ~DAC_CTL_DWBW1;
000006  6810              LDR      r0,[r2,#0]
000008  f0206070          BIC      r0,r0,#0xf000000
00000c  6010              STR      r0,[r2,#0]
;;;409            DAC_CTL |= (unmask_bits << DAC1_REG_OFFSET);
00000e  6810              LDR      r0,[r2,#0]
000010  ea404001          ORR      r0,r0,r1,LSL #16
000014  6010              STR      r0,[r2,#0]
;;;410        }
;;;411    }
000016  4770              BX       lr
                  |L14.24|
000018  6810              LDR      r0,[r2,#0]            ;404
00001a  f4206070          BIC      r0,r0,#0xf00          ;404
00001e  6010              STR      r0,[r2,#0]            ;404
000020  6810              LDR      r0,[r2,#0]            ;405
000022  4308              ORRS     r0,r0,r1              ;405
000024  6010              STR      r0,[r2,#0]            ;405
000026  4770              BX       lr
;;;412    
                          ENDP

                  |L14.40|
                          DCD      0x40007400

                          AREA ||i.dac_output_buffer_disable||, CODE, READONLY, ALIGN=2

                  dac_output_buffer_disable PROC
;;;144    */
;;;145    void dac_output_buffer_disable(uint32_t dac_periph)
000000  4906              LDR      r1,|L15.28|
;;;146    {
;;;147        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L15.16|
;;;148            DAC_CTL |= DAC_CTL_DBOFF0;
;;;149        }else{
;;;150            DAC_CTL |= DAC_CTL_DBOFF1;
000006  6808              LDR      r0,[r1,#0]
000008  f4403000          ORR      r0,r0,#0x20000
00000c  6008              STR      r0,[r1,#0]
;;;151        }
;;;152    }
00000e  4770              BX       lr
                  |L15.16|
000010  6808              LDR      r0,[r1,#0]            ;148
000012  f0400002          ORR      r0,r0,#2              ;148
000016  6008              STR      r0,[r1,#0]            ;148
000018  4770              BX       lr
;;;153    
                          ENDP

00001a  0000              DCW      0x0000
                  |L15.28|
                          DCD      0x40007400

                          AREA ||i.dac_output_buffer_enable||, CODE, READONLY, ALIGN=2

                  dac_output_buffer_enable PROC
;;;128    */
;;;129    void dac_output_buffer_enable(uint32_t dac_periph)
000000  4906              LDR      r1,|L16.28|
;;;130    {
;;;131        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L16.16|
;;;132            DAC_CTL &= ~DAC_CTL_DBOFF0;
;;;133        }else{
;;;134            DAC_CTL &= ~DAC_CTL_DBOFF1;
000006  6808              LDR      r0,[r1,#0]
000008  f4203000          BIC      r0,r0,#0x20000
00000c  6008              STR      r0,[r1,#0]
;;;135        }
;;;136    }
00000e  4770              BX       lr
                  |L16.16|
000010  6808              LDR      r0,[r1,#0]            ;132
000012  f0200002          BIC      r0,r0,#2              ;132
000016  6008              STR      r0,[r1,#0]            ;132
000018  4770              BX       lr
;;;137    
                          ENDP

00001a  0000              DCW      0x0000
                  |L16.28|
                          DCD      0x40007400

                          AREA ||i.dac_output_value_get||, CODE, READONLY, ALIGN=2

                  dac_output_value_get PROC
;;;160    */
;;;161    uint16_t dac_output_value_get(uint32_t dac_periph)
000000  2800              CMP      r0,#0
;;;162    {
000002  d003              BEQ      |L17.12|
;;;163        uint16_t data = 0U;
;;;164        if(DAC0 == dac_periph){
;;;165            /* store the DAC0 output value */
;;;166            data = (uint16_t)DAC0_DO;
;;;167        }else{
;;;168            /* store the DAC1 output value */
;;;169            data = (uint16_t)DAC1_DO;
000004  4804              LDR      r0,|L17.24|
000006  6800              LDR      r0,[r0,#0]
000008  b280              UXTH     r0,r0
;;;170        }
;;;171        return data;
;;;172    }
00000a  4770              BX       lr
                  |L17.12|
00000c  4802              LDR      r0,|L17.24|
00000e  1f00              SUBS     r0,r0,#4              ;166
000010  6800              LDR      r0,[r0,#0]            ;166
000012  b280              UXTH     r0,r0                 ;166
000014  4770              BX       lr
;;;173    
                          ENDP

000016  0000              DCW      0x0000
                  |L17.24|
                          DCD      0x40007430

                          AREA ||i.dac_software_trigger_disable||, CODE, READONLY, ALIGN=2

                  dac_software_trigger_disable PROC
;;;310    */
;;;311    void dac_software_trigger_disable(uint32_t dac_periph)
000000  4906              LDR      r1,|L18.28|
;;;312    {
;;;313        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L18.16|
;;;314            DAC_SWT &= ~DAC_SWT_SWTR0;
;;;315        }else{
;;;316            DAC_SWT &= ~DAC_SWT_SWTR1;
000006  6808              LDR      r0,[r1,#0]
000008  f0200002          BIC      r0,r0,#2
00000c  6008              STR      r0,[r1,#0]
;;;317        }
;;;318    }
00000e  4770              BX       lr
                  |L18.16|
000010  6808              LDR      r0,[r1,#0]            ;314
000012  f0200001          BIC      r0,r0,#1              ;314
000016  6008              STR      r0,[r1,#0]            ;314
000018  4770              BX       lr
;;;319    
                          ENDP

00001a  0000              DCW      0x0000
                  |L18.28|
                          DCD      0x40007404

                          AREA ||i.dac_software_trigger_enable||, CODE, READONLY, ALIGN=2

                  dac_software_trigger_enable PROC
;;;294    */
;;;295    void dac_software_trigger_enable(uint32_t dac_periph)
000000  4906              LDR      r1,|L19.28|
;;;296    {
;;;297        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L19.16|
;;;298            DAC_SWT |= DAC_SWT_SWTR0;
;;;299        }else{
;;;300            DAC_SWT |= DAC_SWT_SWTR1;
000006  6808              LDR      r0,[r1,#0]
000008  f0400002          ORR      r0,r0,#2
00000c  6008              STR      r0,[r1,#0]
;;;301        }
;;;302    }
00000e  4770              BX       lr
                  |L19.16|
000010  6808              LDR      r0,[r1,#0]            ;298
000012  f0400001          ORR      r0,r0,#1              ;298
000016  6008              STR      r0,[r1,#0]            ;298
000018  4770              BX       lr
;;;303    
                          ENDP

00001a  0000              DCW      0x0000
                  |L19.28|
                          DCD      0x40007404

                          AREA ||i.dac_triangle_noise_config||, CODE, READONLY, ALIGN=2

                  dac_triangle_noise_config PROC
;;;433    */
;;;434    void dac_triangle_noise_config(uint32_t dac_periph, uint32_t amplitude)
000000  4a09              LDR      r2,|L20.40|
;;;435    {
;;;436        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d008              BEQ      |L20.24|
;;;437            /* configure DAC0 triangle noise mode */
;;;438            DAC_CTL &= ~DAC_CTL_DWBW0;
;;;439            DAC_CTL |= amplitude;
;;;440        }else{
;;;441            /* configure DAC1 triangle noise mode */
;;;442            DAC_CTL &= ~DAC_CTL_DWBW1;
000006  6810              LDR      r0,[r2,#0]
000008  f0206070          BIC      r0,r0,#0xf000000
00000c  6010              STR      r0,[r2,#0]
;;;443            DAC_CTL |= (amplitude << DAC1_REG_OFFSET);
00000e  6810              LDR      r0,[r2,#0]
000010  ea404001          ORR      r0,r0,r1,LSL #16
000014  6010              STR      r0,[r2,#0]
;;;444        }
;;;445    }
000016  4770              BX       lr
                  |L20.24|
000018  6810              LDR      r0,[r2,#0]            ;438
00001a  f4206070          BIC      r0,r0,#0xf00          ;438
00001e  6010              STR      r0,[r2,#0]            ;438
000020  6810              LDR      r0,[r2,#0]            ;439
000022  4308              ORRS     r0,r0,r1              ;439
000024  6010              STR      r0,[r2,#0]            ;439
000026  4770              BX       lr
;;;446    
                          ENDP

                  |L20.40|
                          DCD      0x40007400

                          AREA ||i.dac_trigger_disable||, CODE, READONLY, ALIGN=2

                  dac_trigger_disable PROC
;;;248    */
;;;249    void dac_trigger_disable(uint32_t dac_periph)
000000  4906              LDR      r1,|L21.28|
;;;250    {
;;;251        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L21.16|
;;;252            DAC_CTL &= ~DAC_CTL_DTEN0;
;;;253        }else{
;;;254            DAC_CTL &= ~DAC_CTL_DTEN1;
000006  6808              LDR      r0,[r1,#0]
000008  f4202080          BIC      r0,r0,#0x40000
00000c  6008              STR      r0,[r1,#0]
;;;255        }
;;;256    }
00000e  4770              BX       lr
                  |L21.16|
000010  6808              LDR      r0,[r1,#0]            ;252
000012  f0200004          BIC      r0,r0,#4              ;252
000016  6008              STR      r0,[r1,#0]            ;252
000018  4770              BX       lr
;;;257    
                          ENDP

00001a  0000              DCW      0x0000
                  |L21.28|
                          DCD      0x40007400

                          AREA ||i.dac_trigger_enable||, CODE, READONLY, ALIGN=2

                  dac_trigger_enable PROC
;;;232    */
;;;233    void dac_trigger_enable(uint32_t dac_periph)
000000  4906              LDR      r1,|L22.28|
;;;234    {
;;;235        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d004              BEQ      |L22.16|
;;;236            DAC_CTL |= DAC_CTL_DTEN0;
;;;237        }else{
;;;238            DAC_CTL |= DAC_CTL_DTEN1;
000006  6808              LDR      r0,[r1,#0]
000008  f4402080          ORR      r0,r0,#0x40000
00000c  6008              STR      r0,[r1,#0]
;;;239        }
;;;240    }
00000e  4770              BX       lr
                  |L22.16|
000010  6808              LDR      r0,[r1,#0]            ;236
000012  f0400004          ORR      r0,r0,#4              ;236
000016  6008              STR      r0,[r1,#0]            ;236
000018  4770              BX       lr
;;;241    
                          ENDP

00001a  0000              DCW      0x0000
                  |L22.28|
                          DCD      0x40007400

                          AREA ||i.dac_trigger_source_config||, CODE, READONLY, ALIGN=2

                  dac_trigger_source_config PROC
;;;275    */
;;;276    void dac_trigger_source_config(uint32_t dac_periph,uint32_t triggersource)
000000  4a09              LDR      r2,|L23.40|
;;;277    {
;;;278        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d008              BEQ      |L23.24|
;;;279            /* configure DAC0 trigger source */
;;;280            DAC_CTL &= ~DAC_CTL_DTSEL0;
;;;281            DAC_CTL |= triggersource;
;;;282        }else{
;;;283            /* configure DAC1 trigger source */
;;;284            DAC_CTL &= ~DAC_CTL_DTSEL1;
000006  6810              LDR      r0,[r2,#0]
000008  f4201060          BIC      r0,r0,#0x380000
00000c  6010              STR      r0,[r2,#0]
;;;285            DAC_CTL |= (triggersource << DAC1_REG_OFFSET);
00000e  6810              LDR      r0,[r2,#0]
000010  ea404001          ORR      r0,r0,r1,LSL #16
000014  6010              STR      r0,[r2,#0]
;;;286        }
;;;287    }
000016  4770              BX       lr
                  |L23.24|
000018  6810              LDR      r0,[r2,#0]            ;280
00001a  f0200038          BIC      r0,r0,#0x38           ;280
00001e  6010              STR      r0,[r2,#0]            ;280
000020  6810              LDR      r0,[r2,#0]            ;281
000022  4308              ORRS     r0,r0,r1              ;281
000024  6010              STR      r0,[r2,#0]            ;281
000026  4770              BX       lr
;;;288    
                          ENDP

                  |L23.40|
                          DCD      0x40007400

                          AREA ||i.dac_wave_bit_width_config||, CODE, READONLY, ALIGN=2

                  dac_wave_bit_width_config PROC
;;;365    */
;;;366    void dac_wave_bit_width_config(uint32_t dac_periph, uint32_t bit_width)
000000  4a09              LDR      r2,|L24.40|
;;;367    {
;;;368        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d008              BEQ      |L24.24|
;;;369            /* configure DAC0 wave bit width */
;;;370            DAC_CTL &= ~DAC_CTL_DWBW0;
;;;371            DAC_CTL |= bit_width;
;;;372        }else{
;;;373            /* configure DAC1 wave bit width */
;;;374            DAC_CTL &= ~DAC_CTL_DWBW1;
000006  6810              LDR      r0,[r2,#0]
000008  f0206070          BIC      r0,r0,#0xf000000
00000c  6010              STR      r0,[r2,#0]
;;;375            DAC_CTL |= (bit_width << DAC1_REG_OFFSET);
00000e  6810              LDR      r0,[r2,#0]
000010  ea404001          ORR      r0,r0,r1,LSL #16
000014  6010              STR      r0,[r2,#0]
;;;376        }
;;;377    }
000016  4770              BX       lr
                  |L24.24|
000018  6810              LDR      r0,[r2,#0]            ;370
00001a  f4206070          BIC      r0,r0,#0xf00          ;370
00001e  6010              STR      r0,[r2,#0]            ;370
000020  6810              LDR      r0,[r2,#0]            ;371
000022  4308              ORRS     r0,r0,r1              ;371
000024  6010              STR      r0,[r2,#0]            ;371
000026  4770              BX       lr
;;;378    
                          ENDP

                  |L24.40|
                          DCD      0x40007400

                          AREA ||i.dac_wave_mode_config||, CODE, READONLY, ALIGN=2

                  dac_wave_mode_config PROC
;;;331    */
;;;332    void dac_wave_mode_config(uint32_t dac_periph, uint32_t wave_mode)
000000  4a09              LDR      r2,|L25.40|
;;;333    {
;;;334        if(DAC0 == dac_periph){
000002  2800              CMP      r0,#0
000004  d008              BEQ      |L25.24|
;;;335            /* configure DAC0 wave mode */
;;;336            DAC_CTL &= ~DAC_CTL_DWM0;
;;;337            DAC_CTL |= wave_mode;
;;;338        }else{
;;;339            /* configure DAC1 wave mode */
;;;340            DAC_CTL &= ~DAC_CTL_DWM1;
000006  6810              LDR      r0,[r2,#0]
000008  f4200040          BIC      r0,r0,#0xc00000
00000c  6010              STR      r0,[r2,#0]
;;;341            DAC_CTL |= (wave_mode << DAC1_REG_OFFSET);
00000e  6810              LDR      r0,[r2,#0]
000010  ea404001          ORR      r0,r0,r1,LSL #16
000014  6010              STR      r0,[r2,#0]
;;;342        }
;;;343    }
000016  4770              BX       lr
                  |L25.24|
000018  6810              LDR      r0,[r2,#0]            ;336
00001a  f02000c0          BIC      r0,r0,#0xc0           ;336
00001e  6010              STR      r0,[r2,#0]            ;336
000020  6810              LDR      r0,[r2,#0]            ;337
000022  4308              ORRS     r0,r0,r1              ;337
000024  6010              STR      r0,[r2,#0]            ;337
000026  4770              BX       lr
;;;344    
                          ENDP

                  |L25.40|
                          DCD      0x40007400

;*** Start embedded assembler ***

#line 1 "Libraries\\src\\gd32f10x_dac.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_gd32f10x_dac_c_dee0e984____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___14_gd32f10x_dac_c_dee0e984____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_gd32f10x_dac_c_dee0e984____REVSH|
#line 128
|__asm___14_gd32f10x_dac_c_dee0e984____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
