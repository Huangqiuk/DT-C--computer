; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\key.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\key.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=534 -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\key.crf User\key.c]
                          THUMB

                          AREA ||i.KEY_CALLBACK_Scan||, CODE, READONLY, ALIGN=2

                  KEY_CALLBACK_Scan PROC
;;;24     
;;;25     void KEY_CALLBACK_Scan(uint8* p8bitKeyValueArray)
000000  b510              PUSH     {r4,lr}
;;;26     {
000002  4604              MOV      r4,r0
;;;27     	uint8 keyMask = 0x1F;			// 相当于无实体按键按下
;;;28     	//uint8 keyAddDecMask = 0x05;		// 加减同时按时
;;;29     	uint8 keyValue = 0;
;;;30     	
;;;31     	keyValue = (gpio_input_port_get(GPIOC) & keyMask) | KEY_MASK_ADD_DEC;
000004  4804              LDR      r0,|L1.24|
000006  f7fffffe          BL       gpio_input_port_get
00000a  f000001f          AND      r0,r0,#0x1f
00000e  f0400120          ORR      r1,r0,#0x20
;;;32     
;;;33     	*p8bitKeyValueArray = keyValue;
000012  7021              STRB     r1,[r4,#0]
;;;34     
;;;35     	// 只要有按键触发就立刻重设自动关机时间
;;;36     	if (keyValue != KEY_MASK_ALL)
;;;37     	{
;;;38     	}
;;;39     }
000014  bd10              POP      {r4,pc}
;;;40     
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
                          DCD      0x40011000

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;7      
;;;8      void KEY_Init(void)
000000  b510              PUSH     {r4,lr}
;;;9      {	 
;;;10     	// 打开时钟
;;;11     	rcu_periph_clock_enable(RCU_GPIOC);
000002  f2406004          MOV      r0,#0x604
000006  f7fffffe          BL       rcu_periph_clock_enable
;;;12     	gpio_init(GPIOC, GPIO_MODE_IPU, GPIO_OSPEED_2MHZ, GPIO_PIN_0);
00000a  4c13              LDR      r4,|L2.88|
00000c  2301              MOVS     r3,#1
00000e  2202              MOVS     r2,#2
000010  2148              MOVS     r1,#0x48
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       gpio_init
;;;13     	gpio_init(GPIOC, GPIO_MODE_IPU, GPIO_OSPEED_2MHZ, GPIO_PIN_1);
000018  2302              MOVS     r3,#2
00001a  461a              MOV      r2,r3
00001c  2148              MOVS     r1,#0x48
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       gpio_init
;;;14     	gpio_init(GPIOC, GPIO_MODE_IPU, GPIO_OSPEED_2MHZ, GPIO_PIN_2);
000024  2304              MOVS     r3,#4
000026  2202              MOVS     r2,#2
000028  2148              MOVS     r1,#0x48
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       gpio_init
;;;15     	gpio_init(GPIOC, GPIO_MODE_IPU, GPIO_OSPEED_2MHZ, GPIO_PIN_3);
000030  2308              MOVS     r3,#8
000032  2202              MOVS     r2,#2
000034  2148              MOVS     r1,#0x48
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       gpio_init
;;;16     	gpio_init(GPIOC, GPIO_MODE_IPU, GPIO_OSPEED_2MHZ, GPIO_PIN_4);
00003c  2310              MOVS     r3,#0x10
00003e  2202              MOVS     r2,#2
000040  2148              MOVS     r1,#0x48
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       gpio_init
;;;17     
;;;18     	// 一定要在KEYMSG_RegisterKeyScanCallback()函数之前调用
;;;19     	KEYMSG_Init();
000048  f7fffffe          BL       KEYMSG_Init
;;;20     	
;;;21     	// 注册按键扫描接口
;;;22     	KEYMSG_RegisterKeyScanCallback(KEY_CALLBACK_Scan);
00004c  e8bd4010          POP      {r4,lr}
000050  4802              LDR      r0,|L2.92|
000052  f7ffbffe          B.W      KEYMSG_RegisterKeyScanCallback
;;;23     }
;;;24     
                          ENDP

000056  0000              DCW      0x0000
                  |L2.88|
                          DCD      0x40011000
                  |L2.92|
                          DCD      KEY_CALLBACK_Scan

;*** Start embedded assembler ***

#line 1 "User\\key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___5_key_c_KEY_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REVSH|
#line 128
|__asm___5_key_c_KEY_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
