<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\_5Button.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\_5Button.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Oct 22 11:22:55 2024
<BR><P>
<H3>Maximum Stack Usage =        536 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; STATE_Process
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">ADC_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1e]">STATE_EnterState</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">STATE_EnterState</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[f]">ADC_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[15]">COMP_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[8]">EXTI0_1_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[9]">EXTI2_3_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[a]">EXTI4_17_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[7]">FLASH_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32g003_it.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[11]">I2C_ER_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[10]">I2C_EV_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[1d]">IAP_JumpToAppFun</a> from iap.o(.text) referenced from state.o(.text)
 <LI><a href="#[1]">NMI_Handler</a> from n32g003_it.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[6]">PVD_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from n32g003_it.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[12]">SPI_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[1e]">STATE_EnterState</a> from state.o(.text) referenced from state.o(.text)
 <LI><a href="#[3]">SVC_Handler</a> from n32g003_it.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from n32g003_it.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[17]">System_Initializes</a> from system_n32g003.o(.text) referenced from startup_n32g003.o(.text)
 <LI><a href="#[b]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[c]">TIM1_CC_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[d]">TIM3_IRQHandler</a> from timer.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[e]">TIM6_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[1c]">TIMER_DoNothing</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[13]">UART1_IRQHandler</a> from uartdrive.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_n32g003.o(.text) referenced from startup_n32g003.o(RESET)
 <LI><a href="#[1b]">UART_DRIVE_AddTxArray</a> from uartdrive.o(.text) referenced from uartprotocol.o(.text)
 <LI><a href="#[1a]">UART_PROTOCOL_MacProcess</a> from uartprotocol.o(.text) referenced from uartprotocol.o(.text)
 <LI><a href="#[19]">UP_Finish_Report</a> from uartprotocol.o(.text) referenced from main.o(.text)
 <LI><a href="#[18]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32g003.o(.text)
 <LI><a href="#[16]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[18]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b9]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bb]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[bc]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[bd]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[21]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[be]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[bf]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI4_17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>main</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = main &rArr; STATE_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Process
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_Process
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_Init
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TaskQueueProcess
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_AddTask
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_Process
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g003_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g003_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>UART_DRIVE_DataStructInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uartdrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_Init
</UL>

<P><STRONG><a name="[2d]"></a>UART_DRIVE_HwInit</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = UART_DRIVE_HwInit &rArr; UART_Initializes &rArr; UART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrput_Enable
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Initializes
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Enable
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB_Peripheral_Clock_Enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_Init
</UL>

<P><STRONG><a name="[26]"></a>UART_DRIVE_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = UART_DRIVE_Init &rArr; UART_DRIVE_HwInit &rArr; UART_Initializes &rArr; UART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_DataStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>UART_DRIVE_IR_StartSendData</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DRIVE_IR_StartSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrput_Enable
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_TxProcess
</UL>

<P><STRONG><a name="[38]"></a>UART_DRIVE_TxProcess</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_DRIVE_TxProcess &rArr; UART_DRIVE_IR_StartSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_IR_StartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_Process
</UL>

<P><STRONG><a name="[2b]"></a>UART_DRIVE_Process</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_DRIVE_Process &rArr; UART_DRIVE_TxProcess &rArr; UART_DRIVE_IR_StartSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_TxProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>UART_DRIVE_RegisterDataSendService</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uartdrive.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Init
</UL>

<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART1_IRQHandler &rArr; UART_Interrupt_Status_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrupt_Status_Get
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrupt_Status_Clear
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrput_Disable
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Data_Send
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Data_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART_DRIVE_BC_SendData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uartdrive.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrupt_Status_Get
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_BC_StartTx
</UL>

<P><STRONG><a name="[3e]"></a>UART_DRIVE_BC_StartTx</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, uartdrive.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_BC_SendData
</UL>

<P><STRONG><a name="[1b]"></a>UART_DRIVE_AddTxArray</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, uartdrive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DRIVE_AddTxArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uartprotocol.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>UART_PROTOCOL_StartTimeoutCheckTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>UART_PROTOCOL_RegisterDataSendService</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>UART_PROTOCOL_MacProcess</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_PROTOCOL_MacProcess &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uartprotocol.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>UART_PROTOCOL_DataStructInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_PROTOCOL_DataStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Init
</UL>

<P><STRONG><a name="[27]"></a>UART_PROTOCOL_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_PROTOCOL_Init &rArr; UART_PROTOCOL_DataStructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_DataStructInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_RegisterDataSendService
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>UART_PROTOCOL_TxStateProcess</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_PROTOCOL_TxStateProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Process
</UL>

<P><STRONG><a name="[44]"></a>UART_PROTOCOL_TxAddFrame</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_PROTOCOL_TxAddFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_ReportCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_SendCmdWithResult
</UL>

<P><STRONG><a name="[43]"></a>UART_PROTOCOL_TxAddData</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_PROTOCOL_TxAddData
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_ReportCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_SendCmdWithResult
</UL>

<P><STRONG><a name="[42]"></a>UART_PROTOCOL_SendCmdWithResult</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_PROTOCOL_SendCmdWithResult &rArr; UART_PROTOCOL_TxAddFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_TxAddData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_TxAddFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_SendCmdCheckKeyValue
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_CmdFrameProcess
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_Finish_Report
</UL>

<P><STRONG><a name="[45]"></a>UART_PROTOCOL_CmdFrameProcess</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = UART_PROTOCOL_CmdFrameProcess &rArr; IAP_WriteAppBin &rArr; IAP_FlashWriteWordArray &rArr; IAP_FlashWriteWordArrayAndCheck &rArr; FLASH_Word_Program &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_WriteAppBin
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_EraseAPPArea
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_SendCmdWithResult
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Process
</UL>

<P><STRONG><a name="[4a]"></a>UART_PROTOCOL_ConfirmTempCmdFrameBuff</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uartprotocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_RxFIFOProcess
</UL>

<P><STRONG><a name="[49]"></a>UART_PROTOCOL_CheckSUM</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_PROTOCOL_CheckSUM
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_RxFIFOProcess
</UL>

<P><STRONG><a name="[48]"></a>UART_PROTOCOL_RxFIFOProcess</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_PROTOCOL_RxFIFOProcess &rArr; UART_PROTOCOL_CheckSUM
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_CheckSUM
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_ConfirmTempCmdFrameBuff
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_Process
</UL>

<P><STRONG><a name="[2c]"></a>UART_PROTOCOL_Process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UART_PROTOCOL_Process &rArr; UART_PROTOCOL_CmdFrameProcess &rArr; IAP_WriteAppBin &rArr; IAP_FlashWriteWordArray &rArr; IAP_FlashWriteWordArrayAndCheck &rArr; FLASH_Word_Program &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_RxFIFOProcess
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_CmdFrameProcess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_TxStateProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>UART_PROTOCOL_SetTxAtOnceRequest</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>UART_PROTOCOL_CALLBACK_SetTxPeriodRequest</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>UART_PROTOCOL_DataCommunicationSequenceProcess</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>UART_PROTOCOL_CALLBACK_UartBusError</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>UART_PROTOCOL_ReportCmd</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, uartprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_TxAddData
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_TxAddFrame
</UL>

<P><STRONG><a name="[4d]"></a>UART_PROTOCOL_SendCmdCheckKeyValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uartprotocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_SendCmdWithResult
</UL>

<P><STRONG><a name="[19]"></a>UP_Finish_Report</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uartprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UP_Finish_Report &rArr; UART_PROTOCOL_SendCmdWithResult &rArr; UART_PROTOCOL_TxAddFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_SendCmdWithResult
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>IAP_RunAPP</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, iap.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>IAP_JumpToAppFun</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, iap.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> state.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>IAP_CmpareN</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, iap.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>IAP_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, iap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>IAP_FlashReadWord</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_EnterState
</UL>

<P><STRONG><a name="[4e]"></a>IAP_FlashWriteWordArrayAndCheck</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, iap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IAP_FlashWriteWordArrayAndCheck &rArr; FLASH_Word_Program &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArray
</UL>

<P><STRONG><a name="[50]"></a>IAP_FlashWriteWordArray</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, iap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = IAP_FlashWriteWordArray &rArr; IAP_FlashWriteWordArrayAndCheck &rArr; FLASH_Word_Program &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayAndCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_WriteAppBin
</UL>

<P><STRONG><a name="[47]"></a>IAP_WriteAppBin</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, iap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = IAP_WriteAppBin &rArr; IAP_FlashWriteWordArray &rArr; IAP_FlashWriteWordArrayAndCheck &rArr; FLASH_Word_Program &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArray
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_CmdFrameProcess
</UL>

<P><STRONG><a name="[46]"></a>IAP_EraseAPPArea</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, iap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IAP_EraseAPPArea &rArr; FLASH_One_Page_Erase &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_EnterState
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_CmdFrameProcess
</UL>

<P><STRONG><a name="[59]"></a>IAP_FlashReadWordArray</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, iap.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
</UL>

<P><STRONG><a name="[57]"></a>IAP_FlashReadByteArray</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, iap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
</UL>

<P><STRONG><a name="[58]"></a>IAP_FlashWriteWordArrayWithErase</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, iap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashReadWordArray
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayAndCheck
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[5a]"></a>IAP_FLASH_WriteByteWithErase</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, iap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashReadByteArray
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayAndCheck
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[5b]"></a>app_flag_write</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, iap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
</UL>

<P><STRONG><a name="[5c]"></a>Time3_Init</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Time3_Init &rArr; TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Struct_Initialize
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Reload_Mode_Set
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB_Peripheral_Clock_Enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
</UL>

<P><STRONG><a name="[61]"></a>TIMER_AddToQueue</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIMER_AddToQueue &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_CALLBACK_OnTimer
</UL>

<P><STRONG><a name="[62]"></a>TIMER_CALLBACK_OnTimer</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TIMER_CALLBACK_OnTimer &rArr; TIMER_AddToQueue &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_AddToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[d]"></a>TIM3_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIM3_IRQHandler &rArr; TIMER_CALLBACK_OnTimer &rArr; TIMER_AddToQueue &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Get
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_CALLBACK_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIMER_StartTimerx</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
</UL>

<P><STRONG><a name="[67]"></a>TIMER_StopTimerx</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Off
</UL>

<P><STRONG><a name="[1c]"></a>TIMER_DoNothing</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>TIMER_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIMER_Init &rArr; Time3_Init &rArr; TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>TIMER_AddTask</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIMER_AddTask
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_Init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_EnterState
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>TIMER_KillTask</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[2a]"></a>TIMER_TaskQueueProcess</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIMER_TaskQueueProcess &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>TIMER_Pause</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>TIMER_Resume</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>TIMER_KillAllTimer</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>TIMER_ResetTimer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>TIMER_ChangeTime</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>SYSTEM_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SYSTEM_Init &rArr; System_Core_Clock_Frequency_Update &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Core_Clock_Frequency_Update
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>SYSTEM_Rst</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, system.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Disable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Disable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Off
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Interrput_Disable
</UL>

<P><STRONG><a name="[1e]"></a>STATE_EnterState</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = STATE_EnterState &rArr;  STATE_EnterState (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_EnterState
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashReadWord
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_EraseAPPArea
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_AddTask
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_EnterState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>STATE_Init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_AddTask
</UL>

<P><STRONG><a name="[29]"></a>STATE_Process</STRONG> (Thumb, 22 bytes, Stack size 520 bytes, state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = STATE_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>NVIC_Initializes</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[cd]"></a>NVIC_System_LowPower_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>NVIC_System_Low_Power_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>SysTick_Clock_Source_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>RCC_Reset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, n32g003_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Init
</UL>

<P><STRONG><a name="[d0]"></a>RCC_HSI_Calibration_Value_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>RCC_LSI_Calibration_Value_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>RCC_Sysclk_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Clock_Set
</UL>

<P><STRONG><a name="[d2]"></a>RCC_Hclk_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>RCC_Pclk_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>RCC_TIM1_Clock_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>RCC_ADC_1M_Clock_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>RCC_ADC_Clock_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>RCC_TIM6_Clock_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>RCC_Clocks_Frequencies_Value_Get</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, n32g003_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_Clocks_Frequencies_Value_Get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Baud_Rate_Config
</UL>

<P><STRONG><a name="[d8]"></a>RCC_AHB_Peripheral_Clock_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>RCC_AHB_Peripheral_Clock_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>RCC_APB_Peripheral_Clock_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[da]"></a>RCC_APB_Peripheral_Clock_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>RCC_Peripheral_Reset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Reset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Function_Reset
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Reset
</UL>

<P><STRONG><a name="[db]"></a>RCC_MCO_Prescaler_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>RCC_MCO_Source_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>RCC_Flag_Status_Get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>RCC_Reset_Flag_Clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>RCC_EMC_Reset_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>RCC_EMC_Reset_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>RCC_EMC_Detect_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>RCC_EMC_Detect_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>RCC_LSI_Detect_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>RCC_LSI_Detect_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>RCC_LSI_Clocks_Frequencies_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_rcc.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>GPIO_Reset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, n32g003_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Peripheral_Reset
</UL>

<P><STRONG><a name="[75]"></a>GPIO_Alternate_Function_Reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, n32g003_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Peripheral_Reset
</UL>

<P><STRONG><a name="[e6]"></a>GPIOA_Pin_Reset</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>GPIOB_Pin_Reset</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>GPIO_Alternate_Set</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, n32g003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[77]"></a>GPIO_Mode_Set</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, n32g003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[78]"></a>GPIO_Pull_Set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32g003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Pull_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[79]"></a>GPIO_SlewRate_Set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SlewRate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_Driver_Set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_Driver_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[30]"></a>GPIO_Peripheral_Initialize</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, n32g003_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Driver_Set
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SlewRate_Set
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pull_Set
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Mode_Set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[2f]"></a>GPIO_Structure_Initialize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g003_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[e8]"></a>GPIO_Input_Pin_Data_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>GPIO_Input_Data_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>GPIO_Output_Pin_Data_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>GPIO_Output_Data_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>GPIO_Pins_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>GPIO_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>GPIO_PBSC_Pins_Reset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>GPIO_PBC_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>GPIO_Pin_Toggle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>GPIO_Pin_Lock_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>GPIO_Pin_Remap_Set</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>AFIO_ADC_External_Trigger_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>AFIO_SPI_NSS_Mode_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>AFIO_TIM3CH2_Remap</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g003_gpio.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>TIM_Reset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Peripheral_Reset
</UL>

<P><STRONG><a name="[7c]"></a>TIM_Base_Count_Mode_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[f7]"></a>TIM_Base_Auto_Reload_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>TIM_Base_Prescaler_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>TIM_Base_Reload_Mode_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
</UL>

<P><STRONG><a name="[f9]"></a>TIM_Base_Repeat_Count_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>TIM_Base_Channel1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[7f]"></a>TIM_Base_OCrefClear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[7d]"></a>TIM_Clock_Division_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[5e]"></a>TIM_Base_Initialize</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, n32g003_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Clock_Division_Set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_OCrefClear
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
</UL>

<P><STRONG><a name="[5d]"></a>TIM_Base_Struct_Initialize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
</UL>

<P><STRONG><a name="[fa]"></a>TIM_Base_Count_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>TIM_Base_Count_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>TIM_Auto_Reload_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>TIM_Base_Prescaler_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>TIM_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StartTimerx
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
</UL>

<P><STRONG><a name="[68]"></a>TIM_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Rst
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimerx
</UL>

<P><STRONG><a name="[fe]"></a>TIM_Output_Channel1_Preload_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>TIM_Output_Channel2_Preload_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>TIM_Output_Channel3_Preload_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>TIM_Output_Channel4_Preload_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>TIM_Output_Channel5_Preload_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>TIM_Auto_Reload_Preload_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>TIM_Auto_Reload_Preload_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>TIM_Update_Event_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>TIM_Update_Event_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>TIM_Update_Request_Source_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>TIM_Event_Generate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>TIM_Commutation_Event_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>TIM_Commutation_Event_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>TIM_Capture_Compare_Control_Preload_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>TIM_Capture_Compare_Control_Preload_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>TIM_Compare1_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>TIM_Compare2_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>TIM_Compare3_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>TIM_Compare4_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>TIM_Compare5_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>TIM_Compare_Capture1_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>TIM_Compare_Capture2_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>TIM_Compare_Capture3_Get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>TIM_Compare_Capture4_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>TIM_Compare_Capture5_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>TIM_Trigger_Source_Select</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Internal_Trig_To_Ext_Set
</UL>

<P><STRONG><a name="[83]"></a>Input_Channel1_Config</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
</UL>

<P><STRONG><a name="[84]"></a>Input_Channel2_Config</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
</UL>

<P><STRONG><a name="[8f]"></a>Input_Channel3_Config</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[8b]"></a>Input_Channel4_Config</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[86]"></a>TIM_External_Trigger_Filter_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[88]"></a>TIM_External_Trigger_Prescaler_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[87]"></a>TIM_External_Trigger_Polarity_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[117]"></a>TIM_Internal_Clock_Set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>TIM_Input_Capture1_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[8e]"></a>TIM_Input_Capture2_Prescaler_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[90]"></a>TIM_Input_Capture3_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[8c]"></a>TIM_Input_Capture4_Prescaler_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[80]"></a>TIM_Internal_Trig_To_Ext_Set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_Source_Select
</UL>

<P><STRONG><a name="[82]"></a>TIM_Trigger_As_External_Clock</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_Source_Select
</UL>

<P><STRONG><a name="[85]"></a>TIM_External_Clock_Mode1_Set</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Polarity_Set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Prescaler_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Filter_Set
</UL>

<P><STRONG><a name="[89]"></a>TIM_External_Clock_Mode2_Set</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Polarity_Set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Prescaler_Set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Filter_Set
</UL>

<P><STRONG><a name="[118]"></a>TIM_Slave_Mode_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>TIM_Master_Slave_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>TIM_Output_Trigger_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>TIM_One_Pulse_Mode_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>TIM_Input_Struct_Initialize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>TIM_Input_Channel_Initialize</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture4_Prescaler_Set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture3_Prescaler_Set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture2_Prescaler_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture1_Prescaler_Set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel4_Config
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel3_Config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
</UL>

<P><STRONG><a name="[91]"></a>TIM_PWM_Input_Channel_Config</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture2_Prescaler_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture1_Prescaler_Set
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
</UL>

<P><STRONG><a name="[94]"></a>TIM_Output_Channel_Polarity_Set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[96]"></a>TIM_Output_Channel_N_Polarity_Set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[95]"></a>TIM_Capture_Compare_Ch_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[93]"></a>TIM_Capture_Compare_Ch_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[97]"></a>TIM_Capture_Compare_Ch_N_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[98]"></a>TIM_Capture_Compare_Ch_N_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[11d]"></a>TIM_CCEN_Status_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>TIM_Output_Channel_Mode_Set</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>TIM_Forced_Output_Channel1_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>TIM_Forced_Output_Channel2_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>TIM_Forced_Output_Channel3_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>TIM_Forced_Output_Channel4_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>TIM_Forced_Output_Channel5_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>TIM_Output_Channel1_Fast_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>TIM_Output_Channel2_Fast_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>TIM_Output_Channel3_Fast_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>TIM_Output_Channel4_Fast_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>TIM_Output_Channel5_Fast_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>TIM_Output_Channel1_Reference_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>TIM_Output_Channel2_Reference_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>TIM_Output_Channel3_Reference_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>TIM_Output_Channel4_Reference_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>TIM_Output_Channel5_Reference_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>TIM_Output_Channel1_Initialize</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[99]"></a>TIM_Output_Channel2_Initialize</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[9a]"></a>TIM_Output_Channel3_Initialize</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[9b]"></a>TIM_Output_Channel4_Initialize</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[9c]"></a>TIM_Output_Channel5_Initialize</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[12e]"></a>TIM_PWM_Output_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>TIM_PWM_Output_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>TIM_Output_Channel_Struct_Initialize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>TIM_Lock_Up_Break_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>TIM_Lock_Up_Break_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>TIM_Pvd_Break_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>TIM_Pvd_Break_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>TIM_IOM_Comp_Break</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[9d]"></a>TIM_Break_And_Dead_Time_Set</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IOM_Comp_Break
</UL>

<P><STRONG><a name="[135]"></a>TIM_Break_And_Dead_Time_Struct_Initialize</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>TIM_Interrupt_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time3_Init
</UL>

<P><STRONG><a name="[6d]"></a>TIM_Interrupt_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Rst
</UL>

<P><STRONG><a name="[63]"></a>TIM_Interrupt_Status_Get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>TIM_Interrupt_Status_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[136]"></a>TIM_Flag_Status_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>TIM_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_tim.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>UART_Reset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, n32g003_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Peripheral_Reset
</UL>

<P><STRONG><a name="[a4]"></a>UART_Mode_Config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Initializes
</UL>

<P><STRONG><a name="[a3]"></a>UART_Parity_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Initializes
</UL>

<P><STRONG><a name="[a2]"></a>UART_Stop_Bits_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Initializes
</UL>

<P><STRONG><a name="[a1]"></a>UART_Word_Length_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Initializes
</UL>

<P><STRONG><a name="[a0]"></a>UART_Baud_Rate_Config</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, n32g003_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Initializes
</UL>

<P><STRONG><a name="[31]"></a>UART_Initializes</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, n32g003_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UART_Initializes &rArr; UART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Baud_Rate_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Word_Length_Config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Stop_Bits_Config
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Parity_Config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[138]"></a>UART_Structure_Initializes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>UART_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[6e]"></a>UART_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Rst
</UL>

<P><STRONG><a name="[34]"></a>UART_Interrput_Enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_IR_StartSendData
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_HwInit
</UL>

<P><STRONG><a name="[3c]"></a>UART_Interrput_Disable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Rst
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[139]"></a>UART_Address_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>UART_WakeUp_Mode_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>UART_Receiver_Wakeup_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>UART_Receiver_Wakeup_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>UART_Data_Send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_BC_SendData
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_IR_StartSendData
</UL>

<P><STRONG><a name="[3a]"></a>UART_Data_Receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[13d]"></a>UART_Break_Frame_Send</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>UART_Half_Duplex_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>UART_Half_Duplex_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>UART_Flag_Status_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>UART_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g003_uart.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>UART_Interrupt_Status_Get</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, n32g003_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Interrupt_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DRIVE_BC_SendData
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>UART_Interrupt_Status_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[142]"></a>FLASH_Latency_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>FLASH_Latency_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>FLASH_Prefetch_Buffer_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>FLASH_Prefetch_Buffer_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flag_write
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArray
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_EraseAPPArea
</UL>

<P><STRONG><a name="[53]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flag_write
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArray
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_EraseAPPArea
</UL>

<P><STRONG><a name="[ab]"></a>Option_Bytes_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User4_RDP2_Program
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_User3_Program
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
</UL>

<P><STRONG><a name="[146]"></a>Option_Bytes_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>Option_Bytes_Lock_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>FLASH_Status_Get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g003_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
</UL>

<P><STRONG><a name="[a5]"></a>FLASH_Last_Operation_Wait</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, n32g003_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mass_Erase
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User4_RDP2_Program
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_User3_Program
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_48Page_Mass_Erase
</UL>

<P><STRONG><a name="[52]"></a>FLASH_Flag_Status_Clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mass_Erase
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArray
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_EraseAPPArea
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User4_RDP2_Program
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_User3_Program
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_48Page_Mass_Erase
</UL>

<P><STRONG><a name="[56]"></a>FLASH_One_Page_Erase</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, n32g003_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_One_Page_Erase &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flag_write
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_EraseAPPArea
</UL>

<P><STRONG><a name="[a7]"></a>FLASH_Mass_Erase</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
</UL>

<P><STRONG><a name="[a8]"></a>FLASH_48Page_Mass_Erase</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
</UL>

<P><STRONG><a name="[4f]"></a>FLASH_Word_Program</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, n32g003_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_Word_Program &rArr; FLASH_Last_Operation_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flag_write
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayAndCheck
</UL>

<P><STRONG><a name="[aa]"></a>FLASH_Read_Out_Protection_L2_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User4_RDP2_Program
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_User3_Program
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
</UL>

<P><STRONG><a name="[a9]"></a>FLASH_Option_Bytes_Erase</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[ac]"></a>FLASH_Option_Bytes_User_RDP1_Program</STRONG> (Thumb, 96 bytes, Stack size 36 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[ad]"></a>FLASH_Option_Bytes_DATA_Program</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[ae]"></a>FLASH_Option_Bytes_User2_User3_Program</STRONG> (Thumb, 96 bytes, Stack size 36 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[af]"></a>FLASH_Option_Bytes_User4_RDP2_Program</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[b0]"></a>FLASH_Read_Out_Protection_L1_Enable</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[b1]"></a>FLASH_Read_Out_Protection_L1_Disable</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[b3]"></a>FLASH_Read_Out_Protection_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
</UL>

<P><STRONG><a name="[b2]"></a>FLASH_Read_Out_Protection_L2_Enable</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, n32g003_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_Status_Get
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
</UL>

<P><STRONG><a name="[148]"></a>FLASH_Option_Bytes_User_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>FLASH_Option_Bytes_User2_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>FLASH_User_LVRLS_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>FLASH_Option_Bytes_User3_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>FLASH_Option_Bytes_User4_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>FLASH_Prefetch_Buffer_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>FLASH_Interrupt_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>FLASH_Interrupt_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>FLASH_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>FLASH_Option_Bytes_Flag_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>FLASH_VTOR_Address_Set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g003_flash.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>System_Initializes</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_n32g003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = System_Initializes &rArr; System_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Clock_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g003.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>System_Core_Clock_Frequency_Update</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, system_n32g003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System_Core_Clock_Frequency_Update &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTEM_Init
</UL>

<P><STRONG><a name="[153]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Baud_Rate_Config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Core_Clock_Frequency_Update
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_KillTask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_AddToQueue
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_RxFIFOProcess
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PROTOCOL_MacProcess
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TaskQueueProcess
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[154]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STATE_Process
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[157]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[159]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[15a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[55]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashReadByteArray
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_WriteAppBin
</UL>

<P><STRONG><a name="[54]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FLASH_WriteByteWithErase
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashWriteWordArrayWithErase
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_FlashReadByteArray
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_WriteAppBin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b4]"></a>System_Clock_Set</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, system_n32g003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = System_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Initializes
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
