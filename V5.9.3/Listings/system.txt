; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\system.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\system.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -I.\User\qrencode -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\system.crf User\system.c]
                          THUMB

                          AREA ||i.NVIC_Configuration||, CODE, READONLY, ALIGN=1

                  NVIC_Configuration PROC
;;;96     // NVIC中断分组配置
;;;97     void NVIC_Configuration(void)
000000  b510              PUSH     {r4,lr}
;;;98     {
;;;99     	// 设置NVIC中断分组2:2位抢占优先级，2位响应优先级
;;;100    	nvic_priority_group_set(NVIC_PRIGROUP_PRE2_SUB2);
000002  f44f60a0          MOV      r0,#0x500
000006  f7fffffe          BL       nvic_priority_group_set
;;;101    }
00000a  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.RCC_HSE_Configuration||, CODE, READONLY, ALIGN=2

                  RCC_HSE_Configuration PROC
;;;41      **************************************/
;;;42     void RCC_HSE_Configuration(void)
000000  b510              PUSH     {r4,lr}
;;;43     {
;;;44     	rcu_deinit();
000002  f7fffffe          BL       rcu_deinit
;;;45     
;;;46     	// 设置外部高速晶振(HSE) HSE 晶振打开(ON)
;;;47     	rcu_osci_on(RCU_HXTAL);
000006  2010              MOVS     r0,#0x10
000008  f7fffffe          BL       rcu_osci_on
;;;48     
;;;49     	if (SUCCESS == rcu_osci_stab_wait(RCU_HXTAL))
00000c  2010              MOVS     r0,#0x10
00000e  f7fffffe          BL       rcu_osci_stab_wait
000012  2801              CMP      r0,#1
000014  d121              BNE      |L2.90|
;;;50     	{
;;;51     		// configure the AHB prescaler selection
;;;52     		rcu_ahb_clock_config(RCU_AHB_CKSYS_DIV1);
000016  2000              MOVS     r0,#0
000018  f7fffffe          BL       rcu_ahb_clock_config
;;;53     		// configure the APB1 prescaler selection
;;;54     		rcu_apb1_clock_config(RCU_APB1_CKAHB_DIV2);
00001c  f44f6080          MOV      r0,#0x400
000020  f7fffffe          BL       rcu_apb1_clock_config
;;;55     		// configure the APB2 prescaler selection
;;;56     		rcu_apb2_clock_config(RCU_APB2_CKAHB_DIV1);
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       rcu_apb2_clock_config
;;;57     
;;;58     		// 晶振是否分频
;;;59     		rcu_predv0_config(RCU_PREDV0_DIV1);
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       rcu_predv0_config
;;;60     
;;;61     		// configure the PLL clock source selection and PLL multiply factor
;;;62     		rcu_pll_config(RCU_PLLSRC_HXTAL, RCU_PLL_MUL9);
000030  f44f11e0          MOV      r1,#0x1c0000
000034  f44f3080          MOV      r0,#0x10000
000038  f7fffffe          BL       rcu_pll_config
;;;63     
;;;64     		rcu_osci_on(RCU_PLL_CK);
00003c  2018              MOVS     r0,#0x18
00003e  f7fffffe          BL       rcu_osci_on
;;;65     
;;;66     		rcu_osci_stab_wait(RCU_PLL_CK);
000042  2018              MOVS     r0,#0x18
000044  f7fffffe          BL       rcu_osci_stab_wait
;;;67     
;;;68     		rcu_system_clock_source_config(RCU_CKSYSSRC_PLL);
000048  2002              MOVS     r0,#2
00004a  f7fffffe          BL       rcu_system_clock_source_config
;;;69     
;;;70     		while (RCU_SCSS_PLL != rcu_system_clock_source_get())
00004e  bf00              NOP      
                  |L2.80|
000050  f7fffffe          BL       rcu_system_clock_source_get
000054  2808              CMP      r0,#8
000056  d1fb              BNE      |L2.80|
000058  e01b              B        |L2.146|
                  |L2.90|
;;;71     			;
;;;72     	}
;;;73     	else
;;;74     	{
;;;75     		// configure the AHB prescaler selection
;;;76     		rcu_ahb_clock_config(RCU_AHB_CKSYS_DIV1);
00005a  2000              MOVS     r0,#0
00005c  f7fffffe          BL       rcu_ahb_clock_config
;;;77     		// configure the APB1 prescaler selection
;;;78     		rcu_apb1_clock_config(RCU_APB1_CKAHB_DIV2);
000060  f44f6080          MOV      r0,#0x400
000064  f7fffffe          BL       rcu_apb1_clock_config
;;;79     		// configure the APB2 prescaler selection
;;;80     		rcu_apb2_clock_config(RCU_APB2_CKAHB_DIV1);
000068  2000              MOVS     r0,#0
00006a  f7fffffe          BL       rcu_apb2_clock_config
;;;81     
;;;82     		// configure the PLL clock source selection and PLL multiply factor
;;;83     		rcu_pll_config(RCU_PLLSRC_IRC8M_DIV2, RCU_PLL_MUL18);
00006e  4909              LDR      r1,|L2.148|
000070  2000              MOVS     r0,#0
000072  f7fffffe          BL       rcu_pll_config
;;;84     
;;;85     		rcu_osci_on(RCU_PLL_CK);
000076  2018              MOVS     r0,#0x18
000078  f7fffffe          BL       rcu_osci_on
;;;86     
;;;87     		rcu_osci_stab_wait(RCU_PLL_CK);
00007c  2018              MOVS     r0,#0x18
00007e  f7fffffe          BL       rcu_osci_stab_wait
;;;88     
;;;89     		rcu_system_clock_source_config(RCU_CKSYSSRC_PLL);
000082  2002              MOVS     r0,#2
000084  f7fffffe          BL       rcu_system_clock_source_config
;;;90     
;;;91     		while (RCU_SCSS_PLL != rcu_system_clock_source_get())
000088  bf00              NOP      
                  |L2.138|
00008a  f7fffffe          BL       rcu_system_clock_source_get
00008e  2808              CMP      r0,#8
000090  d1fb              BNE      |L2.138|
                  |L2.146|
;;;92     			;
;;;93     	}
;;;94     }
000092  bd10              POP      {r4,pc}
;;;95     
                          ENDP

                  |L2.148|
                          DCD      0x08040000

                          AREA ||i.SYSTEM_Init||, CODE, READONLY, ALIGN=1

                  SYSTEM_Init PROC
;;;8      // 系统硬件底层配置
;;;9      void SYSTEM_Init(void)
000000  b510              PUSH     {r4,lr}
;;;10     {
;;;11     	// 系统各运行时钟配置
;;;12     	RCC_HSE_Configuration();
000002  f7fffffe          BL       RCC_HSE_Configuration
;;;13     	// 更新内核运行时钟变量
;;;14     	SystemCoreClockUpdate();
000006  f7fffffe          BL       SystemCoreClockUpdate
;;;15     
;;;16     	// 配置中断分组情况
;;;17     	NVIC_Configuration();
00000a  f7fffffe          BL       NVIC_Configuration
;;;18     
;;;19     	// 中断向量表偏移2017.7.23
;;;20     #if __SYSTEM_DEBUG__
;;;21     #else
;;;22     	nvic_vector_table_set(NVIC_VECTTAB_FLASH, 0x8000);
00000e  f44f4100          MOV      r1,#0x8000
000012  0308              LSLS     r0,r1,#12
000014  f7fffffe          BL       nvic_vector_table_set
;;;23     #endif
;;;24     }
000018  bd10              POP      {r4,pc}
;;;25     
                          ENDP


                          AREA ||i.SYSTEM_Rst||, CODE, READONLY, ALIGN=2

                  SYSTEM_Rst PROC
;;;26     // 系统总复位
;;;27     void SYSTEM_Rst(uint32 param)
000000  b671              CPSID    f
;;;28     {
;;;29     	__disable_fault_irq();
;;;30     	NVIC_SystemReset();
000002  bf00              NOP      
000004  f3bf8f4f          DSB      
000008  4806              LDR      r0,|L4.36|
00000a  6800              LDR      r0,[r0,#0]
00000c  f40060e0          AND      r0,r0,#0x700
000010  4905              LDR      r1,|L4.40|
000012  4308              ORRS     r0,r0,r1
000014  1d00              ADDS     r0,r0,#4
000016  4903              LDR      r1,|L4.36|
000018  6008              STR      r0,[r1,#0]
00001a  f3bf8f4f          DSB      
00001e  bf00              NOP      
000020  bf00              NOP      
                  |L4.34|
000022  e7fe              B        |L4.34|
;;;31     }
;;;32     
                          ENDP

                  |L4.36|
                          DCD      0xe000ed0c
                  |L4.40|
                          DCD      0x05fa0000

;*** Start embedded assembler ***

#line 1 "User\\system.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_system_c_0ddda8e4____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___8_system_c_0ddda8e4____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_system_c_0ddda8e4____REVSH|
#line 128
|__asm___8_system_c_0ddda8e4____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
