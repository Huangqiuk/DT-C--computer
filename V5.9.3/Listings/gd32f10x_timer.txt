; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\gd32f10x_timer.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\gd32f10x_timer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -I.\User\qrencode -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\gd32f10x_timer.crf Libraries\src\gd32f10x_timer.c]
                          THUMB

                          AREA ||i.timer_auto_reload_shadow_disable||, CODE, READONLY, ALIGN=1

                  timer_auto_reload_shadow_disable PROC
;;;233    */
;;;234    void timer_auto_reload_shadow_disable(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;235    {
;;;236        TIMER_CTL0(timer_periph) &= ~(uint32_t)TIMER_CTL0_ARSE;
000002  f0210180          BIC      r1,r1,#0x80
000006  6001              STR      r1,[r0,#0]
;;;237    }
000008  4770              BX       lr
;;;238    
                          ENDP


                          AREA ||i.timer_auto_reload_shadow_enable||, CODE, READONLY, ALIGN=1

                  timer_auto_reload_shadow_enable PROC
;;;222    */
;;;223    void timer_auto_reload_shadow_enable(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;224    {
;;;225        TIMER_CTL0(timer_periph) |= (uint32_t)TIMER_CTL0_ARSE;
000002  f0410180          ORR      r1,r1,#0x80
000006  6001              STR      r1,[r0,#0]
;;;226    }
000008  4770              BX       lr
;;;227    
                          ENDP


                          AREA ||i.timer_automatic_output_disable||, CODE, READONLY, ALIGN=1

                  timer_automatic_output_disable PROC
;;;625    */
;;;626    void timer_automatic_output_disable(uint32_t timer_periph)
000000  6c41              LDR      r1,[r0,#0x44]
;;;627    {
;;;628        TIMER_CCHP(timer_periph) &= ~(uint32_t)TIMER_CCHP_OAEN;
000002  f4214180          BIC      r1,r1,#0x4000
000006  6441              STR      r1,[r0,#0x44]
;;;629    }
000008  4770              BX       lr
;;;630    
                          ENDP


                          AREA ||i.timer_automatic_output_enable||, CODE, READONLY, ALIGN=1

                  timer_automatic_output_enable PROC
;;;614    */
;;;615    void timer_automatic_output_enable(uint32_t timer_periph)
000000  6c41              LDR      r1,[r0,#0x44]
;;;616    {
;;;617        TIMER_CCHP(timer_periph) |= (uint32_t)TIMER_CCHP_OAEN;
000002  f4414180          ORR      r1,r1,#0x4000
000006  6441              STR      r1,[r0,#0x44]
;;;618    }
000008  4770              BX       lr
;;;619    
                          ENDP


                          AREA ||i.timer_autoreload_value_config||, CODE, READONLY, ALIGN=1

                  timer_autoreload_value_config PROC
;;;339    */         
;;;340    void timer_autoreload_value_config(uint32_t timer_periph, uint32_t autoreload)
000000  62c1              STR      r1,[r0,#0x2c]
;;;341    {
;;;342        TIMER_CAR(timer_periph) = (uint32_t)autoreload;
;;;343    }
000002  4770              BX       lr
;;;344    
                          ENDP


                          AREA ||i.timer_break_config||, CODE, READONLY, ALIGN=1

                  timer_break_config PROC
;;;575    */
;;;576    void timer_break_config(uint32_t timer_periph, timer_break_parameter_struct* breakpara)
000000  880a              LDRH     r2,[r1,#0]
;;;577    {
;;;578        TIMER_CCHP(timer_periph) = (uint32_t)(((uint32_t)(breakpara->runoffstate)) |
000002  884b              LDRH     r3,[r1,#2]
000004  431a              ORRS     r2,r2,r3
000006  888b              LDRH     r3,[r1,#4]
000008  431a              ORRS     r2,r2,r3
00000a  88cb              LDRH     r3,[r1,#6]
00000c  431a              ORRS     r2,r2,r3
00000e  890b              LDRH     r3,[r1,#8]
000010  431a              ORRS     r2,r2,r3
000012  894b              LDRH     r3,[r1,#0xa]
000014  431a              ORRS     r2,r2,r3
000016  898b              LDRH     r3,[r1,#0xc]
000018  431a              ORRS     r2,r2,r3
00001a  6442              STR      r2,[r0,#0x44]
;;;579                                              ((uint32_t)(breakpara->ideloffstate)) |
;;;580                                              ((uint32_t)(breakpara->deadtime)) |
;;;581                                              ((uint32_t)(breakpara->breakpolarity)) |
;;;582                                              ((uint32_t)(breakpara->outputautostate)) |
;;;583                                              ((uint32_t)(breakpara->protectmode)) |
;;;584                                              ((uint32_t)(breakpara->breakstate))) ;
;;;585    }
00001c  4770              BX       lr
;;;586    
                          ENDP


                          AREA ||i.timer_break_disable||, CODE, READONLY, ALIGN=1

                  timer_break_disable PROC
;;;603    */
;;;604    void timer_break_disable(uint32_t timer_periph)
000000  6c41              LDR      r1,[r0,#0x44]
;;;605    {
;;;606        TIMER_CCHP(timer_periph) &= ~(uint32_t)TIMER_CCHP_BRKEN;
000002  f4215180          BIC      r1,r1,#0x1000
000006  6441              STR      r1,[r0,#0x44]
;;;607    }
000008  4770              BX       lr
;;;608    
                          ENDP


                          AREA ||i.timer_break_enable||, CODE, READONLY, ALIGN=1

                  timer_break_enable PROC
;;;592    */
;;;593    void timer_break_enable(uint32_t timer_periph)
000000  6c41              LDR      r1,[r0,#0x44]
;;;594    {
;;;595        TIMER_CCHP(timer_periph) |= (uint32_t)TIMER_CCHP_BRKEN;
000002  f4415180          ORR      r1,r1,#0x1000
000006  6441              STR      r1,[r0,#0x44]
;;;596    }
000008  4770              BX       lr
;;;597    
                          ENDP


                          AREA ||i.timer_break_struct_para_init||, CODE, READONLY, ALIGN=1

                  timer_break_struct_para_init PROC
;;;549    */
;;;550    void timer_break_struct_para_init(timer_break_parameter_struct* breakpara)
000000  2100              MOVS     r1,#0
;;;551    {
;;;552        /* initialize the break parameter struct member with the default value */
;;;553        breakpara->runoffstate     = TIMER_ROS_STATE_DISABLE;
000002  8001              STRH     r1,[r0,#0]
;;;554        breakpara->ideloffstate    = TIMER_IOS_STATE_DISABLE;
000004  8041              STRH     r1,[r0,#2]
;;;555        breakpara->deadtime        = 0U;
000006  8081              STRH     r1,[r0,#4]
;;;556        breakpara->breakpolarity   = TIMER_BREAK_POLARITY_LOW;
000008  80c1              STRH     r1,[r0,#6]
;;;557        breakpara->outputautostate = TIMER_OUTAUTO_DISABLE;
00000a  8101              STRH     r1,[r0,#8]
;;;558        breakpara->protectmode     = TIMER_CCHP_PROT_OFF;
00000c  8141              STRH     r1,[r0,#0xa]
;;;559        breakpara->breakstate      = TIMER_BREAK_DISABLE;
00000e  8181              STRH     r1,[r0,#0xc]
;;;560    }
000010  4770              BX       lr
;;;561    
                          ENDP


                          AREA ||i.timer_channel_capture_value_register_read||, CODE, READONLY, ALIGN=1

                  timer_channel_capture_value_register_read PROC
;;;1402   */
;;;1403   uint32_t timer_channel_capture_value_register_read(uint32_t timer_periph, uint16_t channel)
000000  4602              MOV      r2,r0
;;;1404   {
;;;1405       uint32_t count_value = 0U;
000002  2000              MOVS     r0,#0
;;;1406   
;;;1407       switch(channel){
000004  b131              CBZ      r1,|L10.20|
000006  2901              CMP      r1,#1
000008  d006              BEQ      |L10.24|
00000a  2902              CMP      r1,#2
00000c  d006              BEQ      |L10.28|
00000e  2903              CMP      r1,#3
000010  d108              BNE      |L10.36|
000012  e005              B        |L10.32|
                  |L10.20|
;;;1408       case TIMER_CH_0:
;;;1409           /* read TIMER channel 0 capture compare register value */
;;;1410           count_value = TIMER_CH0CV(timer_periph);
000014  6b50              LDR      r0,[r2,#0x34]
;;;1411           break;
000016  e006              B        |L10.38|
                  |L10.24|
;;;1412       case TIMER_CH_1:
;;;1413           /* read TIMER channel 1 capture compare register value */
;;;1414           count_value = TIMER_CH1CV(timer_periph);
000018  6b90              LDR      r0,[r2,#0x38]
;;;1415           break;
00001a  e004              B        |L10.38|
                  |L10.28|
;;;1416       case TIMER_CH_2:
;;;1417           /* read TIMER channel 2 capture compare register value */
;;;1418           count_value = TIMER_CH2CV(timer_periph);
00001c  6bd0              LDR      r0,[r2,#0x3c]
;;;1419           break;
00001e  e002              B        |L10.38|
                  |L10.32|
;;;1420       case TIMER_CH_3:
;;;1421           /* read TIMER channel 3 capture compare register value */
;;;1422           count_value = TIMER_CH3CV(timer_periph);
000020  6c10              LDR      r0,[r2,#0x40]
;;;1423           break;
000022  e000              B        |L10.38|
                  |L10.36|
;;;1424       default:
;;;1425           break;
000024  bf00              NOP      
                  |L10.38|
000026  bf00              NOP                            ;1411
;;;1426       }
;;;1427       return (count_value);
;;;1428   }
000028  4770              BX       lr
;;;1429   
                          ENDP


                          AREA ||i.timer_channel_complementary_output_polarity_config||, CODE, READONLY, ALIGN=1

                  timer_channel_complementary_output_polarity_config PROC
;;;1117   */
;;;1118   void timer_channel_complementary_output_polarity_config(uint32_t timer_periph, uint16_t channel, uint16_t ocnpolarity)
000000  b121              CBZ      r1,|L11.12|
;;;1119   {
;;;1120       switch(channel){
000002  2901              CMP      r1,#1
000004  d00a              BEQ      |L11.28|
000006  2902              CMP      r1,#2
000008  d11a              BNE      |L11.64|
00000a  e010              B        |L11.46|
                  |L11.12|
;;;1121       /* configure TIMER_CH_0 */
;;;1122       case TIMER_CH_0:
;;;1123           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0NP);
00000c  6a03              LDR      r3,[r0,#0x20]
00000e  f0230308          BIC      r3,r3,#8
000012  6203              STR      r3,[r0,#0x20]
;;;1124           TIMER_CHCTL2(timer_periph) |= (uint32_t)ocnpolarity;
000014  6a03              LDR      r3,[r0,#0x20]
000016  4313              ORRS     r3,r3,r2
000018  6203              STR      r3,[r0,#0x20]
;;;1125           break;
00001a  e012              B        |L11.66|
                  |L11.28|
;;;1126       /* configure TIMER_CH_1 */
;;;1127       case TIMER_CH_1:
;;;1128           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1NP);
00001c  6a03              LDR      r3,[r0,#0x20]
00001e  f0230380          BIC      r3,r3,#0x80
000022  6203              STR      r3,[r0,#0x20]
;;;1129           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocnpolarity << 4U);
000024  6a03              LDR      r3,[r0,#0x20]
000026  ea431302          ORR      r3,r3,r2,LSL #4
00002a  6203              STR      r3,[r0,#0x20]
;;;1130           break;
00002c  e009              B        |L11.66|
                  |L11.46|
;;;1131       /* configure TIMER_CH_2 */
;;;1132       case TIMER_CH_2:
;;;1133           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2NP);
00002e  6a03              LDR      r3,[r0,#0x20]
000030  f4236300          BIC      r3,r3,#0x800
000034  6203              STR      r3,[r0,#0x20]
;;;1134           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocnpolarity << 8U);
000036  6a03              LDR      r3,[r0,#0x20]
000038  ea432302          ORR      r3,r3,r2,LSL #8
00003c  6203              STR      r3,[r0,#0x20]
;;;1135           break;
00003e  e000              B        |L11.66|
                  |L11.64|
;;;1136       default:
;;;1137           break;
000040  bf00              NOP      
                  |L11.66|
000042  bf00              NOP                            ;1125
;;;1138       }
;;;1139   }
000044  4770              BX       lr
;;;1140   
                          ENDP


                          AREA ||i.timer_channel_complementary_output_state_config||, CODE, READONLY, ALIGN=1

                  timer_channel_complementary_output_state_config PROC
;;;1199   */
;;;1200   void timer_channel_complementary_output_state_config(uint32_t timer_periph, uint16_t channel, uint16_t ocnstate)
000000  b121              CBZ      r1,|L12.12|
;;;1201   {
;;;1202       switch(channel){
000002  2901              CMP      r1,#1
000004  d00a              BEQ      |L12.28|
000006  2902              CMP      r1,#2
000008  d11a              BNE      |L12.64|
00000a  e010              B        |L12.46|
                  |L12.12|
;;;1203       /* configure TIMER_CH_0 */
;;;1204       case TIMER_CH_0:
;;;1205           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0NEN);
00000c  6a03              LDR      r3,[r0,#0x20]
00000e  f0230304          BIC      r3,r3,#4
000012  6203              STR      r3,[r0,#0x20]
;;;1206           TIMER_CHCTL2(timer_periph) |= (uint32_t)ocnstate;
000014  6a03              LDR      r3,[r0,#0x20]
000016  4313              ORRS     r3,r3,r2
000018  6203              STR      r3,[r0,#0x20]
;;;1207           break;
00001a  e012              B        |L12.66|
                  |L12.28|
;;;1208       /* configure TIMER_CH_1 */
;;;1209       case TIMER_CH_1:
;;;1210           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1NEN);
00001c  6a03              LDR      r3,[r0,#0x20]
00001e  f0230340          BIC      r3,r3,#0x40
000022  6203              STR      r3,[r0,#0x20]
;;;1211           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocnstate << 4U);
000024  6a03              LDR      r3,[r0,#0x20]
000026  ea431302          ORR      r3,r3,r2,LSL #4
00002a  6203              STR      r3,[r0,#0x20]
;;;1212           break;
00002c  e009              B        |L12.66|
                  |L12.46|
;;;1213       /* configure TIMER_CH_2 */
;;;1214       case TIMER_CH_2:
;;;1215           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2NEN);
00002e  6a03              LDR      r3,[r0,#0x20]
000030  f4236380          BIC      r3,r3,#0x400
000034  6203              STR      r3,[r0,#0x20]
;;;1216           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocnstate << 8U);
000036  6a03              LDR      r3,[r0,#0x20]
000038  ea432302          ORR      r3,r3,r2,LSL #8
00003c  6203              STR      r3,[r0,#0x20]
;;;1217           break;
00003e  e000              B        |L12.66|
                  |L12.64|
;;;1218       default:
;;;1219           break;
000040  bf00              NOP      
                  |L12.66|
000042  bf00              NOP                            ;1207
;;;1220       }
;;;1221   }
000044  4770              BX       lr
;;;1222   
                          ENDP


                          AREA ||i.timer_channel_control_shadow_config||, CODE, READONLY, ALIGN=1

                  timer_channel_control_shadow_config PROC
;;;653    */
;;;654    void timer_channel_control_shadow_config(uint32_t timer_periph, ControlStatus newvalue)
000000  2901              CMP      r1,#1
;;;655    {
;;;656         if(ENABLE == newvalue){
000002  d104              BNE      |L13.14|
;;;657            TIMER_CTL1(timer_periph) |= (uint32_t)TIMER_CTL1_CCSE;
000004  6842              LDR      r2,[r0,#4]
000006  f0420201          ORR      r2,r2,#1
00000a  6042              STR      r2,[r0,#4]
00000c  e003              B        |L13.22|
                  |L13.14|
;;;658        }else{
;;;659            TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_CCSE);
00000e  6842              LDR      r2,[r0,#4]
000010  f0220201          BIC      r2,r2,#1
000014  6042              STR      r2,[r0,#4]
                  |L13.22|
;;;660        }
;;;661    }
000016  4770              BX       lr
;;;662    
                          ENDP


                          AREA ||i.timer_channel_control_shadow_update_config||, CODE, READONLY, ALIGN=1

                  timer_channel_control_shadow_update_config PROC
;;;672    */              
;;;673    void timer_channel_control_shadow_update_config(uint32_t timer_periph, uint32_t ccuctl)
000000  b921              CBNZ     r1,|L14.12|
;;;674    {
;;;675        if(TIMER_UPDATECTL_CCU == ccuctl){
;;;676            TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_CCUC);
000002  6842              LDR      r2,[r0,#4]
000004  f0220204          BIC      r2,r2,#4
000008  6042              STR      r2,[r0,#4]
00000a  e005              B        |L14.24|
                  |L14.12|
;;;677        }else if(TIMER_UPDATECTL_CCUTRI == ccuctl){
00000c  2904              CMP      r1,#4
00000e  d103              BNE      |L14.24|
;;;678            TIMER_CTL1(timer_periph) |= (uint32_t)TIMER_CTL1_CCUC;
000010  6842              LDR      r2,[r0,#4]
000012  f0420204          ORR      r2,r2,#4
000016  6042              STR      r2,[r0,#4]
                  |L14.24|
;;;679        }else{
;;;680            /* illegal parameters */        
;;;681        }
;;;682    }
000018  4770              BX       lr
;;;683    
                          ENDP


                          AREA ||i.timer_channel_dma_request_source_select||, CODE, READONLY, ALIGN=1

                  timer_channel_dma_request_source_select PROC
;;;475    */
;;;476    void timer_channel_dma_request_source_select(uint32_t timer_periph, uint32_t dma_request)
000000  2908              CMP      r1,#8
;;;477    {
;;;478        if(TIMER_DMAREQUEST_UPDATEEVENT == dma_request){
000002  d104              BNE      |L15.14|
;;;479            TIMER_CTL1(timer_periph) |= (uint32_t)TIMER_CTL1_DMAS;
000004  6842              LDR      r2,[r0,#4]
000006  f0420208          ORR      r2,r2,#8
00000a  6042              STR      r2,[r0,#4]
00000c  e004              B        |L15.24|
                  |L15.14|
;;;480        }else if(TIMER_DMAREQUEST_CHANNELEVENT == dma_request){
00000e  b919              CBNZ     r1,|L15.24|
;;;481            TIMER_CTL1(timer_periph) &= ~(uint32_t)TIMER_CTL1_DMAS;
000010  6842              LDR      r2,[r0,#4]
000012  f0220208          BIC      r2,r2,#8
000016  6042              STR      r2,[r0,#4]
                  |L15.24|
;;;482        }else{
;;;483            /* illegal parameters */        
;;;484        }
;;;485    }
000018  4770              BX       lr
;;;486    
                          ENDP


                          AREA ||i.timer_channel_input_capture_prescaler_config||, CODE, READONLY, ALIGN=1

                  timer_channel_input_capture_prescaler_config PROC
;;;1362   */
;;;1363   void timer_channel_input_capture_prescaler_config(uint32_t timer_periph, uint16_t channel, uint16_t prescaler)
000000  b131              CBZ      r1,|L16.16|
;;;1364   {
;;;1365       switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L16.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L16.50|
00000a  2903              CMP      r1,#3
00000c  d122              BNE      |L16.84|
00000e  e018              B        |L16.66|
                  |L16.16|
;;;1366       /* configure TIMER_CH_0 */
;;;1367       case TIMER_CH_0:
;;;1368           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0CAPPSC);
000010  6983              LDR      r3,[r0,#0x18]
000012  f023030c          BIC      r3,r3,#0xc
000016  6183              STR      r3,[r0,#0x18]
;;;1369           TIMER_CHCTL0(timer_periph) |= (uint32_t)prescaler;
000018  6983              LDR      r3,[r0,#0x18]
00001a  4313              ORRS     r3,r3,r2
00001c  6183              STR      r3,[r0,#0x18]
;;;1370           break;
00001e  e01a              B        |L16.86|
                  |L16.32|
;;;1371       /* configure TIMER_CH_1 */
;;;1372       case TIMER_CH_1:
;;;1373           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1CAPPSC);
000020  6983              LDR      r3,[r0,#0x18]
000022  f4236340          BIC      r3,r3,#0xc00
000026  6183              STR      r3,[r0,#0x18]
;;;1374           TIMER_CHCTL0(timer_periph) |= ((uint32_t)prescaler << 8U);
000028  6983              LDR      r3,[r0,#0x18]
00002a  ea432302          ORR      r3,r3,r2,LSL #8
00002e  6183              STR      r3,[r0,#0x18]
;;;1375           break;
000030  e011              B        |L16.86|
                  |L16.50|
;;;1376       /* configure TIMER_CH_2 */
;;;1377       case TIMER_CH_2:
;;;1378           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2CAPPSC);
000032  69c3              LDR      r3,[r0,#0x1c]
000034  f023030c          BIC      r3,r3,#0xc
000038  61c3              STR      r3,[r0,#0x1c]
;;;1379           TIMER_CHCTL1(timer_periph) |= (uint32_t)prescaler;
00003a  69c3              LDR      r3,[r0,#0x1c]
00003c  4313              ORRS     r3,r3,r2
00003e  61c3              STR      r3,[r0,#0x1c]
;;;1380           break;
000040  e009              B        |L16.86|
                  |L16.66|
;;;1381       /* configure TIMER_CH_3 */
;;;1382       case TIMER_CH_3:
;;;1383           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3CAPPSC);
000042  69c3              LDR      r3,[r0,#0x1c]
000044  f4236340          BIC      r3,r3,#0xc00
000048  61c3              STR      r3,[r0,#0x1c]
;;;1384           TIMER_CHCTL1(timer_periph) |= ((uint32_t)prescaler << 8U);
00004a  69c3              LDR      r3,[r0,#0x1c]
00004c  ea432302          ORR      r3,r3,r2,LSL #8
000050  61c3              STR      r3,[r0,#0x1c]
;;;1385           break;
000052  e000              B        |L16.86|
                  |L16.84|
;;;1386       default:
;;;1387           break;
000054  bf00              NOP      
                  |L16.86|
000056  bf00              NOP                            ;1370
;;;1388       }
;;;1389   }
000058  4770              BX       lr
;;;1390   
                          ENDP


                          AREA ||i.timer_channel_input_struct_para_init||, CODE, READONLY, ALIGN=1

                  timer_channel_input_struct_para_init PROC
;;;1228   */
;;;1229   void timer_channel_input_struct_para_init(timer_ic_parameter_struct* icpara)
000000  2100              MOVS     r1,#0
;;;1230   {
;;;1231       /* initialize the channel input parameter struct member with the default value */
;;;1232       icpara->icpolarity  = TIMER_IC_POLARITY_RISING;
000002  8001              STRH     r1,[r0,#0]
;;;1233       icpara->icselection = TIMER_IC_SELECTION_DIRECTTI;
000004  2101              MOVS     r1,#1
000006  8041              STRH     r1,[r0,#2]
;;;1234       icpara->icprescaler = TIMER_IC_PSC_DIV1;
000008  2100              MOVS     r1,#0
00000a  8081              STRH     r1,[r0,#4]
;;;1235       icpara->icfilter    = 0U;
00000c  80c1              STRH     r1,[r0,#6]
;;;1236   }
00000e  4770              BX       lr
;;;1237   
                          ENDP


                          AREA ||i.timer_channel_output_clear_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_clear_config PROC
;;;1030   */
;;;1031   void timer_channel_output_clear_config(uint32_t timer_periph, uint16_t channel, uint16_t occlear)
000000  b131              CBZ      r1,|L18.16|
;;;1032   {
;;;1033       switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L18.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L18.50|
00000a  2903              CMP      r1,#3
00000c  d122              BNE      |L18.84|
00000e  e018              B        |L18.66|
                  |L18.16|
;;;1034       /* configure TIMER_CH_0 */
;;;1035       case TIMER_CH_0:
;;;1036           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0COMCEN);
000010  6983              LDR      r3,[r0,#0x18]
000012  f0230380          BIC      r3,r3,#0x80
000016  6183              STR      r3,[r0,#0x18]
;;;1037           TIMER_CHCTL0(timer_periph) |= (uint32_t)occlear;
000018  6983              LDR      r3,[r0,#0x18]
00001a  4313              ORRS     r3,r3,r2
00001c  6183              STR      r3,[r0,#0x18]
;;;1038           break;
00001e  e01a              B        |L18.86|
                  |L18.32|
;;;1039       /* configure TIMER_CH_1 */
;;;1040       case TIMER_CH_1:
;;;1041           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1COMCEN);
000020  6983              LDR      r3,[r0,#0x18]
000022  f4234300          BIC      r3,r3,#0x8000
000026  6183              STR      r3,[r0,#0x18]
;;;1042           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)occlear << 8U);
000028  6983              LDR      r3,[r0,#0x18]
00002a  ea432302          ORR      r3,r3,r2,LSL #8
00002e  6183              STR      r3,[r0,#0x18]
;;;1043           break;
000030  e011              B        |L18.86|
                  |L18.50|
;;;1044       /* configure TIMER_CH_2 */
;;;1045       case TIMER_CH_2:
;;;1046           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2COMCEN);
000032  69c3              LDR      r3,[r0,#0x1c]
000034  f0230380          BIC      r3,r3,#0x80
000038  61c3              STR      r3,[r0,#0x1c]
;;;1047           TIMER_CHCTL1(timer_periph) |= (uint32_t)occlear;
00003a  69c3              LDR      r3,[r0,#0x1c]
00003c  4313              ORRS     r3,r3,r2
00003e  61c3              STR      r3,[r0,#0x1c]
;;;1048           break;
000040  e009              B        |L18.86|
                  |L18.66|
;;;1049       /* configure TIMER_CH_3 */
;;;1050       case TIMER_CH_3:
;;;1051           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3COMCEN);
000042  69c3              LDR      r3,[r0,#0x1c]
000044  f4234300          BIC      r3,r3,#0x8000
000048  61c3              STR      r3,[r0,#0x1c]
;;;1052           TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)occlear << 8U);
00004a  69c3              LDR      r3,[r0,#0x1c]
00004c  ea432302          ORR      r3,r3,r2,LSL #8
000050  61c3              STR      r3,[r0,#0x1c]
;;;1053           break;
000052  e000              B        |L18.86|
                  |L18.84|
;;;1054       default:
;;;1055           break;
000054  bf00              NOP      
                  |L18.86|
000056  bf00              NOP                            ;1038
;;;1056       }
;;;1057   }
000058  4770              BX       lr
;;;1058   
                          ENDP


                          AREA ||i.timer_channel_output_config||, CODE, READONLY, ALIGN=2

                  timer_channel_output_config PROC
;;;719    */
;;;720    void timer_channel_output_config(uint32_t timer_periph, uint16_t channel, timer_oc_parameter_struct* ocpara)
000000  b510              PUSH     {r4,lr}
;;;721    {
;;;722        switch(channel){
000002  b131              CBZ      r1,|L19.18|
000004  2901              CMP      r1,#1
000006  d03f              BEQ      |L19.136|
000008  2902              CMP      r1,#2
00000a  d07d              BEQ      |L19.264|
00000c  2903              CMP      r1,#3
00000e  d17c              BNE      |L19.266|
000010  e0bf              B        |L19.402|
                  |L19.18|
;;;723        /* configure TIMER_CH_0 */
;;;724        case TIMER_CH_0:
;;;725            /* reset the CH0EN bit */
;;;726            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0EN);
000012  6a03              LDR      r3,[r0,#0x20]
000014  f0230301          BIC      r3,r3,#1
000018  6203              STR      r3,[r0,#0x20]
;;;727            TIMER_CHCTL0(timer_periph) &= ~(uint32_t)TIMER_CHCTL0_CH0MS;
00001a  6983              LDR      r3,[r0,#0x18]
00001c  f0230303          BIC      r3,r3,#3
000020  6183              STR      r3,[r0,#0x18]
;;;728            /* set the CH0EN bit */
;;;729            TIMER_CHCTL2(timer_periph) |= (uint32_t)ocpara->outputstate;
000022  6a03              LDR      r3,[r0,#0x20]
000024  8814              LDRH     r4,[r2,#0]
000026  4323              ORRS     r3,r3,r4
000028  6203              STR      r3,[r0,#0x20]
;;;730            /* reset the CH0P bit */
;;;731            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0P);
00002a  6a03              LDR      r3,[r0,#0x20]
00002c  f0230302          BIC      r3,r3,#2
000030  6203              STR      r3,[r0,#0x20]
;;;732            /* set the CH0P bit */
;;;733            TIMER_CHCTL2(timer_periph) |= (uint32_t)ocpara->ocpolarity;
000032  6a03              LDR      r3,[r0,#0x20]
000034  8894              LDRH     r4,[r2,#4]
000036  4323              ORRS     r3,r3,r4
000038  6203              STR      r3,[r0,#0x20]
;;;734    
;;;735            if((TIMER0 == timer_periph) || (TIMER7 == timer_periph)){
00003a  4b6a              LDR      r3,|L19.484|
00003c  4298              CMP      r0,r3
00003e  d002              BEQ      |L19.70|
000040  4b69              LDR      r3,|L19.488|
000042  4298              CMP      r0,r3
000044  d11f              BNE      |L19.134|
                  |L19.70|
;;;736                /* reset the CH0NEN bit */
;;;737                TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0NEN);
000046  6a03              LDR      r3,[r0,#0x20]
000048  f0230304          BIC      r3,r3,#4
00004c  6203              STR      r3,[r0,#0x20]
;;;738                /* set the CH0NEN bit */
;;;739                TIMER_CHCTL2(timer_periph) |= (uint32_t)ocpara->outputnstate;
00004e  6a03              LDR      r3,[r0,#0x20]
000050  8854              LDRH     r4,[r2,#2]
000052  4323              ORRS     r3,r3,r4
000054  6203              STR      r3,[r0,#0x20]
;;;740                /* reset the CH0NP bit */
;;;741                TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0NP);
000056  6a03              LDR      r3,[r0,#0x20]
000058  f0230308          BIC      r3,r3,#8
00005c  6203              STR      r3,[r0,#0x20]
;;;742                /* set the CH0NP bit */
;;;743                TIMER_CHCTL2(timer_periph) |= (uint32_t)ocpara->ocnpolarity;
00005e  6a03              LDR      r3,[r0,#0x20]
000060  88d4              LDRH     r4,[r2,#6]
000062  4323              ORRS     r3,r3,r4
000064  6203              STR      r3,[r0,#0x20]
;;;744                /* reset the ISO0 bit */
;;;745                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO0);
000066  6843              LDR      r3,[r0,#4]
000068  f4237380          BIC      r3,r3,#0x100
00006c  6043              STR      r3,[r0,#4]
;;;746                /* set the ISO0 bit */
;;;747                TIMER_CTL1(timer_periph) |= (uint32_t)ocpara->ocidlestate;
00006e  6843              LDR      r3,[r0,#4]
000070  8914              LDRH     r4,[r2,#8]
000072  4323              ORRS     r3,r3,r4
000074  6043              STR      r3,[r0,#4]
;;;748                /* reset the ISO0N bit */
;;;749                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO0N);
000076  6843              LDR      r3,[r0,#4]
000078  f4237300          BIC      r3,r3,#0x200
00007c  6043              STR      r3,[r0,#4]
;;;750                /* set the ISO0N bit */
;;;751                TIMER_CTL1(timer_periph) |= (uint32_t)ocpara->ocnidlestate;
00007e  6843              LDR      r3,[r0,#4]
000080  8954              LDRH     r4,[r2,#0xa]
000082  4323              ORRS     r3,r3,r4
000084  6043              STR      r3,[r0,#4]
                  |L19.134|
;;;752            }
;;;753            break;
000086  e0ab              B        |L19.480|
                  |L19.136|
;;;754        /* configure TIMER_CH_1 */
;;;755        case TIMER_CH_1:
;;;756            /* reset the CH1EN bit */
;;;757            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1EN);
000088  6a03              LDR      r3,[r0,#0x20]
00008a  f0230310          BIC      r3,r3,#0x10
00008e  6203              STR      r3,[r0,#0x20]
;;;758            TIMER_CHCTL0(timer_periph) &= ~(uint32_t)TIMER_CHCTL0_CH1MS;
000090  6983              LDR      r3,[r0,#0x18]
000092  f4237340          BIC      r3,r3,#0x300
000096  6183              STR      r3,[r0,#0x18]
;;;759            /* set the CH1EN bit */
;;;760            TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->outputstate) << 4U);
000098  6a03              LDR      r3,[r0,#0x20]
00009a  8814              LDRH     r4,[r2,#0]
00009c  ea431304          ORR      r3,r3,r4,LSL #4
0000a0  6203              STR      r3,[r0,#0x20]
;;;761            /* reset the CH1P bit */
;;;762            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1P);
0000a2  6a03              LDR      r3,[r0,#0x20]
0000a4  f0230320          BIC      r3,r3,#0x20
0000a8  6203              STR      r3,[r0,#0x20]
;;;763            /* set the CH1P bit */
;;;764            TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocpolarity)<< 4U);
0000aa  6a03              LDR      r3,[r0,#0x20]
0000ac  8894              LDRH     r4,[r2,#4]
0000ae  ea431304          ORR      r3,r3,r4,LSL #4
0000b2  6203              STR      r3,[r0,#0x20]
;;;765    
;;;766            if((TIMER0 == timer_periph) || (TIMER7 == timer_periph)){
0000b4  4b4b              LDR      r3,|L19.484|
0000b6  4298              CMP      r0,r3
0000b8  d002              BEQ      |L19.192|
0000ba  4b4b              LDR      r3,|L19.488|
0000bc  4298              CMP      r0,r3
0000be  d126              BNE      |L19.270|
                  |L19.192|
;;;767                /* reset the CH1NEN bit */
;;;768                TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1NEN);
0000c0  6a03              LDR      r3,[r0,#0x20]
0000c2  f0230340          BIC      r3,r3,#0x40
0000c6  6203              STR      r3,[r0,#0x20]
;;;769                /* set the CH1NEN bit */
;;;770                TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->outputnstate)<< 4U);
0000c8  6a03              LDR      r3,[r0,#0x20]
0000ca  8854              LDRH     r4,[r2,#2]
0000cc  ea431304          ORR      r3,r3,r4,LSL #4
0000d0  6203              STR      r3,[r0,#0x20]
;;;771                /* reset the CH1NP bit */
;;;772                TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1NP);
0000d2  6a03              LDR      r3,[r0,#0x20]
0000d4  f0230380          BIC      r3,r3,#0x80
0000d8  6203              STR      r3,[r0,#0x20]
;;;773                /* set the CH1NP bit */
;;;774                TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocnpolarity)<< 4U);
0000da  6a03              LDR      r3,[r0,#0x20]
0000dc  88d4              LDRH     r4,[r2,#6]
0000de  ea431304          ORR      r3,r3,r4,LSL #4
0000e2  6203              STR      r3,[r0,#0x20]
;;;775                /* reset the ISO1 bit */
;;;776                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO1);
0000e4  6843              LDR      r3,[r0,#4]
0000e6  f4236380          BIC      r3,r3,#0x400
0000ea  6043              STR      r3,[r0,#4]
;;;777                /* set the ISO1 bit */
;;;778                TIMER_CTL1(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocidlestate)<< 2U);
0000ec  6843              LDR      r3,[r0,#4]
0000ee  8914              LDRH     r4,[r2,#8]
0000f0  ea430384          ORR      r3,r3,r4,LSL #2
0000f4  6043              STR      r3,[r0,#4]
;;;779                /* reset the ISO1N bit */
;;;780                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO1N);
0000f6  6843              LDR      r3,[r0,#4]
0000f8  f4236300          BIC      r3,r3,#0x800
0000fc  6043              STR      r3,[r0,#4]
;;;781                /* set the ISO1N bit */
;;;782                TIMER_CTL1(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocnidlestate)<< 2U);
0000fe  6843              LDR      r3,[r0,#4]
000100  8954              LDRH     r4,[r2,#0xa]
000102  ea430384          ORR      r3,r3,r4,LSL #2
000106  e001              B        |L19.268|
                  |L19.264|
000108  e002              B        |L19.272|
                  |L19.266|
00010a  e068              B        |L19.478|
                  |L19.268|
00010c  6043              STR      r3,[r0,#4]
                  |L19.270|
;;;783            }
;;;784            break;
00010e  e067              B        |L19.480|
                  |L19.272|
;;;785        /* configure TIMER_CH_2 */
;;;786        case TIMER_CH_2:
;;;787            /* reset the CH2EN bit */
;;;788            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2EN);
000110  6a03              LDR      r3,[r0,#0x20]
000112  f4237380          BIC      r3,r3,#0x100
000116  6203              STR      r3,[r0,#0x20]
;;;789            TIMER_CHCTL1(timer_periph) &= ~(uint32_t)TIMER_CHCTL1_CH2MS;
000118  69c3              LDR      r3,[r0,#0x1c]
00011a  f0230303          BIC      r3,r3,#3
00011e  61c3              STR      r3,[r0,#0x1c]
;;;790            /* set the CH2EN bit */
;;;791            TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->outputstate) << 8U);
000120  6a03              LDR      r3,[r0,#0x20]
000122  8814              LDRH     r4,[r2,#0]
000124  ea432304          ORR      r3,r3,r4,LSL #8
000128  6203              STR      r3,[r0,#0x20]
;;;792            /* reset the CH2P bit */
;;;793            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2P);
00012a  6a03              LDR      r3,[r0,#0x20]
00012c  f4237300          BIC      r3,r3,#0x200
000130  6203              STR      r3,[r0,#0x20]
;;;794            /* set the CH2P bit */
;;;795            TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocpolarity)<< 8U);
000132  6a03              LDR      r3,[r0,#0x20]
000134  8894              LDRH     r4,[r2,#4]
000136  ea432304          ORR      r3,r3,r4,LSL #8
00013a  6203              STR      r3,[r0,#0x20]
;;;796    
;;;797            if((TIMER0 == timer_periph) || (TIMER7 == timer_periph)){
00013c  4b29              LDR      r3,|L19.484|
00013e  4298              CMP      r0,r3
000140  d002              BEQ      |L19.328|
000142  4b29              LDR      r3,|L19.488|
000144  4298              CMP      r0,r3
000146  d123              BNE      |L19.400|
                  |L19.328|
;;;798                /* reset the CH2NEN bit */
;;;799                TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2NEN);
000148  6a03              LDR      r3,[r0,#0x20]
00014a  f4236380          BIC      r3,r3,#0x400
00014e  6203              STR      r3,[r0,#0x20]
;;;800                /* set the CH2NEN bit */
;;;801                TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->outputnstate)<< 8U);
000150  6a03              LDR      r3,[r0,#0x20]
000152  8854              LDRH     r4,[r2,#2]
000154  ea432304          ORR      r3,r3,r4,LSL #8
000158  6203              STR      r3,[r0,#0x20]
;;;802                /* reset the CH2NP bit */
;;;803                TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2NP);
00015a  6a03              LDR      r3,[r0,#0x20]
00015c  f4236300          BIC      r3,r3,#0x800
000160  6203              STR      r3,[r0,#0x20]
;;;804                /* set the CH2NP bit */
;;;805                TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocnpolarity)<< 8U);
000162  6a03              LDR      r3,[r0,#0x20]
000164  88d4              LDRH     r4,[r2,#6]
000166  ea432304          ORR      r3,r3,r4,LSL #8
00016a  6203              STR      r3,[r0,#0x20]
;;;806                /* reset the ISO2 bit */
;;;807                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO2);
00016c  6843              LDR      r3,[r0,#4]
00016e  f4235380          BIC      r3,r3,#0x1000
000172  6043              STR      r3,[r0,#4]
;;;808                /* set the ISO2 bit */
;;;809                TIMER_CTL1(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocidlestate)<< 4U);
000174  6843              LDR      r3,[r0,#4]
000176  8914              LDRH     r4,[r2,#8]
000178  ea431304          ORR      r3,r3,r4,LSL #4
00017c  6043              STR      r3,[r0,#4]
;;;810                /* reset the ISO2N bit */
;;;811                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO2N);
00017e  6843              LDR      r3,[r0,#4]
000180  f4235300          BIC      r3,r3,#0x2000
000184  6043              STR      r3,[r0,#4]
;;;812                /* set the ISO2N bit */
;;;813                TIMER_CTL1(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocnidlestate)<< 4U);
000186  6843              LDR      r3,[r0,#4]
000188  8954              LDRH     r4,[r2,#0xa]
00018a  ea431304          ORR      r3,r3,r4,LSL #4
00018e  6043              STR      r3,[r0,#4]
                  |L19.400|
;;;814            }
;;;815            break;
000190  e026              B        |L19.480|
                  |L19.402|
;;;816        /* configure TIMER_CH_3 */
;;;817        case TIMER_CH_3:
;;;818            /* reset the CH3EN bit */
;;;819            TIMER_CHCTL2(timer_periph) &=(~(uint32_t)TIMER_CHCTL2_CH3EN);
000192  6a03              LDR      r3,[r0,#0x20]
000194  f4235380          BIC      r3,r3,#0x1000
000198  6203              STR      r3,[r0,#0x20]
;;;820            TIMER_CHCTL1(timer_periph) &= ~(uint32_t)TIMER_CHCTL1_CH3MS;
00019a  69c3              LDR      r3,[r0,#0x1c]
00019c  f4237340          BIC      r3,r3,#0x300
0001a0  61c3              STR      r3,[r0,#0x1c]
;;;821            /* set the CH3EN bit */
;;;822            TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->outputstate) << 12U);
0001a2  6a03              LDR      r3,[r0,#0x20]
0001a4  8814              LDRH     r4,[r2,#0]
0001a6  ea433304          ORR      r3,r3,r4,LSL #12
0001aa  6203              STR      r3,[r0,#0x20]
;;;823            /* reset the CH3P bit */
;;;824            TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH3P);
0001ac  6a03              LDR      r3,[r0,#0x20]
0001ae  f4235300          BIC      r3,r3,#0x2000
0001b2  6203              STR      r3,[r0,#0x20]
;;;825            /* set the CH3P bit */
;;;826            TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocpolarity)<< 12U);
0001b4  6a03              LDR      r3,[r0,#0x20]
0001b6  8894              LDRH     r4,[r2,#4]
0001b8  ea433304          ORR      r3,r3,r4,LSL #12
0001bc  6203              STR      r3,[r0,#0x20]
;;;827    
;;;828            if((TIMER0 == timer_periph) || (TIMER7 == timer_periph)){
0001be  4b09              LDR      r3,|L19.484|
0001c0  4298              CMP      r0,r3
0001c2  d002              BEQ      |L19.458|
0001c4  4b08              LDR      r3,|L19.488|
0001c6  4298              CMP      r0,r3
0001c8  d108              BNE      |L19.476|
                  |L19.458|
;;;829                /* reset the ISO3 bit */
;;;830                TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_ISO3);
0001ca  6843              LDR      r3,[r0,#4]
0001cc  f4234380          BIC      r3,r3,#0x4000
0001d0  6043              STR      r3,[r0,#4]
;;;831                /* set the ISO3 bit */
;;;832                TIMER_CTL1(timer_periph) |= (uint32_t)((uint32_t)(ocpara->ocidlestate)<< 6U);
0001d2  6843              LDR      r3,[r0,#4]
0001d4  8914              LDRH     r4,[r2,#8]
0001d6  ea431384          ORR      r3,r3,r4,LSL #6
0001da  6043              STR      r3,[r0,#4]
                  |L19.476|
;;;833            }
;;;834            break;
0001dc  e000              B        |L19.480|
                  |L19.478|
;;;835        default:
;;;836            break;
0001de  bf00              NOP      
                  |L19.480|
0001e0  bf00              NOP                            ;753
;;;837        }
;;;838    }
0001e2  bd10              POP      {r4,pc}
;;;839    
                          ENDP

                  |L19.484|
                          DCD      0x40012c00
                  |L19.488|
                          DCD      0x40013400

                          AREA ||i.timer_channel_output_fast_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_fast_config PROC
;;;986    */
;;;987    void timer_channel_output_fast_config(uint32_t timer_periph, uint16_t channel, uint16_t ocfast)
000000  b131              CBZ      r1,|L20.16|
;;;988    {
;;;989        switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L20.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L20.50|
00000a  2903              CMP      r1,#3
00000c  d122              BNE      |L20.84|
00000e  e018              B        |L20.66|
                  |L20.16|
;;;990        /* configure TIMER_CH_0 */
;;;991        case TIMER_CH_0:
;;;992            TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0COMFEN);
000010  6983              LDR      r3,[r0,#0x18]
000012  f0230304          BIC      r3,r3,#4
000016  6183              STR      r3,[r0,#0x18]
;;;993            TIMER_CHCTL0(timer_periph) |= (uint32_t)ocfast;
000018  6983              LDR      r3,[r0,#0x18]
00001a  4313              ORRS     r3,r3,r2
00001c  6183              STR      r3,[r0,#0x18]
;;;994            break;
00001e  e01a              B        |L20.86|
                  |L20.32|
;;;995        /* configure TIMER_CH_1 */
;;;996        case TIMER_CH_1:
;;;997            TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1COMFEN);
000020  6983              LDR      r3,[r0,#0x18]
000022  f4236380          BIC      r3,r3,#0x400
000026  6183              STR      r3,[r0,#0x18]
;;;998            TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)ocfast << 8U);
000028  6983              LDR      r3,[r0,#0x18]
00002a  ea432302          ORR      r3,r3,r2,LSL #8
00002e  6183              STR      r3,[r0,#0x18]
;;;999            break;
000030  e011              B        |L20.86|
                  |L20.50|
;;;1000       /* configure TIMER_CH_2 */
;;;1001       case TIMER_CH_2:
;;;1002           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2COMFEN);
000032  69c3              LDR      r3,[r0,#0x1c]
000034  f0230304          BIC      r3,r3,#4
000038  61c3              STR      r3,[r0,#0x1c]
;;;1003           TIMER_CHCTL1(timer_periph) |= (uint32_t)ocfast;
00003a  69c3              LDR      r3,[r0,#0x1c]
00003c  4313              ORRS     r3,r3,r2
00003e  61c3              STR      r3,[r0,#0x1c]
;;;1004           break;
000040  e009              B        |L20.86|
                  |L20.66|
;;;1005       /* configure TIMER_CH_3 */
;;;1006       case TIMER_CH_3:
;;;1007           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3COMFEN);
000042  69c3              LDR      r3,[r0,#0x1c]
000044  f4236380          BIC      r3,r3,#0x400
000048  61c3              STR      r3,[r0,#0x1c]
;;;1008           TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)ocfast << 8U);
00004a  69c3              LDR      r3,[r0,#0x1c]
00004c  ea432302          ORR      r3,r3,r2,LSL #8
000050  61c3              STR      r3,[r0,#0x1c]
;;;1009           break;
000052  e000              B        |L20.86|
                  |L20.84|
;;;1010       default:
;;;1011           break;
000054  bf00              NOP      
                  |L20.86|
000056  bf00              NOP                            ;994
;;;1012       }
;;;1013   }
000058  4770              BX       lr
;;;1014   
                          ENDP


                          AREA ||i.timer_channel_output_mode_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_mode_config PROC
;;;861    */
;;;862    void timer_channel_output_mode_config(uint32_t timer_periph, uint16_t channel, uint16_t ocmode)
000000  b131              CBZ      r1,|L21.16|
;;;863    {
;;;864        switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L21.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L21.50|
00000a  2903              CMP      r1,#3
00000c  d122              BNE      |L21.84|
00000e  e018              B        |L21.66|
                  |L21.16|
;;;865        /* configure TIMER_CH_0 */
;;;866        case TIMER_CH_0:
;;;867            TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0COMCTL);
000010  6983              LDR      r3,[r0,#0x18]
000012  f0230370          BIC      r3,r3,#0x70
000016  6183              STR      r3,[r0,#0x18]
;;;868            TIMER_CHCTL0(timer_periph) |= (uint32_t)ocmode;
000018  6983              LDR      r3,[r0,#0x18]
00001a  4313              ORRS     r3,r3,r2
00001c  6183              STR      r3,[r0,#0x18]
;;;869            break;
00001e  e01a              B        |L21.86|
                  |L21.32|
;;;870        /* configure TIMER_CH_1 */
;;;871        case TIMER_CH_1:
;;;872            TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1COMCTL);
000020  6983              LDR      r3,[r0,#0x18]
000022  f42343e0          BIC      r3,r3,#0x7000
000026  6183              STR      r3,[r0,#0x18]
;;;873            TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(ocmode)<< 8U);
000028  6983              LDR      r3,[r0,#0x18]
00002a  ea432302          ORR      r3,r3,r2,LSL #8
00002e  6183              STR      r3,[r0,#0x18]
;;;874            break;
000030  e011              B        |L21.86|
                  |L21.50|
;;;875        /* configure TIMER_CH_2 */
;;;876        case TIMER_CH_2:
;;;877            TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2COMCTL);
000032  69c3              LDR      r3,[r0,#0x1c]
000034  f0230370          BIC      r3,r3,#0x70
000038  61c3              STR      r3,[r0,#0x1c]
;;;878            TIMER_CHCTL1(timer_periph) |= (uint32_t)ocmode;
00003a  69c3              LDR      r3,[r0,#0x1c]
00003c  4313              ORRS     r3,r3,r2
00003e  61c3              STR      r3,[r0,#0x1c]
;;;879            break;
000040  e009              B        |L21.86|
                  |L21.66|
;;;880        /* configure TIMER_CH_3 */
;;;881        case TIMER_CH_3:
;;;882            TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3COMCTL);
000042  69c3              LDR      r3,[r0,#0x1c]
000044  f42343e0          BIC      r3,r3,#0x7000
000048  61c3              STR      r3,[r0,#0x1c]
;;;883            TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)(ocmode)<< 8U);
00004a  69c3              LDR      r3,[r0,#0x1c]
00004c  ea432302          ORR      r3,r3,r2,LSL #8
000050  61c3              STR      r3,[r0,#0x1c]
;;;884            break;
000052  e000              B        |L21.86|
                  |L21.84|
;;;885        default:
;;;886            break;
000054  bf00              NOP      
                  |L21.86|
000056  bf00              NOP                            ;869
;;;887        }
;;;888    }
000058  4770              BX       lr
;;;889    
                          ENDP


                          AREA ||i.timer_channel_output_polarity_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_polarity_config PROC
;;;1074   */
;;;1075   void timer_channel_output_polarity_config(uint32_t timer_periph, uint16_t channel, uint16_t ocpolarity)
000000  b131              CBZ      r1,|L22.16|
;;;1076   {
;;;1077       switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L22.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L22.50|
00000a  2903              CMP      r1,#3
00000c  d123              BNE      |L22.86|
00000e  e019              B        |L22.68|
                  |L22.16|
;;;1078       /* configure TIMER_CH_0 */
;;;1079       case TIMER_CH_0:
;;;1080           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0P);
000010  6a03              LDR      r3,[r0,#0x20]
000012  f0230302          BIC      r3,r3,#2
000016  6203              STR      r3,[r0,#0x20]
;;;1081           TIMER_CHCTL2(timer_periph) |= (uint32_t)ocpolarity;
000018  6a03              LDR      r3,[r0,#0x20]
00001a  4313              ORRS     r3,r3,r2
00001c  6203              STR      r3,[r0,#0x20]
;;;1082           break;
00001e  e01b              B        |L22.88|
                  |L22.32|
;;;1083       /* configure TIMER_CH_1 */
;;;1084       case TIMER_CH_1:
;;;1085           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1P);
000020  6a03              LDR      r3,[r0,#0x20]
000022  f0230320          BIC      r3,r3,#0x20
000026  6203              STR      r3,[r0,#0x20]
;;;1086           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocpolarity << 4U);
000028  6a03              LDR      r3,[r0,#0x20]
00002a  ea431302          ORR      r3,r3,r2,LSL #4
00002e  6203              STR      r3,[r0,#0x20]
;;;1087           break;
000030  e012              B        |L22.88|
                  |L22.50|
;;;1088       /* configure TIMER_CH_2 */
;;;1089       case TIMER_CH_2:
;;;1090           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2P);
000032  6a03              LDR      r3,[r0,#0x20]
000034  f4237300          BIC      r3,r3,#0x200
000038  6203              STR      r3,[r0,#0x20]
;;;1091           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocpolarity << 8U);
00003a  6a03              LDR      r3,[r0,#0x20]
00003c  ea432302          ORR      r3,r3,r2,LSL #8
000040  6203              STR      r3,[r0,#0x20]
;;;1092           break;
000042  e009              B        |L22.88|
                  |L22.68|
;;;1093       /* configure TIMER_CH_3 */
;;;1094       case TIMER_CH_3:
;;;1095           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH3P);
000044  6a03              LDR      r3,[r0,#0x20]
000046  f4235300          BIC      r3,r3,#0x2000
00004a  6203              STR      r3,[r0,#0x20]
;;;1096           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)ocpolarity << 12U);
00004c  6a03              LDR      r3,[r0,#0x20]
00004e  ea433302          ORR      r3,r3,r2,LSL #12
000052  6203              STR      r3,[r0,#0x20]
;;;1097           break;
000054  e000              B        |L22.88|
                  |L22.86|
;;;1098       default:
;;;1099           break;
000056  bf00              NOP      
                  |L22.88|
000058  bf00              NOP                            ;1082
;;;1100       }
;;;1101   }
00005a  4770              BX       lr
;;;1102   
                          ENDP


                          AREA ||i.timer_channel_output_pulse_value_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_pulse_value_config PROC
;;;902    */
;;;903    void timer_channel_output_pulse_value_config(uint32_t timer_periph, uint16_t channel, uint16_t pulse)
000000  b131              CBZ      r1,|L23.16|
;;;904    {
;;;905        switch(channel){
000002  2901              CMP      r1,#1
000004  d006              BEQ      |L23.20|
000006  2902              CMP      r1,#2
000008  d006              BEQ      |L23.24|
00000a  2903              CMP      r1,#3
00000c  d108              BNE      |L23.32|
00000e  e005              B        |L23.28|
                  |L23.16|
;;;906        /* configure TIMER_CH_0 */
;;;907        case TIMER_CH_0:
;;;908            TIMER_CH0CV(timer_periph) = (uint32_t)pulse;
000010  6342              STR      r2,[r0,#0x34]
;;;909            break;
000012  e006              B        |L23.34|
                  |L23.20|
;;;910        /* configure TIMER_CH_1 */
;;;911        case TIMER_CH_1:
;;;912            TIMER_CH1CV(timer_periph) = (uint32_t)pulse;
000014  6382              STR      r2,[r0,#0x38]
;;;913            break;
000016  e004              B        |L23.34|
                  |L23.24|
;;;914        /* configure TIMER_CH_2 */
;;;915        case TIMER_CH_2:
;;;916            TIMER_CH2CV(timer_periph) = (uint32_t)pulse;
000018  63c2              STR      r2,[r0,#0x3c]
;;;917            break;
00001a  e002              B        |L23.34|
                  |L23.28|
;;;918        /* configure TIMER_CH_3 */
;;;919        case TIMER_CH_3:
;;;920             TIMER_CH3CV(timer_periph) = (uint32_t)pulse;
00001c  6402              STR      r2,[r0,#0x40]
;;;921            break;
00001e  e000              B        |L23.34|
                  |L23.32|
;;;922        default:
;;;923            break;
000020  bf00              NOP      
                  |L23.34|
000022  bf00              NOP                            ;909
;;;924        }
;;;925    }
000024  4770              BX       lr
;;;926    
                          ENDP


                          AREA ||i.timer_channel_output_shadow_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_shadow_config PROC
;;;942    */
;;;943    void timer_channel_output_shadow_config(uint32_t timer_periph, uint16_t channel, uint16_t ocshadow)
000000  b131              CBZ      r1,|L24.16|
;;;944    {
;;;945        switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L24.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L24.50|
00000a  2903              CMP      r1,#3
00000c  d122              BNE      |L24.84|
00000e  e018              B        |L24.66|
                  |L24.16|
;;;946        /* configure TIMER_CH_0 */
;;;947        case TIMER_CH_0:
;;;948            TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0COMSEN);
000010  6983              LDR      r3,[r0,#0x18]
000012  f0230308          BIC      r3,r3,#8
000016  6183              STR      r3,[r0,#0x18]
;;;949            TIMER_CHCTL0(timer_periph) |= (uint32_t)ocshadow;
000018  6983              LDR      r3,[r0,#0x18]
00001a  4313              ORRS     r3,r3,r2
00001c  6183              STR      r3,[r0,#0x18]
;;;950            break;
00001e  e01a              B        |L24.86|
                  |L24.32|
;;;951        /* configure TIMER_CH_1 */
;;;952        case TIMER_CH_1:
;;;953            TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1COMSEN);
000020  6983              LDR      r3,[r0,#0x18]
000022  f4236300          BIC      r3,r3,#0x800
000026  6183              STR      r3,[r0,#0x18]
;;;954            TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(ocshadow) << 8U);
000028  6983              LDR      r3,[r0,#0x18]
00002a  ea432302          ORR      r3,r3,r2,LSL #8
00002e  6183              STR      r3,[r0,#0x18]
;;;955            break;
000030  e011              B        |L24.86|
                  |L24.50|
;;;956        /* configure TIMER_CH_2 */
;;;957        case TIMER_CH_2:
;;;958            TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2COMSEN);
000032  69c3              LDR      r3,[r0,#0x1c]
000034  f0230308          BIC      r3,r3,#8
000038  61c3              STR      r3,[r0,#0x1c]
;;;959            TIMER_CHCTL1(timer_periph) |= (uint32_t)ocshadow;
00003a  69c3              LDR      r3,[r0,#0x1c]
00003c  4313              ORRS     r3,r3,r2
00003e  61c3              STR      r3,[r0,#0x1c]
;;;960            break;
000040  e009              B        |L24.86|
                  |L24.66|
;;;961        /* configure TIMER_CH_3 */
;;;962        case TIMER_CH_3:
;;;963            TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3COMSEN);
000042  69c3              LDR      r3,[r0,#0x1c]
000044  f4236300          BIC      r3,r3,#0x800
000048  61c3              STR      r3,[r0,#0x1c]
;;;964            TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)(ocshadow) << 8U);
00004a  69c3              LDR      r3,[r0,#0x1c]
00004c  ea432302          ORR      r3,r3,r2,LSL #8
000050  61c3              STR      r3,[r0,#0x1c]
;;;965            break;
000052  e000              B        |L24.86|
                  |L24.84|
;;;966        default:
;;;967            break;
000054  bf00              NOP      
                  |L24.86|
000056  bf00              NOP                            ;950
;;;968        }
;;;969    }
000058  4770              BX       lr
;;;970    
                          ENDP


                          AREA ||i.timer_channel_output_state_config||, CODE, READONLY, ALIGN=1

                  timer_channel_output_state_config PROC
;;;1156   */
;;;1157   void timer_channel_output_state_config(uint32_t timer_periph, uint16_t channel, uint32_t state)
000000  b131              CBZ      r1,|L25.16|
;;;1158   {
;;;1159       switch(channel){
000002  2901              CMP      r1,#1
000004  d00c              BEQ      |L25.32|
000006  2902              CMP      r1,#2
000008  d013              BEQ      |L25.50|
00000a  2903              CMP      r1,#3
00000c  d123              BNE      |L25.86|
00000e  e019              B        |L25.68|
                  |L25.16|
;;;1160       /* configure TIMER_CH_0 */
;;;1161       case TIMER_CH_0:
;;;1162           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0EN);
000010  6a03              LDR      r3,[r0,#0x20]
000012  f0230301          BIC      r3,r3,#1
000016  6203              STR      r3,[r0,#0x20]
;;;1163           TIMER_CHCTL2(timer_periph) |= (uint32_t)state;
000018  6a03              LDR      r3,[r0,#0x20]
00001a  4313              ORRS     r3,r3,r2
00001c  6203              STR      r3,[r0,#0x20]
;;;1164           break;
00001e  e01b              B        |L25.88|
                  |L25.32|
;;;1165       /* configure TIMER_CH_1 */
;;;1166       case TIMER_CH_1:
;;;1167           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1EN);
000020  6a03              LDR      r3,[r0,#0x20]
000022  f0230310          BIC      r3,r3,#0x10
000026  6203              STR      r3,[r0,#0x20]
;;;1168           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)state << 4U);
000028  6a03              LDR      r3,[r0,#0x20]
00002a  ea431302          ORR      r3,r3,r2,LSL #4
00002e  6203              STR      r3,[r0,#0x20]
;;;1169           break;
000030  e012              B        |L25.88|
                  |L25.50|
;;;1170       /* configure TIMER_CH_2 */
;;;1171       case TIMER_CH_2:
;;;1172           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2EN);
000032  6a03              LDR      r3,[r0,#0x20]
000034  f4237380          BIC      r3,r3,#0x100
000038  6203              STR      r3,[r0,#0x20]
;;;1173           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)state << 8U);
00003a  6a03              LDR      r3,[r0,#0x20]
00003c  ea432302          ORR      r3,r3,r2,LSL #8
000040  6203              STR      r3,[r0,#0x20]
;;;1174           break;
000042  e009              B        |L25.88|
                  |L25.68|
;;;1175       /* configure TIMER_CH_3 */
;;;1176       case TIMER_CH_3:
;;;1177           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH3EN);
000044  6a03              LDR      r3,[r0,#0x20]
000046  f4235380          BIC      r3,r3,#0x1000
00004a  6203              STR      r3,[r0,#0x20]
;;;1178           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)state << 12U);
00004c  6a03              LDR      r3,[r0,#0x20]
00004e  ea433302          ORR      r3,r3,r2,LSL #12
000052  6203              STR      r3,[r0,#0x20]
;;;1179           break;
000054  e000              B        |L25.88|
                  |L25.86|
;;;1180       default:
;;;1181           break;
000056  bf00              NOP      
                  |L25.88|
000058  bf00              NOP                            ;1164
;;;1182       }
;;;1183   }
00005a  4770              BX       lr
;;;1184   
                          ENDP


                          AREA ||i.timer_channel_output_struct_para_init||, CODE, READONLY, ALIGN=1

                  timer_channel_output_struct_para_init PROC
;;;689    */
;;;690    void timer_channel_output_struct_para_init(timer_oc_parameter_struct* ocpara)
000000  2100              MOVS     r1,#0
;;;691    {
;;;692        /* initialize the channel output parameter struct member with the default value */
;;;693        ocpara->outputstate  = TIMER_CCX_DISABLE;
000002  8001              STRH     r1,[r0,#0]
;;;694        ocpara->outputnstate = TIMER_CCXN_DISABLE;
000004  8041              STRH     r1,[r0,#2]
;;;695        ocpara->ocpolarity   = TIMER_OC_POLARITY_HIGH;
000006  8081              STRH     r1,[r0,#4]
;;;696        ocpara->ocnpolarity  = TIMER_OCN_POLARITY_HIGH;
000008  80c1              STRH     r1,[r0,#6]
;;;697        ocpara->ocidlestate  = TIMER_OC_IDLE_STATE_LOW;
00000a  8101              STRH     r1,[r0,#8]
;;;698        ocpara->ocnidlestate = TIMER_OCN_IDLE_STATE_LOW;
00000c  8141              STRH     r1,[r0,#0xa]
;;;699    }
00000e  4770              BX       lr
;;;700    
                          ENDP


                          AREA ||i.timer_counter_alignment||, CODE, READONLY, ALIGN=1

                  timer_counter_alignment PROC
;;;272    */
;;;273    void timer_counter_alignment(uint32_t timer_periph, uint16_t aligned)
000000  6802              LDR      r2,[r0,#0]
;;;274    {
;;;275        TIMER_CTL0(timer_periph) &= ~(uint32_t)TIMER_CTL0_CAM;
000002  f0220260          BIC      r2,r2,#0x60
000006  6002              STR      r2,[r0,#0]
;;;276        TIMER_CTL0(timer_periph) |= (uint32_t)aligned;
000008  6802              LDR      r2,[r0,#0]
00000a  430a              ORRS     r2,r2,r1
00000c  6002              STR      r2,[r0,#0]
;;;277    }
00000e  4770              BX       lr
;;;278    
                          ENDP


                          AREA ||i.timer_counter_down_direction||, CODE, READONLY, ALIGN=1

                  timer_counter_down_direction PROC
;;;295    */
;;;296    void timer_counter_down_direction(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;297    {
;;;298        TIMER_CTL0(timer_periph) |= (uint32_t)TIMER_CTL0_DIR;
000002  f0410110          ORR      r1,r1,#0x10
000006  6001              STR      r1,[r0,#0]
;;;299    }
000008  4770              BX       lr
;;;300    
                          ENDP


                          AREA ||i.timer_counter_read||, CODE, READONLY, ALIGN=1

                  timer_counter_read PROC
;;;362    */         
;;;363    uint32_t timer_counter_read(uint32_t timer_periph)
000000  4601              MOV      r1,r0
;;;364    {
;;;365        uint32_t count_value = 0U;
000002  2000              MOVS     r0,#0
;;;366        count_value = TIMER_CNT(timer_periph);
000004  6a48              LDR      r0,[r1,#0x24]
;;;367        return (count_value);
;;;368    }
000006  4770              BX       lr
;;;369    
                          ENDP


                          AREA ||i.timer_counter_up_direction||, CODE, READONLY, ALIGN=1

                  timer_counter_up_direction PROC
;;;284    */
;;;285    void timer_counter_up_direction(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;286    {
;;;287        TIMER_CTL0(timer_periph) &= ~(uint32_t)TIMER_CTL0_DIR;
000002  f0210110          BIC      r1,r1,#0x10
000006  6001              STR      r1,[r0,#0]
;;;288    }
000008  4770              BX       lr
;;;289    
                          ENDP


                          AREA ||i.timer_counter_value_config||, CODE, READONLY, ALIGN=1

                  timer_counter_value_config PROC
;;;351    */         
;;;352    void timer_counter_value_config(uint32_t timer_periph, uint32_t counter)
000000  6241              STR      r1,[r0,#0x24]
;;;353    {
;;;354        TIMER_CNT(timer_periph) = (uint32_t)counter;
;;;355    }
000002  4770              BX       lr
;;;356    
                          ENDP


                          AREA ||i.timer_deinit||, CODE, READONLY, ALIGN=2

                  timer_deinit PROC
;;;51     */
;;;52     void timer_deinit(uint32_t timer_periph)
000000  b510              PUSH     {r4,lr}
;;;53     {
000002  4604              MOV      r4,r0
;;;54         switch(timer_periph){
000004  4933              LDR      r1,|L32.212|
000006  1a60              SUBS     r0,r4,r1
000008  428c              CMP      r4,r1
00000a  d044              BEQ      |L32.150|
00000c  dc0c              BGT      |L32.40|
00000e  f1b44f80          CMP      r4,#0x40000000
000012  d01c              BEQ      |L32.78|
000014  4830              LDR      r0,|L32.216|
000016  4420              ADD      r0,r0,r4
000018  b310              CBZ      r0,|L32.96|
00001a  f5b06f80          CMP      r0,#0x400
00001e  d028              BEQ      |L32.114|
000020  f5b06f00          CMP      r0,#0x800
000024  d152              BNE      |L32.204|
000026  e02d              B        |L32.132|
                  |L32.40|
000028  f5b06f80          CMP      r0,#0x400
00002c  d03c              BEQ      |L32.168|
00002e  f5b03f8e          CMP      r0,#0x11c00
000032  d003              BEQ      |L32.60|
000034  f5b03f92          CMP      r0,#0x12400
000038  d148              BNE      |L32.204|
00003a  e03e              B        |L32.186|
                  |L32.60|
;;;55         case TIMER0:
;;;56             /* reset TIMER0 */
;;;57             rcu_periph_reset_enable(RCU_TIMER0RST);
00003c  f240300b          MOV      r0,#0x30b
000040  f7fffffe          BL       rcu_periph_reset_enable
;;;58             rcu_periph_reset_disable(RCU_TIMER0RST);
000044  f240300b          MOV      r0,#0x30b
000048  f7fffffe          BL       rcu_periph_reset_disable
;;;59             break;
00004c  e03f              B        |L32.206|
                  |L32.78|
;;;60         case TIMER1:
;;;61             /* reset TIMER1 */
;;;62             rcu_periph_reset_enable(RCU_TIMER1RST);
00004e  f44f6080          MOV      r0,#0x400
000052  f7fffffe          BL       rcu_periph_reset_enable
;;;63             rcu_periph_reset_disable(RCU_TIMER1RST);
000056  f44f6080          MOV      r0,#0x400
00005a  f7fffffe          BL       rcu_periph_reset_disable
;;;64             break;
00005e  e036              B        |L32.206|
                  |L32.96|
;;;65         case TIMER2:
;;;66             /* reset TIMER2 */
;;;67             rcu_periph_reset_enable(RCU_TIMER2RST);
000060  f2404001          MOV      r0,#0x401
000064  f7fffffe          BL       rcu_periph_reset_enable
;;;68             rcu_periph_reset_disable(RCU_TIMER2RST);
000068  f2404001          MOV      r0,#0x401
00006c  f7fffffe          BL       rcu_periph_reset_disable
;;;69             break;
000070  e02d              B        |L32.206|
                  |L32.114|
;;;70         case TIMER3:
;;;71             /* reset TIMER3 */
;;;72             rcu_periph_reset_enable(RCU_TIMER3RST);
000072  f2404002          MOV      r0,#0x402
000076  f7fffffe          BL       rcu_periph_reset_enable
;;;73             rcu_periph_reset_disable(RCU_TIMER3RST);
00007a  f2404002          MOV      r0,#0x402
00007e  f7fffffe          BL       rcu_periph_reset_disable
;;;74             break;
000082  e024              B        |L32.206|
                  |L32.132|
;;;75         case TIMER4:
;;;76             /* reset TIMER4 */
;;;77             rcu_periph_reset_enable(RCU_TIMER4RST);
000084  f2404003          MOV      r0,#0x403
000088  f7fffffe          BL       rcu_periph_reset_enable
;;;78             rcu_periph_reset_disable(RCU_TIMER4RST);
00008c  f2404003          MOV      r0,#0x403
000090  f7fffffe          BL       rcu_periph_reset_disable
;;;79             break;
000094  e01b              B        |L32.206|
                  |L32.150|
;;;80         case TIMER5:
;;;81             /* reset TIMER5 */
;;;82             rcu_periph_reset_enable(RCU_TIMER5RST);
000096  f2404004          MOV      r0,#0x404
00009a  f7fffffe          BL       rcu_periph_reset_enable
;;;83             rcu_periph_reset_disable(RCU_TIMER5RST);
00009e  f2404004          MOV      r0,#0x404
0000a2  f7fffffe          BL       rcu_periph_reset_disable
;;;84             break;
0000a6  e012              B        |L32.206|
                  |L32.168|
;;;85         case TIMER6:
;;;86             /* reset TIMER6 */
;;;87             rcu_periph_reset_enable(RCU_TIMER6RST);
0000a8  f2404005          MOV      r0,#0x405
0000ac  f7fffffe          BL       rcu_periph_reset_enable
;;;88             rcu_periph_reset_disable(RCU_TIMER6RST);
0000b0  f2404005          MOV      r0,#0x405
0000b4  f7fffffe          BL       rcu_periph_reset_disable
;;;89             break;
0000b8  e009              B        |L32.206|
                  |L32.186|
;;;90         case TIMER7:
;;;91             /* reset TIMER7 */
;;;92             rcu_periph_reset_enable(RCU_TIMER7RST);
0000ba  f240300d          MOV      r0,#0x30d
0000be  f7fffffe          BL       rcu_periph_reset_enable
;;;93             rcu_periph_reset_disable(RCU_TIMER7RST);
0000c2  f240300d          MOV      r0,#0x30d
0000c6  f7fffffe          BL       rcu_periph_reset_disable
;;;94             break;
0000ca  e000              B        |L32.206|
                  |L32.204|
;;;95     #ifdef GD32F10X_XD
;;;96         case TIMER8:
;;;97             /* reset TIMER8 */
;;;98             rcu_periph_reset_enable(RCU_TIMER8RST);
;;;99             rcu_periph_reset_disable(RCU_TIMER8RST);
;;;100            break;
;;;101        case TIMER9:
;;;102            /* reset TIMER9 */
;;;103            rcu_periph_reset_enable(RCU_TIMER9RST);
;;;104            rcu_periph_reset_disable(RCU_TIMER9RST);
;;;105            break;
;;;106        case TIMER10:
;;;107            /* reset TIMER10 */
;;;108            rcu_periph_reset_enable(RCU_TIMER10RST);
;;;109            rcu_periph_reset_disable(RCU_TIMER10RST);
;;;110            break;
;;;111        case TIMER11:
;;;112            /* reset TIMER11 */
;;;113            rcu_periph_reset_enable(RCU_TIMER11RST);
;;;114            rcu_periph_reset_disable(RCU_TIMER11RST);
;;;115            break;
;;;116        case TIMER12:
;;;117            /* reset TIMER12 */
;;;118            rcu_periph_reset_enable(RCU_TIMER12RST);
;;;119            rcu_periph_reset_disable(RCU_TIMER12RST);
;;;120            break;
;;;121        case TIMER13:
;;;122            /* reset TIMER13 */
;;;123            rcu_periph_reset_enable(RCU_TIMER13RST);
;;;124            rcu_periph_reset_disable(RCU_TIMER13RST);
;;;125            break;
;;;126    #endif /* GD32F10X_XD */
;;;127        default:
;;;128            break;
0000cc  bf00              NOP      
                  |L32.206|
0000ce  bf00              NOP                            ;59
;;;129        }
;;;130    }
0000d0  bd10              POP      {r4,pc}
;;;131    
                          ENDP

0000d2  0000              DCW      0x0000
                  |L32.212|
                          DCD      0x40001000
                  |L32.216|
                          DCD      0xbffffc00

                          AREA ||i.timer_disable||, CODE, READONLY, ALIGN=1

                  timer_disable PROC
;;;211    */
;;;212    void timer_disable(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;213    {
;;;214        TIMER_CTL0(timer_periph) &= ~(uint32_t)TIMER_CTL0_CEN;
000002  f0210101          BIC      r1,r1,#1
000006  6001              STR      r1,[r0,#0]
;;;215    }
000008  4770              BX       lr
;;;216    
                          ENDP


                          AREA ||i.timer_dma_disable||, CODE, READONLY, ALIGN=1

                  timer_dma_disable PROC
;;;460    */
;;;461    void timer_dma_disable(uint32_t timer_periph, uint16_t dma)
000000  68c2              LDR      r2,[r0,#0xc]
;;;462    {
;;;463        TIMER_DMAINTEN(timer_periph) &= (~(uint32_t)(dma)); 
000002  438a              BICS     r2,r2,r1
000004  60c2              STR      r2,[r0,#0xc]
;;;464    }
000006  4770              BX       lr
;;;465    
                          ENDP


                          AREA ||i.timer_dma_enable||, CODE, READONLY, ALIGN=1

                  timer_dma_enable PROC
;;;440    */
;;;441    void timer_dma_enable(uint32_t timer_periph, uint16_t dma)
000000  68c2              LDR      r2,[r0,#0xc]
;;;442    {
;;;443        TIMER_DMAINTEN(timer_periph) |= (uint32_t) dma; 
000002  430a              ORRS     r2,r2,r1
000004  60c2              STR      r2,[r0,#0xc]
;;;444    }
000006  4770              BX       lr
;;;445    
                          ENDP


                          AREA ||i.timer_dma_transfer_config||, CODE, READONLY, ALIGN=1

                  timer_dma_transfer_config PROC
;;;516    */
;;;517    void timer_dma_transfer_config(uint32_t timer_periph, uint32_t dma_baseaddr, uint32_t dma_lenth)
000000  b510              PUSH     {r4,lr}
;;;518    {
;;;519        TIMER_DMACFG(timer_periph) &= (~(uint32_t)(TIMER_DMACFG_DMATA | TIMER_DMACFG_DMATC));
000002  6c83              LDR      r3,[r0,#0x48]
000004  f641741f          MOV      r4,#0x1f1f
000008  43a3              BICS     r3,r3,r4
00000a  6483              STR      r3,[r0,#0x48]
;;;520        TIMER_DMACFG(timer_periph) |= (uint32_t)(dma_baseaddr | dma_lenth);
00000c  6c83              LDR      r3,[r0,#0x48]
00000e  ea410402          ORR      r4,r1,r2
000012  4323              ORRS     r3,r3,r4
000014  6483              STR      r3,[r0,#0x48]
;;;521    }
000016  bd10              POP      {r4,pc}
;;;522    
                          ENDP


                          AREA ||i.timer_enable||, CODE, READONLY, ALIGN=1

                  timer_enable PROC
;;;200    */
;;;201    void timer_enable(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;202    {
;;;203        TIMER_CTL0(timer_periph) |= (uint32_t)TIMER_CTL0_CEN;
000002  f0410101          ORR      r1,r1,#1
000006  6001              STR      r1,[r0,#0]
;;;204    }
000008  4770              BX       lr
;;;205    
                          ENDP


                          AREA ||i.timer_event_software_generate||, CODE, READONLY, ALIGN=1

                  timer_event_software_generate PROC
;;;538    */
;;;539    void timer_event_software_generate(uint32_t timer_periph, uint16_t event)
000000  6942              LDR      r2,[r0,#0x14]
;;;540    {
;;;541        TIMER_SWEVG(timer_periph) |= (uint32_t)event;
000002  430a              ORRS     r2,r2,r1
000004  6142              STR      r2,[r0,#0x14]
;;;542    }
000006  4770              BX       lr
;;;543    
                          ENDP


                          AREA ||i.timer_external_clock_mode0_config||, CODE, READONLY, ALIGN=1

                  timer_external_clock_mode0_config PROC
;;;1816   */
;;;1817   void timer_external_clock_mode0_config(uint32_t timer_periph, uint32_t extprescaler, uint32_t extpolarity, uint8_t extfilter)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1818   {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
;;;1819       /* configure TIMER external trigger input */
;;;1820       timer_external_trigger_config(timer_periph, extprescaler, extpolarity, extfilter);
00000a  463b              MOV      r3,r7
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       timer_external_trigger_config
;;;1821       /* reset the SMC bit,TRGS bit */
;;;1822       TIMER_SMCFG(timer_periph) &= (~(uint32_t)(TIMER_SMCFG_SMC | TIMER_SMCFG_TRGS));
000016  68a0              LDR      r0,[r4,#8]
000018  f0200077          BIC      r0,r0,#0x77
00001c  60a0              STR      r0,[r4,#8]
;;;1823       /* set the SMC bit,TRGS bit */
;;;1824       TIMER_SMCFG(timer_periph) |= (uint32_t)(TIMER_SLAVE_MODE_EXTERNAL0 | TIMER_SMCFG_TRGSEL_ETIFP);
00001e  68a0              LDR      r0,[r4,#8]
000020  f0400077          ORR      r0,r0,#0x77
000024  60a0              STR      r0,[r4,#8]
;;;1825   }
000026  bdf0              POP      {r4-r7,pc}
;;;1826   
                          ENDP


                          AREA ||i.timer_external_clock_mode1_config||, CODE, READONLY, ALIGN=1

                  timer_external_clock_mode1_config PROC
;;;1843   */
;;;1844   void timer_external_clock_mode1_config(uint32_t timer_periph, uint32_t extprescaler, uint32_t extpolarity, uint8_t extfilter)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1845   {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
;;;1846       /* configure TIMER external trigger input */
;;;1847       timer_external_trigger_config(timer_periph, extprescaler, extpolarity, extfilter);
00000a  463b              MOV      r3,r7
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       timer_external_trigger_config
;;;1848       TIMER_SMCFG(timer_periph) |= (uint32_t)TIMER_SMCFG_SMC1;
000016  68a0              LDR      r0,[r4,#8]
000018  f4404080          ORR      r0,r0,#0x4000
00001c  60a0              STR      r0,[r4,#8]
;;;1849   }
00001e  bdf0              POP      {r4-r7,pc}
;;;1850   
                          ENDP


                          AREA ||i.timer_external_clock_mode1_disable||, CODE, READONLY, ALIGN=1

                  timer_external_clock_mode1_disable PROC
;;;1856   */
;;;1857   void timer_external_clock_mode1_disable(uint32_t timer_periph)
000000  6881              LDR      r1,[r0,#8]
;;;1858   {
;;;1859       TIMER_SMCFG(timer_periph) &= ~(uint32_t)TIMER_SMCFG_SMC1;
000002  f4214180          BIC      r1,r1,#0x4000
000006  6081              STR      r1,[r0,#8]
;;;1860   }
000008  4770              BX       lr
;;;1861   
                          ENDP


                          AREA ||i.timer_external_trigger_as_external_clock_config||, CODE, READONLY, ALIGN=1

                  timer_external_trigger_as_external_clock_config PROC
;;;1754   */
;;;1755   void timer_external_trigger_as_external_clock_config(uint32_t timer_periph, uint32_t extrigger, uint16_t extpolarity, uint8_t extfilter)
000000  b570              PUSH     {r4-r6,lr}
;;;1756   {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;1757       if(TIMER_SMCFG_TRGSEL_CI1FE1 == extrigger){
000008  2e60              CMP      r6,#0x60
00000a  d120              BNE      |L42.78|
;;;1758           /* reset the CH1EN bit */
;;;1759           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1EN);
00000c  6a20              LDR      r0,[r4,#0x20]
00000e  f0200010          BIC      r0,r0,#0x10
000012  6220              STR      r0,[r4,#0x20]
;;;1760           /* reset the CH1NP bit */
;;;1761           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH1P|TIMER_CHCTL2_CH1NP));
000014  6a20              LDR      r0,[r4,#0x20]
000016  f02000a0          BIC      r0,r0,#0xa0
00001a  6220              STR      r0,[r4,#0x20]
;;;1762           /* set the CH1NP bit */
;;;1763           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)extpolarity << 4U);
00001c  6a20              LDR      r0,[r4,#0x20]
00001e  ea401005          ORR      r0,r0,r5,LSL #4
000022  6220              STR      r0,[r4,#0x20]
;;;1764           /* reset the CH1MS bit */
;;;1765           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1MS);
000024  69a0              LDR      r0,[r4,#0x18]
000026  f4207040          BIC      r0,r0,#0x300
00002a  61a0              STR      r0,[r4,#0x18]
;;;1766           /* set the CH1MS bit */
;;;1767           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)TIMER_IC_SELECTION_DIRECTTI<< 8U);
00002c  69a0              LDR      r0,[r4,#0x18]
00002e  f4407080          ORR      r0,r0,#0x100
000032  61a0              STR      r0,[r4,#0x18]
;;;1768           /* reset the CH1CAPFLT bit */
;;;1769           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1CAPFLT);
000034  69a0              LDR      r0,[r4,#0x18]
000036  f4204070          BIC      r0,r0,#0xf000
00003a  61a0              STR      r0,[r4,#0x18]
;;;1770           /* set the CH1CAPFLT bit */
;;;1771           TIMER_CHCTL0(timer_periph) |= (uint32_t)(extfilter << 12U);
00003c  69a0              LDR      r0,[r4,#0x18]
00003e  ea403003          ORR      r0,r0,r3,LSL #12
000042  61a0              STR      r0,[r4,#0x18]
;;;1772           /* set the CH1EN bit */
;;;1773           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH1EN;
000044  6a20              LDR      r0,[r4,#0x20]
000046  f0400010          ORR      r0,r0,#0x10
00004a  6220              STR      r0,[r4,#0x20]
00004c  e01e              B        |L42.140|
                  |L42.78|
;;;1774       }else{
;;;1775           /* reset the CH0EN bit */
;;;1776           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0EN);
00004e  6a20              LDR      r0,[r4,#0x20]
000050  f0200001          BIC      r0,r0,#1
000054  6220              STR      r0,[r4,#0x20]
;;;1777           /* reset the CH0P and CH0NP bits */
;;;1778           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH0P|TIMER_CHCTL2_CH0NP));
000056  6a20              LDR      r0,[r4,#0x20]
000058  f020000a          BIC      r0,r0,#0xa
00005c  6220              STR      r0,[r4,#0x20]
;;;1779           /* set the CH0P and CH0NP bits */
;;;1780           TIMER_CHCTL2(timer_periph) |= (uint32_t)extpolarity;
00005e  6a20              LDR      r0,[r4,#0x20]
000060  4328              ORRS     r0,r0,r5
000062  6220              STR      r0,[r4,#0x20]
;;;1781           /* reset the CH0MS bit */
;;;1782           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0MS);
000064  69a0              LDR      r0,[r4,#0x18]
000066  f0200003          BIC      r0,r0,#3
00006a  61a0              STR      r0,[r4,#0x18]
;;;1783           /* set the CH0MS bit */
;;;1784           TIMER_CHCTL0(timer_periph) |= (uint32_t)TIMER_IC_SELECTION_DIRECTTI;
00006c  69a0              LDR      r0,[r4,#0x18]
00006e  f0400001          ORR      r0,r0,#1
000072  61a0              STR      r0,[r4,#0x18]
;;;1785           /* reset the CH0CAPFLT bit */
;;;1786           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0CAPFLT);
000074  69a0              LDR      r0,[r4,#0x18]
000076  f02000f0          BIC      r0,r0,#0xf0
00007a  61a0              STR      r0,[r4,#0x18]
;;;1787           /* reset the CH0CAPFLT bit */
;;;1788           TIMER_CHCTL0(timer_periph) |= (uint32_t)(extfilter << 4U);
00007c  69a0              LDR      r0,[r4,#0x18]
00007e  ea401003          ORR      r0,r0,r3,LSL #4
000082  61a0              STR      r0,[r4,#0x18]
;;;1789           /* set the CH0EN bit */
;;;1790           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH0EN;
000084  6a20              LDR      r0,[r4,#0x20]
000086  f0400001          ORR      r0,r0,#1
00008a  6220              STR      r0,[r4,#0x20]
                  |L42.140|
;;;1791       }
;;;1792       /* select TIMER input trigger source */
;;;1793       timer_input_trigger_source_select(timer_periph,extrigger);
00008c  4631              MOV      r1,r6
00008e  4620              MOV      r0,r4
000090  f7fffffe          BL       timer_input_trigger_source_select
;;;1794       /* reset the SMC bit */
;;;1795       TIMER_SMCFG(timer_periph) &= (~(uint32_t)TIMER_SMCFG_SMC);
000094  68a0              LDR      r0,[r4,#8]
000096  f0200007          BIC      r0,r0,#7
00009a  60a0              STR      r0,[r4,#8]
;;;1796       /* set the SMC bit */
;;;1797       TIMER_SMCFG(timer_periph) |= (uint32_t)TIMER_SLAVE_MODE_EXTERNAL0;
00009c  68a0              LDR      r0,[r4,#8]
00009e  f0400007          ORR      r0,r0,#7
0000a2  60a0              STR      r0,[r4,#8]
;;;1798   }
0000a4  bd70              POP      {r4-r6,pc}
;;;1799   
                          ENDP


                          AREA ||i.timer_external_trigger_config||, CODE, READONLY, ALIGN=1

                  timer_external_trigger_config PROC
;;;1668   */
;;;1669   void timer_external_trigger_config(uint32_t timer_periph, uint32_t extprescaler, uint32_t extpolarity, uint8_t extfilter)
000000  b530              PUSH     {r4,r5,lr}
;;;1670   {
;;;1671       TIMER_SMCFG(timer_periph) &= (~(uint32_t)(TIMER_SMCFG_ETP | TIMER_SMCFG_ETPSC | TIMER_SMCFG_ETFC));
000002  6884              LDR      r4,[r0,#8]
000004  f424443f          BIC      r4,r4,#0xbf00
000008  6084              STR      r4,[r0,#8]
;;;1672       TIMER_SMCFG(timer_periph) |= (uint32_t)(extprescaler | extpolarity);
00000a  6884              LDR      r4,[r0,#8]
00000c  ea410502          ORR      r5,r1,r2
000010  432c              ORRS     r4,r4,r5
000012  6084              STR      r4,[r0,#8]
;;;1673       TIMER_SMCFG(timer_periph) |= (uint32_t)(extfilter << 8U);
000014  6884              LDR      r4,[r0,#8]
000016  ea442403          ORR      r4,r4,r3,LSL #8
00001a  6084              STR      r4,[r0,#8]
;;;1674   }
00001c  bd30              POP      {r4,r5,pc}
;;;1675   
                          ENDP


                          AREA ||i.timer_flag_clear||, CODE, READONLY, ALIGN=1

                  timer_flag_clear PROC
;;;2000   */
;;;2001   void timer_flag_clear(uint32_t timer_periph, uint32_t flag)
000000  43ca              MVNS     r2,r1
;;;2002   {
;;;2003       TIMER_INTF(timer_periph) = (~(uint32_t)flag);
000002  6102              STR      r2,[r0,#0x10]
;;;2004   }
000004  4770              BX       lr
                          ENDP


                          AREA ||i.timer_flag_get||, CODE, READONLY, ALIGN=1

                  timer_flag_get PROC
;;;1971   */
;;;1972   FlagStatus timer_flag_get(uint32_t timer_periph, uint32_t flag)
000000  4602              MOV      r2,r0
;;;1973   {
;;;1974       if(RESET != (TIMER_INTF(timer_periph) & flag)){
000002  6910              LDR      r0,[r2,#0x10]
000004  4008              ANDS     r0,r0,r1
000006  b108              CBZ      r0,|L45.12|
;;;1975           return SET;
000008  2001              MOVS     r0,#1
                  |L45.10|
;;;1976       }else{
;;;1977           return RESET;
;;;1978       }
;;;1979   }
00000a  4770              BX       lr
                  |L45.12|
00000c  2000              MOVS     r0,#0                 ;1977
00000e  e7fc              B        |L45.10|
;;;1980   
                          ENDP


                          AREA ||i.timer_hall_mode_config||, CODE, READONLY, ALIGN=1

                  timer_hall_mode_config PROC
;;;1551   */
;;;1552   void timer_hall_mode_config(uint32_t timer_periph, uint32_t hallmode)    
000000  2980              CMP      r1,#0x80
;;;1553   {
;;;1554       if(TIMER_HALLINTERFACE_ENABLE == hallmode){
000002  d104              BNE      |L46.14|
;;;1555           TIMER_CTL1(timer_periph) |= (uint32_t)TIMER_CTL1_TI0S;
000004  6842              LDR      r2,[r0,#4]
000006  f0420280          ORR      r2,r2,#0x80
00000a  6042              STR      r2,[r0,#4]
00000c  e004              B        |L46.24|
                  |L46.14|
;;;1556       }else if(TIMER_HALLINTERFACE_DISABLE == hallmode){
00000e  b919              CBNZ     r1,|L46.24|
;;;1557           TIMER_CTL1(timer_periph) &= ~(uint32_t)TIMER_CTL1_TI0S;
000010  6842              LDR      r2,[r0,#4]
000012  f0220280          BIC      r2,r2,#0x80
000016  6042              STR      r2,[r0,#4]
                  |L46.24|
;;;1558       }else{
;;;1559           /* illegal parameters */        
;;;1560       }
;;;1561   }
000018  4770              BX       lr
;;;1562   
                          ENDP


                          AREA ||i.timer_init||, CODE, READONLY, ALIGN=2

                  timer_init PROC
;;;162    */
;;;163    void timer_init(uint32_t timer_periph, timer_parameter_struct* initpara)
000000  880a              LDRH     r2,[r1,#0]
;;;164    {
;;;165        /* configure the counter prescaler value */
;;;166        TIMER_PSC(timer_periph) = (uint16_t)initpara->prescaler;
000002  6282              STR      r2,[r0,#0x28]
;;;167    
;;;168        /* configure the counter direction and aligned mode */
;;;169        if((TIMER0 == timer_periph) || (TIMER1 == timer_periph) || (TIMER2 == timer_periph) || (TIMER3 == timer_periph) ||
000004  4a29              LDR      r2,|L47.172|
000006  4290              CMP      r0,r2
000008  d020              BEQ      |L47.76|
00000a  f1b04f80          CMP      r0,#0x40000000
00000e  d01d              BEQ      |L47.76|
000010  4a27              LDR      r2,|L47.176|
000012  4290              CMP      r0,r2
000014  d01a              BEQ      |L47.76|
000016  4a27              LDR      r2,|L47.180|
000018  4290              CMP      r0,r2
00001a  d017              BEQ      |L47.76|
;;;170           (TIMER4 == timer_periph) || (TIMER7 == timer_periph) || (TIMER8 == timer_periph) || (TIMER9 == timer_periph) ||
00001c  4a26              LDR      r2,|L47.184|
00001e  4290              CMP      r0,r2
000020  d014              BEQ      |L47.76|
000022  4a26              LDR      r2,|L47.188|
000024  4290              CMP      r0,r2
000026  d011              BEQ      |L47.76|
000028  4a25              LDR      r2,|L47.192|
00002a  4290              CMP      r0,r2
00002c  d00e              BEQ      |L47.76|
00002e  4a25              LDR      r2,|L47.196|
000030  4290              CMP      r0,r2
000032  d00b              BEQ      |L47.76|
;;;171           (TIMER10 == timer_periph) || (TIMER11 == timer_periph) || (TIMER12 == timer_periph) || (TIMER13 == timer_periph)){
000034  4a24              LDR      r2,|L47.200|
000036  4290              CMP      r0,r2
000038  d008              BEQ      |L47.76|
00003a  4a24              LDR      r2,|L47.204|
00003c  4290              CMP      r0,r2
00003e  d005              BEQ      |L47.76|
000040  4a23              LDR      r2,|L47.208|
000042  4290              CMP      r0,r2
000044  d002              BEQ      |L47.76|
000046  4a23              LDR      r2,|L47.212|
000048  4290              CMP      r0,r2
00004a  d10f              BNE      |L47.108|
                  |L47.76|
;;;172            TIMER_CTL0(timer_periph) &= (~(uint32_t)(TIMER_CTL0_DIR | TIMER_CTL0_CAM));
00004c  6802              LDR      r2,[r0,#0]
00004e  f0220270          BIC      r2,r2,#0x70
000052  6002              STR      r2,[r0,#0]
;;;173            TIMER_CTL0(timer_periph) |= (uint32_t)(initpara->alignedmode & ALIGNEDMODE_MASK);
000054  6802              LDR      r2,[r0,#0]
000056  788b              LDRB     r3,[r1,#2]
000058  f0030360          AND      r3,r3,#0x60
00005c  431a              ORRS     r2,r2,r3
00005e  6002              STR      r2,[r0,#0]
;;;174            TIMER_CTL0(timer_periph) |= (uint32_t)(initpara->counterdirection & COUNTERDIRECTION_MASK);
000060  6802              LDR      r2,[r0,#0]
000062  790b              LDRB     r3,[r1,#4]
000064  f0030310          AND      r3,r3,#0x10
000068  431a              ORRS     r2,r2,r3
00006a  6002              STR      r2,[r0,#0]
                  |L47.108|
;;;175        }
;;;176    
;;;177        /* configure the autoreload value */
;;;178        TIMER_CAR(timer_periph) = (uint32_t)initpara->period;
00006c  688a              LDR      r2,[r1,#8]
00006e  62c2              STR      r2,[r0,#0x2c]
;;;179    
;;;180        if((TIMER5 != timer_periph) && (TIMER6 != timer_periph)){
000070  4a19              LDR      r2,|L47.216|
000072  4290              CMP      r0,r2
000074  d00c              BEQ      |L47.144|
000076  4a19              LDR      r2,|L47.220|
000078  4290              CMP      r0,r2
00007a  d009              BEQ      |L47.144|
;;;181            /* reset the CKDIV bit */
;;;182            TIMER_CTL0(timer_periph) &= (~(uint32_t)TIMER_CTL0_CKDIV);
00007c  6802              LDR      r2,[r0,#0]
00007e  f4227240          BIC      r2,r2,#0x300
000082  6002              STR      r2,[r0,#0]
;;;183            TIMER_CTL0(timer_periph) |= (uint32_t)(initpara->clockdivision & CLOCKDIVISION_MASK);
000084  6802              LDR      r2,[r0,#0]
000086  898b              LDRH     r3,[r1,#0xc]
000088  f4037340          AND      r3,r3,#0x300
00008c  431a              ORRS     r2,r2,r3
00008e  6002              STR      r2,[r0,#0]
                  |L47.144|
;;;184        }
;;;185    
;;;186        if((TIMER0 == timer_periph) || (TIMER7 == timer_periph)){
000090  4a06              LDR      r2,|L47.172|
000092  4290              CMP      r0,r2
000094  d002              BEQ      |L47.156|
000096  4a09              LDR      r2,|L47.188|
000098  4290              CMP      r0,r2
00009a  d101              BNE      |L47.160|
                  |L47.156|
;;;187            /* configure the repetition counter value */
;;;188            TIMER_CREP(timer_periph) = (uint32_t)initpara->repetitioncounter;
00009c  7b8a              LDRB     r2,[r1,#0xe]
00009e  6302              STR      r2,[r0,#0x30]
                  |L47.160|
;;;189        }
;;;190    
;;;191        /* generate an update event */
;;;192        TIMER_SWEVG(timer_periph) |= (uint32_t)TIMER_SWEVG_UPG;
0000a0  6942              LDR      r2,[r0,#0x14]
0000a2  f0420201          ORR      r2,r2,#1
0000a6  6142              STR      r2,[r0,#0x14]
;;;193    }
0000a8  4770              BX       lr
;;;194    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L47.172|
                          DCD      0x40012c00
                  |L47.176|
                          DCD      0x40000400
                  |L47.180|
                          DCD      0x40000800
                  |L47.184|
                          DCD      0x40000c00
                  |L47.188|
                          DCD      0x40013400
                  |L47.192|
                          DCD      0x40014c00
                  |L47.196|
                          DCD      0x40015000
                  |L47.200|
                          DCD      0x40015400
                  |L47.204|
                          DCD      0x40001800
                  |L47.208|
                          DCD      0x40001c00
                  |L47.212|
                          DCD      0x40002000
                  |L47.216|
                          DCD      0x40001000
                  |L47.220|
                          DCD      0x40001400

                          AREA ||i.timer_input_capture_config||, CODE, READONLY, ALIGN=1

                  timer_input_capture_config PROC
;;;1257   */
;;;1258   void timer_input_capture_config(uint32_t timer_periph, uint16_t channel, timer_ic_parameter_struct* icpara)
000000  b570              PUSH     {r4-r6,lr}
;;;1259   {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;1260       switch(channel){
000008  b136              CBZ      r6,|L48.24|
00000a  2e01              CMP      r6,#1
00000c  d026              BEQ      |L48.92|
00000e  2e02              CMP      r6,#2
000010  d048              BEQ      |L48.164|
000012  2e03              CMP      r6,#3
000014  d17d              BNE      |L48.274|
000016  e068              B        |L48.234|
                  |L48.24|
;;;1261       /* configure TIMER_CH_0 */
;;;1262       case TIMER_CH_0:
;;;1263           /* reset the CH0EN bit */
;;;1264           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0EN);
000018  6a20              LDR      r0,[r4,#0x20]
00001a  f0200001          BIC      r0,r0,#1
00001e  6220              STR      r0,[r4,#0x20]
;;;1265   
;;;1266           /* reset the CH0P and CH0NP bits */
;;;1267           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH0P | TIMER_CHCTL2_CH0NP));
000020  6a20              LDR      r0,[r4,#0x20]
000022  f020000a          BIC      r0,r0,#0xa
000026  6220              STR      r0,[r4,#0x20]
;;;1268           TIMER_CHCTL2(timer_periph) |= (uint32_t)(icpara->icpolarity);
000028  6a20              LDR      r0,[r4,#0x20]
00002a  8829              LDRH     r1,[r5,#0]
00002c  4308              ORRS     r0,r0,r1
00002e  6220              STR      r0,[r4,#0x20]
;;;1269           /* reset the CH0MS bit */
;;;1270           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0MS);
000030  69a0              LDR      r0,[r4,#0x18]
000032  f0200003          BIC      r0,r0,#3
000036  61a0              STR      r0,[r4,#0x18]
;;;1271           TIMER_CHCTL0(timer_periph) |= (uint32_t)(icpara->icselection);
000038  69a0              LDR      r0,[r4,#0x18]
00003a  8869              LDRH     r1,[r5,#2]
00003c  4308              ORRS     r0,r0,r1
00003e  61a0              STR      r0,[r4,#0x18]
;;;1272           /* reset the CH0CAPFLT bit */
;;;1273           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0CAPFLT);
000040  69a0              LDR      r0,[r4,#0x18]
000042  f02000f0          BIC      r0,r0,#0xf0
000046  61a0              STR      r0,[r4,#0x18]
;;;1274           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(icpara->icfilter) << 4U);
000048  69a0              LDR      r0,[r4,#0x18]
00004a  88e9              LDRH     r1,[r5,#6]
00004c  ea401001          ORR      r0,r0,r1,LSL #4
000050  61a0              STR      r0,[r4,#0x18]
;;;1275   
;;;1276           /* set the CH0EN bit */
;;;1277           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH0EN;
000052  6a20              LDR      r0,[r4,#0x20]
000054  f0400001          ORR      r0,r0,#1
000058  6220              STR      r0,[r4,#0x20]
;;;1278           break;
00005a  e06d              B        |L48.312|
                  |L48.92|
;;;1279       
;;;1280       /* configure TIMER_CH_1 */
;;;1281       case TIMER_CH_1:
;;;1282           /* reset the CH1EN bit */
;;;1283           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1EN);
00005c  6a20              LDR      r0,[r4,#0x20]
00005e  f0200010          BIC      r0,r0,#0x10
000062  6220              STR      r0,[r4,#0x20]
;;;1284   
;;;1285           /* reset the CH1P and CH1NP bits */
;;;1286           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH1P | TIMER_CHCTL2_CH1NP));
000064  6a20              LDR      r0,[r4,#0x20]
000066  f02000a0          BIC      r0,r0,#0xa0
00006a  6220              STR      r0,[r4,#0x20]
;;;1287           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(icpara->icpolarity) << 4U);
00006c  6a20              LDR      r0,[r4,#0x20]
00006e  8829              LDRH     r1,[r5,#0]
000070  ea401001          ORR      r0,r0,r1,LSL #4
000074  6220              STR      r0,[r4,#0x20]
;;;1288           /* reset the CH1MS bit */
;;;1289           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1MS);
000076  69a0              LDR      r0,[r4,#0x18]
000078  f4207040          BIC      r0,r0,#0x300
00007c  61a0              STR      r0,[r4,#0x18]
;;;1290           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(icpara->icselection) << 8U);
00007e  69a0              LDR      r0,[r4,#0x18]
000080  8869              LDRH     r1,[r5,#2]
000082  ea402001          ORR      r0,r0,r1,LSL #8
000086  61a0              STR      r0,[r4,#0x18]
;;;1291           /* reset the CH1CAPFLT bit */
;;;1292           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1CAPFLT);
000088  69a0              LDR      r0,[r4,#0x18]
00008a  f4204070          BIC      r0,r0,#0xf000
00008e  61a0              STR      r0,[r4,#0x18]
;;;1293           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(icpara->icfilter) << 12U);
000090  69a0              LDR      r0,[r4,#0x18]
000092  88e9              LDRH     r1,[r5,#6]
000094  ea403001          ORR      r0,r0,r1,LSL #12
000098  61a0              STR      r0,[r4,#0x18]
;;;1294   
;;;1295           /* set the CH1EN bit */
;;;1296           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH1EN;
00009a  6a20              LDR      r0,[r4,#0x20]
00009c  f0400010          ORR      r0,r0,#0x10
0000a0  6220              STR      r0,[r4,#0x20]
;;;1297           break;
0000a2  e049              B        |L48.312|
                  |L48.164|
;;;1298       /* configure TIMER_CH_2 */
;;;1299       case TIMER_CH_2:
;;;1300           /* reset the CH2EN bit */
;;;1301           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH2EN);
0000a4  6a20              LDR      r0,[r4,#0x20]
0000a6  f4207080          BIC      r0,r0,#0x100
0000aa  6220              STR      r0,[r4,#0x20]
;;;1302   
;;;1303           /* reset the CH2P and CH2NP bits */
;;;1304           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH2P | TIMER_CHCTL2_CH2NP));
0000ac  6a20              LDR      r0,[r4,#0x20]
0000ae  f4206020          BIC      r0,r0,#0xa00
0000b2  6220              STR      r0,[r4,#0x20]
;;;1305           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(icpara->icpolarity) << 8U);
0000b4  6a20              LDR      r0,[r4,#0x20]
0000b6  8829              LDRH     r1,[r5,#0]
0000b8  ea402001          ORR      r0,r0,r1,LSL #8
0000bc  6220              STR      r0,[r4,#0x20]
;;;1306   
;;;1307           /* reset the CH2MS bit */
;;;1308           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2MS);
0000be  69e0              LDR      r0,[r4,#0x1c]
0000c0  f0200003          BIC      r0,r0,#3
0000c4  61e0              STR      r0,[r4,#0x1c]
;;;1309           TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)(icpara->icselection));
0000c6  69e0              LDR      r0,[r4,#0x1c]
0000c8  8869              LDRH     r1,[r5,#2]
0000ca  4308              ORRS     r0,r0,r1
0000cc  61e0              STR      r0,[r4,#0x1c]
;;;1310   
;;;1311           /* reset the CH2CAPFLT bit */
;;;1312           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH2CAPFLT);
0000ce  69e0              LDR      r0,[r4,#0x1c]
0000d0  f02000f0          BIC      r0,r0,#0xf0
0000d4  61e0              STR      r0,[r4,#0x1c]
;;;1313           TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)(icpara->icfilter) << 4U);
0000d6  69e0              LDR      r0,[r4,#0x1c]
0000d8  88e9              LDRH     r1,[r5,#6]
0000da  ea401001          ORR      r0,r0,r1,LSL #4
0000de  61e0              STR      r0,[r4,#0x1c]
;;;1314   
;;;1315           /* set the CH2EN bit */
;;;1316           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH2EN;
0000e0  6a20              LDR      r0,[r4,#0x20]
0000e2  f4407080          ORR      r0,r0,#0x100
0000e6  6220              STR      r0,[r4,#0x20]
;;;1317           break;
0000e8  e026              B        |L48.312|
                  |L48.234|
;;;1318       /* configure TIMER_CH_3 */
;;;1319       case TIMER_CH_3:
;;;1320           /* reset the CH3EN bit */
;;;1321           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH3EN);
0000ea  6a20              LDR      r0,[r4,#0x20]
0000ec  f4205080          BIC      r0,r0,#0x1000
0000f0  6220              STR      r0,[r4,#0x20]
;;;1322   
;;;1323           /* reset the CH3P bits */
;;;1324           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH3P));
0000f2  6a20              LDR      r0,[r4,#0x20]
0000f4  f4205000          BIC      r0,r0,#0x2000
0000f8  6220              STR      r0,[r4,#0x20]
;;;1325           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(icpara->icpolarity) << 12U);
0000fa  6a20              LDR      r0,[r4,#0x20]
0000fc  8829              LDRH     r1,[r5,#0]
0000fe  ea403001          ORR      r0,r0,r1,LSL #12
000102  6220              STR      r0,[r4,#0x20]
;;;1326   
;;;1327           /* reset the CH3MS bit */
;;;1328           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3MS);
000104  69e0              LDR      r0,[r4,#0x1c]
000106  f4207040          BIC      r0,r0,#0x300
00010a  61e0              STR      r0,[r4,#0x1c]
;;;1329           TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)(icpara->icselection) << 8U);
00010c  69e0              LDR      r0,[r4,#0x1c]
00010e  8869              LDRH     r1,[r5,#2]
000110  e000              B        |L48.276|
                  |L48.274|
000112  e010              B        |L48.310|
                  |L48.276|
000114  ea402001          ORR      r0,r0,r1,LSL #8
000118  61e0              STR      r0,[r4,#0x1c]
;;;1330   
;;;1331           /* reset the CH3CAPFLT bit */
;;;1332           TIMER_CHCTL1(timer_periph) &= (~(uint32_t)TIMER_CHCTL1_CH3CAPFLT);
00011a  69e0              LDR      r0,[r4,#0x1c]
00011c  f4204070          BIC      r0,r0,#0xf000
000120  61e0              STR      r0,[r4,#0x1c]
;;;1333           TIMER_CHCTL1(timer_periph) |= (uint32_t)((uint32_t)(icpara->icfilter) << 12U);
000122  69e0              LDR      r0,[r4,#0x1c]
000124  88e9              LDRH     r1,[r5,#6]
000126  ea403001          ORR      r0,r0,r1,LSL #12
00012a  61e0              STR      r0,[r4,#0x1c]
;;;1334   
;;;1335           /* set the CH3EN bit */
;;;1336           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH3EN;
00012c  6a20              LDR      r0,[r4,#0x20]
00012e  f4405080          ORR      r0,r0,#0x1000
000132  6220              STR      r0,[r4,#0x20]
;;;1337           break;
000134  e000              B        |L48.312|
                  |L48.310|
;;;1338       default:
;;;1339           break;
000136  bf00              NOP      
                  |L48.312|
000138  bf00              NOP                            ;1278
;;;1340       }
;;;1341       /* configure TIMER channel input capture prescaler value */
;;;1342       timer_channel_input_capture_prescaler_config(timer_periph,channel,(uint16_t)(icpara->icprescaler));
00013a  88aa              LDRH     r2,[r5,#4]
00013c  4631              MOV      r1,r6
00013e  4620              MOV      r0,r4
000140  f7fffffe          BL       timer_channel_input_capture_prescaler_config
;;;1343   }
000144  bd70              POP      {r4-r6,pc}
;;;1344   
                          ENDP


                          AREA ||i.timer_input_pwm_capture_config||, CODE, READONLY, ALIGN=1

                  timer_input_pwm_capture_config PROC
;;;1444   */
;;;1445   void timer_input_pwm_capture_config(uint32_t timer_periph, uint16_t channel, timer_ic_parameter_struct* icpwm)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1446   {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;1447       uint16_t icpolarity  = 0x0U;
00000a  2700              MOVS     r7,#0
;;;1448       uint16_t icselection = 0x0U;
00000c  46b8              MOV      r8,r7
;;;1449   
;;;1450       /* Set channel input polarity */
;;;1451       if(TIMER_IC_POLARITY_RISING == icpwm->icpolarity){
00000e  8828              LDRH     r0,[r5,#0]
000010  b908              CBNZ     r0,|L49.22|
;;;1452           icpolarity = TIMER_IC_POLARITY_FALLING;
000012  2702              MOVS     r7,#2
000014  e000              B        |L49.24|
                  |L49.22|
;;;1453       }else{
;;;1454           icpolarity = TIMER_IC_POLARITY_RISING;
000016  2700              MOVS     r7,#0
                  |L49.24|
;;;1455       }
;;;1456       /* Set channel input mode selection */
;;;1457       if(TIMER_IC_SELECTION_DIRECTTI == icpwm->icselection){
000018  8868              LDRH     r0,[r5,#2]
00001a  2801              CMP      r0,#1
00001c  d102              BNE      |L49.36|
;;;1458           icselection = TIMER_IC_SELECTION_INDIRECTTI;
00001e  f04f0802          MOV      r8,#2
000022  e001              B        |L49.40|
                  |L49.36|
;;;1459       }else{
;;;1460           icselection = TIMER_IC_SELECTION_DIRECTTI;
000024  f04f0801          MOV      r8,#1
                  |L49.40|
;;;1461       }
;;;1462   
;;;1463       if(TIMER_CH_0 == channel){
000028  2e00              CMP      r6,#0
00002a  d14c              BNE      |L49.198|
;;;1464           /* reset the CH0EN bit */
;;;1465           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0EN);
00002c  6a20              LDR      r0,[r4,#0x20]
00002e  f0200001          BIC      r0,r0,#1
000032  6220              STR      r0,[r4,#0x20]
;;;1466           /* reset the CH0P and CH0NP bits */
;;;1467           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH0P | TIMER_CHCTL2_CH0NP));
000034  6a20              LDR      r0,[r4,#0x20]
000036  f020000a          BIC      r0,r0,#0xa
00003a  6220              STR      r0,[r4,#0x20]
;;;1468           /* set the CH0P and CH0NP bits */
;;;1469           TIMER_CHCTL2(timer_periph) |= (uint32_t)(icpwm->icpolarity);
00003c  6a20              LDR      r0,[r4,#0x20]
00003e  8829              LDRH     r1,[r5,#0]
000040  4308              ORRS     r0,r0,r1
000042  6220              STR      r0,[r4,#0x20]
;;;1470           /* reset the CH0MS bit */
;;;1471           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0MS);
000044  69a0              LDR      r0,[r4,#0x18]
000046  f0200003          BIC      r0,r0,#3
00004a  61a0              STR      r0,[r4,#0x18]
;;;1472           /* set the CH0MS bit */
;;;1473           TIMER_CHCTL0(timer_periph) |= (uint32_t)(icpwm->icselection);
00004c  69a0              LDR      r0,[r4,#0x18]
00004e  8869              LDRH     r1,[r5,#2]
000050  4308              ORRS     r0,r0,r1
000052  61a0              STR      r0,[r4,#0x18]
;;;1474           /* reset the CH0CAPFLT bit */
;;;1475           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0CAPFLT);
000054  69a0              LDR      r0,[r4,#0x18]
000056  f02000f0          BIC      r0,r0,#0xf0
00005a  61a0              STR      r0,[r4,#0x18]
;;;1476           /* set the CH0CAPFLT bit */
;;;1477           TIMER_CHCTL0(timer_periph) |= ((uint32_t)(icpwm->icfilter) << 4U);
00005c  69a0              LDR      r0,[r4,#0x18]
00005e  88e9              LDRH     r1,[r5,#6]
000060  ea401001          ORR      r0,r0,r1,LSL #4
000064  61a0              STR      r0,[r4,#0x18]
;;;1478           /* set the CH0EN bit */
;;;1479           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH0EN;
000066  6a20              LDR      r0,[r4,#0x20]
000068  f0400001          ORR      r0,r0,#1
00006c  6220              STR      r0,[r4,#0x20]
;;;1480           /* configure TIMER channel input capture prescaler value */
;;;1481           timer_channel_input_capture_prescaler_config(timer_periph,TIMER_CH_0,(uint16_t)(icpwm->icprescaler));
00006e  88aa              LDRH     r2,[r5,#4]
000070  2100              MOVS     r1,#0
000072  4620              MOV      r0,r4
000074  f7fffffe          BL       timer_channel_input_capture_prescaler_config
;;;1482   
;;;1483           /* reset the CH1EN bit */
;;;1484           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1EN);
000078  6a20              LDR      r0,[r4,#0x20]
00007a  f0200010          BIC      r0,r0,#0x10
00007e  6220              STR      r0,[r4,#0x20]
;;;1485           /* reset the CH1P and CH1NP bits */
;;;1486           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH1P|TIMER_CHCTL2_CH1NP));
000080  6a20              LDR      r0,[r4,#0x20]
000082  f02000a0          BIC      r0,r0,#0xa0
000086  6220              STR      r0,[r4,#0x20]
;;;1487           /* set the CH1P and CH1NP bits */
;;;1488           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)icpolarity<< 4U);
000088  6a20              LDR      r0,[r4,#0x20]
00008a  ea401007          ORR      r0,r0,r7,LSL #4
00008e  6220              STR      r0,[r4,#0x20]
;;;1489           /* reset the CH1MS bit */
;;;1490           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1MS);
000090  69a0              LDR      r0,[r4,#0x18]
000092  f4207040          BIC      r0,r0,#0x300
000096  61a0              STR      r0,[r4,#0x18]
;;;1491           /* set the CH1MS bit */
;;;1492           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)icselection<< 8U);
000098  69a0              LDR      r0,[r4,#0x18]
00009a  ea402008          ORR      r0,r0,r8,LSL #8
00009e  61a0              STR      r0,[r4,#0x18]
;;;1493           /* reset the CH1CAPFLT bit */
;;;1494           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1CAPFLT);
0000a0  69a0              LDR      r0,[r4,#0x18]
0000a2  f4204070          BIC      r0,r0,#0xf000
0000a6  61a0              STR      r0,[r4,#0x18]
;;;1495           /* set the CH1CAPFLT bit */
;;;1496           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(icpwm->icfilter)<< 12U);
0000a8  69a0              LDR      r0,[r4,#0x18]
0000aa  88e9              LDRH     r1,[r5,#6]
0000ac  ea403001          ORR      r0,r0,r1,LSL #12
0000b0  61a0              STR      r0,[r4,#0x18]
;;;1497           /* set the CH1EN bit */
;;;1498           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH1EN;
0000b2  6a20              LDR      r0,[r4,#0x20]
0000b4  f0400010          ORR      r0,r0,#0x10
0000b8  6220              STR      r0,[r4,#0x20]
;;;1499           /* configure TIMER channel input capture prescaler value */
;;;1500           timer_channel_input_capture_prescaler_config(timer_periph,TIMER_CH_1,(uint16_t)(icpwm->icprescaler));
0000ba  88aa              LDRH     r2,[r5,#4]
0000bc  2101              MOVS     r1,#1
0000be  4620              MOV      r0,r4
0000c0  f7fffffe          BL       timer_channel_input_capture_prescaler_config
0000c4  e04c              B        |L49.352|
                  |L49.198|
;;;1501       }else{
;;;1502           /* reset the CH1EN bit */
;;;1503           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH1EN);
0000c6  6a20              LDR      r0,[r4,#0x20]
0000c8  f0200010          BIC      r0,r0,#0x10
0000cc  6220              STR      r0,[r4,#0x20]
;;;1504           /* reset the CH1P and CH1NP bits */
;;;1505           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH1P|TIMER_CHCTL2_CH1NP));
0000ce  6a20              LDR      r0,[r4,#0x20]
0000d0  f02000a0          BIC      r0,r0,#0xa0
0000d4  6220              STR      r0,[r4,#0x20]
;;;1506           /* set the CH1P and CH1NP bits */
;;;1507           TIMER_CHCTL2(timer_periph) |= (uint32_t)((uint32_t)(icpwm->icpolarity)<< 4U);
0000d6  6a20              LDR      r0,[r4,#0x20]
0000d8  8829              LDRH     r1,[r5,#0]
0000da  ea401001          ORR      r0,r0,r1,LSL #4
0000de  6220              STR      r0,[r4,#0x20]
;;;1508           /* reset the CH1MS bit */
;;;1509           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1MS);
0000e0  69a0              LDR      r0,[r4,#0x18]
0000e2  f4207040          BIC      r0,r0,#0x300
0000e6  61a0              STR      r0,[r4,#0x18]
;;;1510           /* set the CH1MS bit */
;;;1511           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(icpwm->icselection)<< 8U);
0000e8  69a0              LDR      r0,[r4,#0x18]
0000ea  8869              LDRH     r1,[r5,#2]
0000ec  ea402001          ORR      r0,r0,r1,LSL #8
0000f0  61a0              STR      r0,[r4,#0x18]
;;;1512           /* reset the CH1CAPFLT bit */
;;;1513           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH1CAPFLT);
0000f2  69a0              LDR      r0,[r4,#0x18]
0000f4  f4204070          BIC      r0,r0,#0xf000
0000f8  61a0              STR      r0,[r4,#0x18]
;;;1514           /* set the CH1CAPFLT bit */
;;;1515           TIMER_CHCTL0(timer_periph) |= (uint32_t)((uint32_t)(icpwm->icfilter)<< 12U);
0000fa  69a0              LDR      r0,[r4,#0x18]
0000fc  88e9              LDRH     r1,[r5,#6]
0000fe  ea403001          ORR      r0,r0,r1,LSL #12
000102  61a0              STR      r0,[r4,#0x18]
;;;1516           /* set the CH1EN bit */
;;;1517           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH1EN;
000104  6a20              LDR      r0,[r4,#0x20]
000106  f0400010          ORR      r0,r0,#0x10
00010a  6220              STR      r0,[r4,#0x20]
;;;1518           /* configure TIMER channel input capture prescaler value */
;;;1519           timer_channel_input_capture_prescaler_config(timer_periph,TIMER_CH_1,(uint16_t)(icpwm->icprescaler));
00010c  88aa              LDRH     r2,[r5,#4]
00010e  2101              MOVS     r1,#1
000110  4620              MOV      r0,r4
000112  f7fffffe          BL       timer_channel_input_capture_prescaler_config
;;;1520   
;;;1521           /* reset the CH0EN bit */
;;;1522           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)TIMER_CHCTL2_CH0EN);
000116  6a20              LDR      r0,[r4,#0x20]
000118  f0200001          BIC      r0,r0,#1
00011c  6220              STR      r0,[r4,#0x20]
;;;1523           /* reset the CH0P and CH0NP bits */
;;;1524           TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH0P|TIMER_CHCTL2_CH0NP));
00011e  6a20              LDR      r0,[r4,#0x20]
000120  f020000a          BIC      r0,r0,#0xa
000124  6220              STR      r0,[r4,#0x20]
;;;1525           /* set the CH0P and CH0NP bits */
;;;1526           TIMER_CHCTL2(timer_periph) |= (uint32_t)icpolarity;
000126  6a20              LDR      r0,[r4,#0x20]
000128  4338              ORRS     r0,r0,r7
00012a  6220              STR      r0,[r4,#0x20]
;;;1527           /* reset the CH0MS bit */
;;;1528           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0MS);
00012c  69a0              LDR      r0,[r4,#0x18]
00012e  f0200003          BIC      r0,r0,#3
000132  61a0              STR      r0,[r4,#0x18]
;;;1529           /* set the CH0MS bit */
;;;1530           TIMER_CHCTL0(timer_periph) |= (uint32_t)icselection;
000134  69a0              LDR      r0,[r4,#0x18]
000136  ea400008          ORR      r0,r0,r8
00013a  61a0              STR      r0,[r4,#0x18]
;;;1531           /* reset the CH0CAPFLT bit */
;;;1532           TIMER_CHCTL0(timer_periph) &= (~(uint32_t)TIMER_CHCTL0_CH0CAPFLT);
00013c  69a0              LDR      r0,[r4,#0x18]
00013e  f02000f0          BIC      r0,r0,#0xf0
000142  61a0              STR      r0,[r4,#0x18]
;;;1533           /* set the CH0CAPFLT bit */
;;;1534           TIMER_CHCTL0(timer_periph) |= ((uint32_t)(icpwm->icfilter) << 4U);
000144  69a0              LDR      r0,[r4,#0x18]
000146  88e9              LDRH     r1,[r5,#6]
000148  ea401001          ORR      r0,r0,r1,LSL #4
00014c  61a0              STR      r0,[r4,#0x18]
;;;1535           /* set the CH0EN bit */
;;;1536           TIMER_CHCTL2(timer_periph) |= (uint32_t)TIMER_CHCTL2_CH0EN;
00014e  6a20              LDR      r0,[r4,#0x20]
000150  f0400001          ORR      r0,r0,#1
000154  6220              STR      r0,[r4,#0x20]
;;;1537           /* configure TIMER channel input capture prescaler value */
;;;1538           timer_channel_input_capture_prescaler_config(timer_periph,TIMER_CH_0,(uint16_t)(icpwm->icprescaler));
000156  88aa              LDRH     r2,[r5,#4]
000158  2100              MOVS     r1,#0
00015a  4620              MOV      r0,r4
00015c  f7fffffe          BL       timer_channel_input_capture_prescaler_config
                  |L49.352|
;;;1539       }
;;;1540   }
000160  e8bd81f0          POP      {r4-r8,pc}
;;;1541   
                          ENDP


                          AREA ||i.timer_input_trigger_source_select||, CODE, READONLY, ALIGN=1

                  timer_input_trigger_source_select PROC
;;;1578   */
;;;1579   void timer_input_trigger_source_select(uint32_t timer_periph, uint32_t intrigger)
000000  6882              LDR      r2,[r0,#8]
;;;1580   {
;;;1581       TIMER_SMCFG(timer_periph) &= (~(uint32_t)TIMER_SMCFG_TRGS);
000002  f0220270          BIC      r2,r2,#0x70
000006  6082              STR      r2,[r0,#8]
;;;1582       TIMER_SMCFG(timer_periph) |= (uint32_t)intrigger;
000008  6882              LDR      r2,[r0,#8]
00000a  430a              ORRS     r2,r2,r1
00000c  6082              STR      r2,[r0,#8]
;;;1583   }
00000e  4770              BX       lr
;;;1584   
                          ENDP


                          AREA ||i.timer_internal_clock_config||, CODE, READONLY, ALIGN=1

                  timer_internal_clock_config PROC
;;;1714   */
;;;1715   void timer_internal_clock_config(uint32_t timer_periph)
000000  6881              LDR      r1,[r0,#8]
;;;1716   {
;;;1717       TIMER_SMCFG(timer_periph) &= ~(uint32_t)TIMER_SMCFG_SMC;
000002  f0210107          BIC      r1,r1,#7
000006  6081              STR      r1,[r0,#8]
;;;1718   }
000008  4770              BX       lr
;;;1719   
                          ENDP


                          AREA ||i.timer_internal_trigger_as_external_clock_config||, CODE, READONLY, ALIGN=1

                  timer_internal_trigger_as_external_clock_config PROC
;;;1731   */
;;;1732   void timer_internal_trigger_as_external_clock_config(uint32_t timer_periph, uint32_t intrigger)
000000  b510              PUSH     {r4,lr}
;;;1733   {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;1734       timer_input_trigger_source_select(timer_periph,intrigger);
000006  4621              MOV      r1,r4
000008  4618              MOV      r0,r3
00000a  f7fffffe          BL       timer_input_trigger_source_select
;;;1735       TIMER_SMCFG(timer_periph) &= ~(uint32_t)TIMER_SMCFG_SMC;
00000e  6898              LDR      r0,[r3,#8]
000010  f0200007          BIC      r0,r0,#7
000014  6098              STR      r0,[r3,#8]
;;;1736       TIMER_SMCFG(timer_periph) |= (uint32_t)TIMER_SLAVE_MODE_EXTERNAL0;
000016  6898              LDR      r0,[r3,#8]
000018  f0400007          ORR      r0,r0,#7
00001c  6098              STR      r0,[r3,#8]
;;;1737   }
00001e  bd10              POP      {r4,pc}
;;;1738   
                          ENDP


                          AREA ||i.timer_interrupt_disable||, CODE, READONLY, ALIGN=1

                  timer_interrupt_disable PROC
;;;1898   */
;;;1899   void timer_interrupt_disable(uint32_t timer_periph, uint32_t interrupt)
000000  68c2              LDR      r2,[r0,#0xc]
;;;1900   {
;;;1901       TIMER_DMAINTEN(timer_periph) &= (~(uint32_t)interrupt); 
000002  438a              BICS     r2,r2,r1
000004  60c2              STR      r2,[r0,#0xc]
;;;1902   }
000006  4770              BX       lr
;;;1903   
                          ENDP


                          AREA ||i.timer_interrupt_enable||, CODE, READONLY, ALIGN=1

                  timer_interrupt_enable PROC
;;;1877   */
;;;1878   void timer_interrupt_enable(uint32_t timer_periph, uint32_t interrupt)
000000  68c2              LDR      r2,[r0,#0xc]
;;;1879   {
;;;1880       TIMER_DMAINTEN(timer_periph) |= (uint32_t) interrupt; 
000002  430a              ORRS     r2,r2,r1
000004  60c2              STR      r2,[r0,#0xc]
;;;1881   }
000006  4770              BX       lr
;;;1882   
                          ENDP


                          AREA ||i.timer_interrupt_flag_clear||, CODE, READONLY, ALIGN=1

                  timer_interrupt_flag_clear PROC
;;;1946   */
;;;1947   void timer_interrupt_flag_clear(uint32_t timer_periph, uint32_t interrupt)
000000  43ca              MVNS     r2,r1
;;;1948   {
;;;1949       TIMER_INTF(timer_periph) = (~(uint32_t)interrupt);
000002  6102              STR      r2,[r0,#0x10]
;;;1950   }
000004  4770              BX       lr
;;;1951   
                          ENDP


                          AREA ||i.timer_interrupt_flag_get||, CODE, READONLY, ALIGN=1

                  timer_interrupt_flag_get PROC
;;;1919   */
;;;1920   FlagStatus timer_interrupt_flag_get(uint32_t timer_periph, uint32_t interrupt)
000000  4602              MOV      r2,r0
;;;1921   {
;;;1922       uint32_t val;
;;;1923       val = (TIMER_DMAINTEN(timer_periph) & interrupt);
000002  68d0              LDR      r0,[r2,#0xc]
000004  ea000301          AND      r3,r0,r1
;;;1924       if((RESET != (TIMER_INTF(timer_periph) & interrupt) ) && (RESET != val)){
000008  6910              LDR      r0,[r2,#0x10]
00000a  4008              ANDS     r0,r0,r1
00000c  b110              CBZ      r0,|L56.20|
00000e  b10b              CBZ      r3,|L56.20|
;;;1925           return SET;
000010  2001              MOVS     r0,#1
                  |L56.18|
;;;1926       }else{
;;;1927           return RESET;
;;;1928       }
;;;1929   }
000012  4770              BX       lr
                  |L56.20|
000014  2000              MOVS     r0,#0                 ;1927
000016  e7fc              B        |L56.18|
;;;1930   
                          ENDP


                          AREA ||i.timer_master_output_trigger_source_select||, CODE, READONLY, ALIGN=1

                  timer_master_output_trigger_source_select PROC
;;;1600   */
;;;1601   void timer_master_output_trigger_source_select(uint32_t timer_periph, uint32_t outrigger)
000000  6842              LDR      r2,[r0,#4]
;;;1602   {
;;;1603       TIMER_CTL1(timer_periph) &= (~(uint32_t)TIMER_CTL1_MMC);
000002  f0220270          BIC      r2,r2,#0x70
000006  6042              STR      r2,[r0,#4]
;;;1604       TIMER_CTL1(timer_periph) |= (uint32_t)outrigger;
000008  6842              LDR      r2,[r0,#4]
00000a  430a              ORRS     r2,r2,r1
00000c  6042              STR      r2,[r0,#4]
;;;1605   }
00000e  4770              BX       lr
;;;1606   
                          ENDP


                          AREA ||i.timer_master_slave_mode_config||, CODE, READONLY, ALIGN=1

                  timer_master_slave_mode_config PROC
;;;1640   */ 
;;;1641   void timer_master_slave_mode_config(uint32_t timer_periph, uint32_t masterslave)
000000  2980              CMP      r1,#0x80
;;;1642   {
;;;1643       if(TIMER_MASTER_SLAVE_MODE_ENABLE == masterslave){
000002  d104              BNE      |L58.14|
;;;1644           TIMER_SMCFG(timer_periph) |= (uint32_t)TIMER_SMCFG_MSM;
000004  6882              LDR      r2,[r0,#8]
000006  f0420280          ORR      r2,r2,#0x80
00000a  6082              STR      r2,[r0,#8]
00000c  e004              B        |L58.24|
                  |L58.14|
;;;1645       }else if(TIMER_MASTER_SLAVE_MODE_DISABLE == masterslave){
00000e  b919              CBNZ     r1,|L58.24|
;;;1646           TIMER_SMCFG(timer_periph) &= ~(uint32_t)TIMER_SMCFG_MSM;
000010  6882              LDR      r2,[r0,#8]
000012  f0220280          BIC      r2,r2,#0x80
000016  6082              STR      r2,[r0,#8]
                  |L58.24|
;;;1647       }else{
;;;1648           /* illegal parameters */        
;;;1649       }
;;;1650   }
000018  4770              BX       lr
;;;1651   
                          ENDP


                          AREA ||i.timer_prescaler_config||, CODE, READONLY, ALIGN=1

                  timer_prescaler_config PROC
;;;311    */
;;;312    void timer_prescaler_config(uint32_t timer_periph, uint16_t prescaler, uint32_t pscreload)
000000  6281              STR      r1,[r0,#0x28]
;;;313    {
;;;314        TIMER_PSC(timer_periph) = (uint32_t)prescaler;
;;;315        
;;;316        if(TIMER_PSC_RELOAD_NOW == pscreload){
000002  2a01              CMP      r2,#1
000004  d103              BNE      |L59.14|
;;;317            TIMER_SWEVG(timer_periph) |= (uint32_t)TIMER_SWEVG_UPG;
000006  6943              LDR      r3,[r0,#0x14]
000008  f0430301          ORR      r3,r3,#1
00000c  6143              STR      r3,[r0,#0x14]
                  |L59.14|
;;;318        }
;;;319    }
00000e  4770              BX       lr
;;;320    
                          ENDP


                          AREA ||i.timer_prescaler_read||, CODE, READONLY, ALIGN=1

                  timer_prescaler_read PROC
;;;375    */         
;;;376    uint16_t timer_prescaler_read(uint32_t timer_periph)
000000  4601              MOV      r1,r0
;;;377    {
;;;378        uint16_t prescaler_value = 0U;
000002  2000              MOVS     r0,#0
;;;379        prescaler_value = (uint16_t)(TIMER_PSC(timer_periph));
000004  6a8a              LDR      r2,[r1,#0x28]
000006  b290              UXTH     r0,r2
;;;380        return (prescaler_value);
;;;381    }
000008  4770              BX       lr
;;;382    
                          ENDP


                          AREA ||i.timer_primary_output_config||, CODE, READONLY, ALIGN=1

                  timer_primary_output_config PROC
;;;637    */
;;;638    void timer_primary_output_config(uint32_t timer_periph, ControlStatus newvalue)
000000  2901              CMP      r1,#1
;;;639    {
;;;640        if(ENABLE == newvalue){
000002  d104              BNE      |L61.14|
;;;641            TIMER_CCHP(timer_periph) |= (uint32_t)TIMER_CCHP_POEN;
000004  6c42              LDR      r2,[r0,#0x44]
000006  f4424200          ORR      r2,r2,#0x8000
00000a  6442              STR      r2,[r0,#0x44]
00000c  e003              B        |L61.22|
                  |L61.14|
;;;642        }else{
;;;643            TIMER_CCHP(timer_periph) &= (~(uint32_t)TIMER_CCHP_POEN);
00000e  6c42              LDR      r2,[r0,#0x44]
000010  f4224200          BIC      r2,r2,#0x8000
000014  6442              STR      r2,[r0,#0x44]
                  |L61.22|
;;;644        }
;;;645    }
000016  4770              BX       lr
;;;646    
                          ENDP


                          AREA ||i.timer_quadrature_decoder_mode_config||, CODE, READONLY, ALIGN=1

                  timer_quadrature_decoder_mode_config PROC
;;;1694   */
;;;1695   void timer_quadrature_decoder_mode_config(uint32_t timer_periph, uint32_t decomode, uint16_t ic0polarity, uint16_t ic1polarity)
000000  b530              PUSH     {r4,r5,lr}
;;;1696   {
;;;1697       /* configure the quadrature decoder mode */
;;;1698       TIMER_SMCFG(timer_periph) &= (~(uint32_t)TIMER_SMCFG_SMC);
000002  6884              LDR      r4,[r0,#8]
000004  f0240407          BIC      r4,r4,#7
000008  6084              STR      r4,[r0,#8]
;;;1699       TIMER_SMCFG(timer_periph) |= (uint32_t)decomode;
00000a  6884              LDR      r4,[r0,#8]
00000c  430c              ORRS     r4,r4,r1
00000e  6084              STR      r4,[r0,#8]
;;;1700       /* configure input capture selection */
;;;1701       TIMER_CHCTL0(timer_periph) &= (uint32_t)(((~(uint32_t)TIMER_CHCTL0_CH0MS)) & ((~(uint32_t)TIMER_CHCTL0_CH1MS)));
000010  6984              LDR      r4,[r0,#0x18]
000012  f2403503          MOV      r5,#0x303
000016  43ac              BICS     r4,r4,r5
000018  6184              STR      r4,[r0,#0x18]
;;;1702       TIMER_CHCTL0(timer_periph) |= (uint32_t)(TIMER_IC_SELECTION_DIRECTTI | ((uint32_t)TIMER_IC_SELECTION_DIRECTTI << 8U));
00001a  6984              LDR      r4,[r0,#0x18]
00001c  f2401501          MOV      r5,#0x101
000020  432c              ORRS     r4,r4,r5
000022  6184              STR      r4,[r0,#0x18]
;;;1703       /* configure channel input capture polarity */
;;;1704       TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH0P | TIMER_CHCTL2_CH0NP));
000024  6a04              LDR      r4,[r0,#0x20]
000026  f024040a          BIC      r4,r4,#0xa
00002a  6204              STR      r4,[r0,#0x20]
;;;1705       TIMER_CHCTL2(timer_periph) &= (~(uint32_t)(TIMER_CHCTL2_CH1P | TIMER_CHCTL2_CH1NP));
00002c  6a04              LDR      r4,[r0,#0x20]
00002e  f02404a0          BIC      r4,r4,#0xa0
000032  6204              STR      r4,[r0,#0x20]
;;;1706       TIMER_CHCTL2(timer_periph) |= ((uint32_t)ic0polarity | ((uint32_t)ic1polarity << 4U));
000034  6a04              LDR      r4,[r0,#0x20]
000036  ea421503          ORR      r5,r2,r3,LSL #4
00003a  432c              ORRS     r4,r4,r5
00003c  6204              STR      r4,[r0,#0x20]
;;;1707   }
00003e  bd30              POP      {r4,r5,pc}
;;;1708   
                          ENDP


                          AREA ||i.timer_repetition_value_config||, CODE, READONLY, ALIGN=1

                  timer_repetition_value_config PROC
;;;327    */
;;;328    void timer_repetition_value_config(uint32_t timer_periph, uint8_t repetition)
000000  6301              STR      r1,[r0,#0x30]
;;;329    {
;;;330        TIMER_CREP(timer_periph) = (uint32_t)repetition;
;;;331    } 
000002  4770              BX       lr
;;;332     
                          ENDP


                          AREA ||i.timer_single_pulse_mode_config||, CODE, READONLY, ALIGN=1

                  timer_single_pulse_mode_config PROC
;;;392    */
;;;393    void timer_single_pulse_mode_config(uint32_t timer_periph, uint32_t spmode)
000000  2908              CMP      r1,#8
;;;394    {
;;;395        if(TIMER_SP_MODE_SINGLE == spmode){
000002  d104              BNE      |L64.14|
;;;396            TIMER_CTL0(timer_periph) |= (uint32_t)TIMER_CTL0_SPM;
000004  6802              LDR      r2,[r0,#0]
000006  f0420208          ORR      r2,r2,#8
00000a  6002              STR      r2,[r0,#0]
00000c  e004              B        |L64.24|
                  |L64.14|
;;;397        }else if(TIMER_SP_MODE_REPETITIVE == spmode){
00000e  b919              CBNZ     r1,|L64.24|
;;;398            TIMER_CTL0(timer_periph) &= ~((uint32_t)TIMER_CTL0_SPM);
000010  6802              LDR      r2,[r0,#0]
000012  f0220208          BIC      r2,r2,#8
000016  6002              STR      r2,[r0,#0]
                  |L64.24|
;;;399        }else{
;;;400            /* illegal parameters */        
;;;401        }
;;;402    }
000018  4770              BX       lr
;;;403    
                          ENDP


                          AREA ||i.timer_slave_mode_select||, CODE, READONLY, ALIGN=1

                  timer_slave_mode_select PROC
;;;1623   
;;;1624   void timer_slave_mode_select(uint32_t timer_periph, uint32_t slavemode)
000000  6882              LDR      r2,[r0,#8]
;;;1625   {
;;;1626       TIMER_SMCFG(timer_periph) &= (~(uint32_t)TIMER_SMCFG_SMC);
000002  f0220207          BIC      r2,r2,#7
000006  6082              STR      r2,[r0,#8]
;;;1627   
;;;1628       TIMER_SMCFG(timer_periph) |= (uint32_t)slavemode;
000008  6882              LDR      r2,[r0,#8]
00000a  430a              ORRS     r2,r2,r1
00000c  6082              STR      r2,[r0,#8]
;;;1629   }
00000e  4770              BX       lr
;;;1630   
                          ENDP


                          AREA ||i.timer_struct_para_init||, CODE, READONLY, ALIGN=1

                  timer_struct_para_init PROC
;;;137    */
;;;138    void timer_struct_para_init(timer_parameter_struct* initpara)
000000  2100              MOVS     r1,#0
;;;139    {
;;;140        /* initialize the init parameter struct member with the default value */
;;;141        initpara->prescaler         = 0U;
000002  8001              STRH     r1,[r0,#0]
;;;142        initpara->alignedmode       = TIMER_COUNTER_EDGE;
000004  8041              STRH     r1,[r0,#2]
;;;143        initpara->counterdirection  = TIMER_COUNTER_UP;
000006  8081              STRH     r1,[r0,#4]
;;;144        initpara->period            = 65535U;
000008  f64f71ff          MOV      r1,#0xffff
00000c  6081              STR      r1,[r0,#8]
;;;145        initpara->clockdivision     = TIMER_CKDIV_DIV1;
00000e  2100              MOVS     r1,#0
000010  8181              STRH     r1,[r0,#0xc]
;;;146        initpara->repetitioncounter = 0U;
000012  7381              STRB     r1,[r0,#0xe]
;;;147    }
000014  4770              BX       lr
;;;148    
                          ENDP


                          AREA ||i.timer_update_event_disable||, CODE, READONLY, ALIGN=1

                  timer_update_event_disable PROC
;;;255    */
;;;256    void timer_update_event_disable(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;257    {
;;;258        TIMER_CTL0(timer_periph) |= (uint32_t) TIMER_CTL0_UPDIS;
000002  f0410102          ORR      r1,r1,#2
000006  6001              STR      r1,[r0,#0]
;;;259    }
000008  4770              BX       lr
;;;260    
                          ENDP


                          AREA ||i.timer_update_event_enable||, CODE, READONLY, ALIGN=1

                  timer_update_event_enable PROC
;;;244    */
;;;245    void timer_update_event_enable(uint32_t timer_periph)
000000  6801              LDR      r1,[r0,#0]
;;;246    {
;;;247        TIMER_CTL0(timer_periph) &= ~(uint32_t)TIMER_CTL0_UPDIS;
000002  f0210102          BIC      r1,r1,#2
000006  6001              STR      r1,[r0,#0]
;;;248    }
000008  4770              BX       lr
;;;249    
                          ENDP


                          AREA ||i.timer_update_source_config||, CODE, READONLY, ALIGN=1

                  timer_update_source_config PROC
;;;414    */
;;;415    void timer_update_source_config(uint32_t timer_periph, uint32_t update)
000000  2904              CMP      r1,#4
;;;416    {
;;;417        if(TIMER_UPDATE_SRC_REGULAR == update){
000002  d104              BNE      |L69.14|
;;;418            TIMER_CTL0(timer_periph) |= (uint32_t)TIMER_CTL0_UPS;
000004  6802              LDR      r2,[r0,#0]
000006  f0420204          ORR      r2,r2,#4
00000a  6002              STR      r2,[r0,#0]
00000c  e004              B        |L69.24|
                  |L69.14|
;;;419        }else if(TIMER_UPDATE_SRC_GLOBAL == update){
00000e  b919              CBNZ     r1,|L69.24|
;;;420            TIMER_CTL0(timer_periph) &= ~(uint32_t)TIMER_CTL0_UPS;
000010  6802              LDR      r2,[r0,#0]
000012  f0220204          BIC      r2,r2,#4
000016  6002              STR      r2,[r0,#0]
                  |L69.24|
;;;421        }else{
;;;422            /* illegal parameters */
;;;423        }
;;;424    }
000018  4770              BX       lr
;;;425    
                          ENDP


;*** Start embedded assembler ***

#line 1 "Libraries\\src\\gd32f10x_timer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_gd32f10x_timer_c_5b821ed8____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___16_gd32f10x_timer_c_5b821ed8____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_gd32f10x_timer_c_5b821ed8____REVSH|
#line 128
|__asm___16_gd32f10x_timer_c_5b821ed8____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
