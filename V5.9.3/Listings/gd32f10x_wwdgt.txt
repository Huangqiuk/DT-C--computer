; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\gd32f10x_wwdgt.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\gd32f10x_wwdgt.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -I.\User\qrencode -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\gd32f10x_wwdgt.crf Libraries\src\gd32f10x_wwdgt.c]
                          THUMB

                          AREA ||i.wwdgt_config||, CODE, READONLY, ALIGN=2

                  wwdgt_config PROC
;;;97     */
;;;98     void wwdgt_config(uint16_t counter, uint16_t window, uint32_t prescaler)
000000  b530              PUSH     {r4,r5,lr}
;;;99     {
000002  4603              MOV      r3,r0
;;;100        uint32_t reg_cfg = 0U, reg_ctl = 0U;
000004  2000              MOVS     r0,#0
000006  2400              MOVS     r4,#0
;;;101    
;;;102        /* clear WIN and PSC bits, clear CNT bit */
;;;103        reg_cfg = (WWDGT_CFG &(~(WWDGT_CFG_WIN|WWDGT_CFG_PSC)));
000008  4d0a              LDR      r5,|L1.52|
00000a  682d              LDR      r5,[r5,#0]
00000c  0a68              LSRS     r0,r5,#9
00000e  0240              LSLS     r0,r0,#9
;;;104        reg_ctl = (WWDGT_CTL &(~WWDGT_CTL_CNT));
000010  4d08              LDR      r5,|L1.52|
000012  1f2d              SUBS     r5,r5,#4
000014  682d              LDR      r5,[r5,#0]
000016  f025047f          BIC      r4,r5,#0x7f
;;;105      
;;;106        /* configure WIN and PSC bits, configure CNT bit */
;;;107        reg_cfg |= CFG_WIN(window);
00001a  f001057f          AND      r5,r1,#0x7f
00001e  4328              ORRS     r0,r0,r5
;;;108        reg_cfg |= prescaler;
000020  4310              ORRS     r0,r0,r2
;;;109        reg_ctl |= CTL_CNT(counter);
000022  f003057f          AND      r5,r3,#0x7f
000026  432c              ORRS     r4,r4,r5
;;;110        
;;;111        WWDGT_CTL = reg_ctl;
000028  4d02              LDR      r5,|L1.52|
00002a  1f2d              SUBS     r5,r5,#4
00002c  602c              STR      r4,[r5,#0]
;;;112        WWDGT_CFG = reg_cfg;
00002e  1d2d              ADDS     r5,r5,#4
000030  6028              STR      r0,[r5,#0]
;;;113    }
000032  bd30              POP      {r4,r5,pc}
;;;114    
                          ENDP

                  |L1.52|
                          DCD      0x40002c04

                          AREA ||i.wwdgt_counter_update||, CODE, READONLY, ALIGN=2

                  wwdgt_counter_update PROC
;;;74     */
;;;75     void wwdgt_counter_update(uint16_t counter_value)
000000  2100              MOVS     r1,#0
;;;76     {
;;;77         uint32_t reg = 0U;
;;;78         
;;;79         reg = (WWDGT_CTL & (~WWDGT_CTL_CNT));
000002  4a05              LDR      r2,|L2.24|
000004  6812              LDR      r2,[r2,#0]
000006  f022017f          BIC      r1,r2,#0x7f
;;;80         reg |= CTL_CNT(counter_value);
00000a  f000027f          AND      r2,r0,#0x7f
00000e  4311              ORRS     r1,r1,r2
;;;81         
;;;82         WWDGT_CTL = reg;
000010  4a01              LDR      r2,|L2.24|
000012  6011              STR      r1,[r2,#0]
;;;83     }
000014  4770              BX       lr
;;;84     
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x40002c00

                          AREA ||i.wwdgt_deinit||, CODE, READONLY, ALIGN=1

                  wwdgt_deinit PROC
;;;51     */
;;;52     void wwdgt_deinit(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54         rcu_periph_reset_enable(RCU_WWDGTRST);
000002  f240400b          MOV      r0,#0x40b
000006  f7fffffe          BL       rcu_periph_reset_enable
;;;55         rcu_periph_reset_disable(RCU_WWDGTRST);
00000a  f240400b          MOV      r0,#0x40b
00000e  f7fffffe          BL       rcu_periph_reset_disable
;;;56     }
000012  bd10              POP      {r4,pc}
;;;57     
                          ENDP


                          AREA ||i.wwdgt_enable||, CODE, READONLY, ALIGN=2

                  wwdgt_enable PROC
;;;63     */
;;;64     void wwdgt_enable(void)
000000  4803              LDR      r0,|L4.16|
;;;65     {
;;;66         WWDGT_CTL |= WWDGT_CTL_WDGTEN;
000002  6800              LDR      r0,[r0,#0]
000004  f0400080          ORR      r0,r0,#0x80
000008  4901              LDR      r1,|L4.16|
00000a  6008              STR      r0,[r1,#0]
;;;67     }
00000c  4770              BX       lr
;;;68     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x40002c00

                          AREA ||i.wwdgt_flag_clear||, CODE, READONLY, ALIGN=2

                  wwdgt_flag_clear PROC
;;;146    */
;;;147    void wwdgt_flag_clear(void)
000000  4803              LDR      r0,|L5.16|
;;;148    {
;;;149        WWDGT_STAT &= (~WWDGT_STAT_EWIF);
000002  6800              LDR      r0,[r0,#0]
000004  f0200001          BIC      r0,r0,#1
000008  4901              LDR      r1,|L5.16|
00000a  6008              STR      r0,[r1,#0]
;;;150    }
00000c  4770              BX       lr
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      0x40002c08

                          AREA ||i.wwdgt_flag_get||, CODE, READONLY, ALIGN=2

                  wwdgt_flag_get PROC
;;;131    */
;;;132    FlagStatus wwdgt_flag_get(void)
000000  4804              LDR      r0,|L6.20|
;;;133    {
;;;134        if(WWDGT_STAT & WWDGT_STAT_EWIF){
000002  6800              LDR      r0,[r0,#0]
000004  f0000001          AND      r0,r0,#1
000008  b108              CBZ      r0,|L6.14|
;;;135            return SET;
00000a  2001              MOVS     r0,#1
                  |L6.12|
;;;136        }
;;;137    
;;;138        return RESET;
;;;139    }
00000c  4770              BX       lr
                  |L6.14|
00000e  2000              MOVS     r0,#0                 ;138
000010  e7fc              B        |L6.12|
;;;140    
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      0x40002c08

                          AREA ||i.wwdgt_interrupt_enable||, CODE, READONLY, ALIGN=2

                  wwdgt_interrupt_enable PROC
;;;120    */
;;;121    void wwdgt_interrupt_enable(void)
000000  4803              LDR      r0,|L7.16|
;;;122    {
;;;123        WWDGT_CFG |= WWDGT_CFG_EWIE;
000002  6800              LDR      r0,[r0,#0]
000004  f4407000          ORR      r0,r0,#0x200
000008  4901              LDR      r1,|L7.16|
00000a  6008              STR      r0,[r1,#0]
;;;124    }
00000c  4770              BX       lr
;;;125    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      0x40002c04

;*** Start embedded assembler ***

#line 1 "Libraries\\src\\gd32f10x_wwdgt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_gd32f10x_wwdgt_c_c410292e____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___16_gd32f10x_wwdgt_c_c410292e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_gd32f10x_wwdgt_c_c410292e____REVSH|
#line 128
|__asm___16_gd32f10x_wwdgt_c_c410292e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
