; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\dutctl.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\dutctl.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -I.\User\qrencode -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER -DGD32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\dutctl.crf User\dutCtl.c]
                          THUMB

                          AREA ||i.DUTCTRL_BusInit||, CODE, READONLY, ALIGN=2

                  DUTCTRL_BusInit PROC
;;;42     
;;;43     void DUTCTRL_BusInit()
000000  b510              PUSH     {r4,lr}
;;;44     {
;;;45     	switch (dut_info.dutBusType)
000002  4819              LDR      r0,|L1.104|
000004  7e40              LDRB     r0,[r0,#0x19]  ; dut_info
000006  b110              CBZ      r0,|L1.14|
000008  2801              CMP      r0,#1
00000a  d12b              BNE      |L1.100|
00000c  e00a              B        |L1.36|
                  |L1.14|
;;;46     	{
;;;47             case 0: // 串口升级
;;;48                 // UART驱动层初始化
;;;49                 UART_DRIVE_InitSelect(UART_DRIVE_BAUD_RATE); // UART协议层初始化
00000e  f44f30e1          MOV      r0,#0x1c200
000012  f7fffffe          BL       UART_DRIVE_InitSelect
;;;50                 UART_PROTOCOL_Init();						 // 55升级协议
000016  f7fffffe          BL       UART_PROTOCOL_Init
;;;51                 UART_PROTOCOL3_Init();						 // KM5S
00001a  f7fffffe          BL       UART_PROTOCOL3_Init
;;;52                 LIME_UART_PROTOCOL_Init();
00001e  f7fffffe          BL       LIME_UART_PROTOCOL_Init
;;;53                 break;
000022  e01f              B        |L1.100|
                  |L1.36|
;;;54                 
;;;55             case 1: // can升级
;;;56                 switch (dut_info.ID)
000024  4810              LDR      r0,|L1.104|
000026  7d80              LDRB     r0,[r0,#0x16]  ; dut_info
000028  2801              CMP      r0,#1
00002a  d002              BEQ      |L1.50|
00002c  2808              CMP      r0,#8
00002e  d10f              BNE      |L1.80|
000030  e008              B        |L1.68|
                  |L1.50|
;;;57                 {
;;;58                     case DUT_TYPE_GB:
;;;59                         // 高标升级
;;;60                         IAP_CTRL_CAN_Init(CAN_BAUD_RATE_500K);
000032  f44f70fa          MOV      r0,#0x1f4
000036  f7fffffe          BL       IAP_CTRL_CAN_Init
;;;61                         CAN_PROTOCOL_Init(); // 高标升级初始化
00003a  f7fffffe          BL       CAN_PROTOCOL_Init
;;;62                         CAN_TEST_PROTOCOL_Init();                    
00003e  f7fffffe          BL       CAN_TEST_PROTOCOL_Init
;;;63                         break;
000042  e00d              B        |L1.96|
                  |L1.68|
;;;64     
;;;65                     case DUT_TYPE_MEIDI:
;;;66                         IAP_CTRL_CAN_Init(CAN_BAUD_RATE_250K);
000044  20fa              MOVS     r0,#0xfa
000046  f7fffffe          BL       IAP_CTRL_CAN_Init
;;;67                         CAN_MD_PROTOCOL_Init(); // MeiDi升级初始化                  
00004a  f7fffffe          BL       CAN_MD_PROTOCOL_Init
;;;68                         break;
00004e  e007              B        |L1.96|
                  |L1.80|
;;;69                         
;;;70                     default:
;;;71                         // 通用can升级
;;;72                         IAP_CTRL_CAN_Init(CAN_BAUD_RATE_125K);
000050  207d              MOVS     r0,#0x7d
000052  f7fffffe          BL       IAP_CTRL_CAN_Init
;;;73                         CAN_PROTOCOL1_Init(); // 通用配置初始化
000056  f7fffffe          BL       CAN_PROTOCOL1_Init
;;;74                         CAN_TEST_PROTOCOL_Init();
00005a  f7fffffe          BL       CAN_TEST_PROTOCOL_Init
;;;75                         break;
00005e  bf00              NOP      
                  |L1.96|
000060  bf00              NOP                            ;63
;;;76                 }
;;;77                 break;
000062  bf00              NOP      
                  |L1.100|
000064  bf00              NOP                            ;53
;;;78     	}
;;;79     }
000066  bd10              POP      {r4,pc}
                          ENDP

                  |L1.104|
                          DCD      dut_info

                          AREA ||i.DUTCTRL_Init||, CODE, READONLY, ALIGN=2

                  DUTCTRL_Init PROC
;;;14     
;;;15     void DUTCTRL_Init() // 继电器输出初始化
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17     	rcu_periph_clock_enable(RCU_GPIOE);
000002  f2406006          MOV      r0,#0x606
000006  f7fffffe          BL       rcu_periph_clock_enable
;;;18     	gpio_init(GPIOE, GPIO_MODE_OUT_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_11); // 继电器使能
00000a  f44f6300          MOV      r3,#0x800
00000e  2203              MOVS     r2,#3
000010  2110              MOVS     r1,#0x10
000012  480c              LDR      r0,|L2.68|
000014  f7fffffe          BL       gpio_init
;;;19     	gpio_init(GPIOE, GPIO_MODE_OUT_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_12); // 电压选择
000018  f44f5380          MOV      r3,#0x1000
00001c  2203              MOVS     r2,#3
00001e  2110              MOVS     r1,#0x10
000020  4808              LDR      r0,|L2.68|
000022  f7fffffe          BL       gpio_init
;;;20     	
;;;21     	if (dut_info.voltage)// 24V
000026  4808              LDR      r0,|L2.72|
000028  7d00              LDRB     r0,[r0,#0x14]  ; dut_info
00002a  b128              CBZ      r0,|L2.56|
;;;22     	{
;;;23     		DutVol_24();
00002c  f44f5180          MOV      r1,#0x1000
000030  4804              LDR      r0,|L2.68|
000032  f7fffffe          BL       gpio_bit_set
000036  e004              B        |L2.66|
                  |L2.56|
;;;24     	}
;;;25     	else
;;;26     	{
;;;27     		DutVol_12();
000038  f44f5180          MOV      r1,#0x1000
00003c  4801              LDR      r0,|L2.68|
00003e  f7fffffe          BL       gpio_bit_reset
                  |L2.66|
;;;28     	}
;;;29     }
000042  bd10              POP      {r4,pc}
;;;30     
                          ENDP

                  |L2.68|
                          DCD      0x40011800
                  |L2.72|
                          DCD      dut_info

                          AREA ||i.DUTCTRL_PowerOnOff||, CODE, READONLY, ALIGN=2

                  DUTCTRL_PowerOnOff PROC
;;;30     
;;;31     void DUTCTRL_PowerOnOff(uint32 param)
000000  b510              PUSH     {r4,lr}
;;;32     {
000002  4604              MOV      r4,r0
;;;33     	if (param)
000004  b12c              CBZ      r4,|L3.18|
;;;34     	{
;;;35     		Relay_ON();
000006  f44f6100          MOV      r1,#0x800
00000a  4805              LDR      r0,|L3.32|
00000c  f7fffffe          BL       gpio_bit_set
000010  e004              B        |L3.28|
                  |L3.18|
;;;36     	}
;;;37     	else
;;;38     	{
;;;39     		Relay_OFF();
000012  f44f6100          MOV      r1,#0x800
000016  4802              LDR      r0,|L3.32|
000018  f7fffffe          BL       gpio_bit_reset
                  |L3.28|
;;;40     	}
;;;41     }
00001c  bd10              POP      {r4,pc}
;;;42     
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40011800

;*** Start embedded assembler ***

#line 1 "User\\dutCtl.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_dutCtl_c_f644218f____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___8_dutCtl_c_f644218f____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_dutCtl_c_f644218f____REVSH|
#line 128
|__asm___8_dutCtl_c_f644218f____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
