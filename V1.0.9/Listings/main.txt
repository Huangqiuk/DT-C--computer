; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\main.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -I.\User\qrencode -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_XD -DUSE_STDPERIPH_DRIVER -DGD32F10X_XD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\main.crf User\main.c]
                          THUMB

                          AREA ||i.Key_Info||, CODE, READONLY, ALIGN=2

                  Key_Info PROC
;;;28     // 发送启动指令
;;;29     void Key_Info(uint32 param)
000000  b51c              PUSH     {r2-r4,lr}
;;;30     {
;;;31         STS_PROTOCOL_SendCmdAck(STS_PROTOCOL_CMD_EXECUTIVE_DIRECTOR);
000002  201c              MOVS     r0,#0x1c
000004  f7fffffe          BL       STS_PROTOCOL_SendCmdAck
;;;32         
;;;33         // 若处于透传模式下，按下启动按钮则开启在线检测定时器
;;;34         if(dut_info.passThroughControl)
000008  4809              LDR      r0,|L1.48|
00000a  f8901120          LDRB     r1,[r0,#0x120]  ; dut_info
00000e  2900              CMP      r1,#0
000010  d00c              BEQ      |L1.44|
;;;35         {
;;;36             dut_info.online_dete_cnt = 0;
000012  2100              MOVS     r1,#0
000014  f8c01124          STR      r1,[r0,#0x124]  ; dut_info
;;;37             
;;;38               TIMER_AddTask(TIMER_ID_ONLINE_DETECT,
000018  2001              MOVS     r0,#1
00001a  9000              STR      r0,[sp,#0]
00001c  9001              STR      r0,[sp,#4]
00001e  2300              MOVS     r3,#0
000020  4a04              LDR      r2,|L1.52|
000022  f64031b8          MOV      r1,#0xbb8
000026  2011              MOVS     r0,#0x11
000028  f7fffffe          BL       TIMER_AddTask
                  |L1.44|
;;;39               3000,
;;;40               DutTimeOut,
;;;41               0,
;;;42               1,
;;;43               ACTION_MODE_ADD_TO_QUEUE);
;;;44         }
;;;45     }
00002c  bd1c              POP      {r2-r4,pc}
;;;46     
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      dut_info
                  |L1.52|
                          DCD      DutTimeOut

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;46     
;;;47     int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;48     {
;;;49         DI();
000002  b672              CPSID    i
;;;50     
;;;51         // MCU底层配置
;;;52         SYSTEM_Init();
000004  f7fffffe          BL       SYSTEM_Init
;;;53     
;;;54         // LCD初始化
;;;55         Init_Lcd();
000008  f7fffffe          BL       Init_Lcd
;;;56     
;;;57         // 打印开机信息
;;;58         POWER_ON_Information();
00000c  f7fffffe          BL       POWER_ON_Information
;;;59     
;;;60         // 定时器模块初始化
;;;61         TIMER_Init();
000010  f7fffffe          BL       TIMER_Init
;;;62     
;;;63         // 初始化SPI Flash驱动端口
;;;64         SPIx_FLASH_Init();
000014  f7fffffe          BL       SPIx_FLASH_Init
;;;65     
;;;66         // 万用表引脚初始化
;;;67         AVO_PIN_Init();
000018  f7fffffe          BL       AVO_PIN_Init
;;;68     
;;;69         // ADC 初始化
;;;70         ADC_HwInit();
00001c  f7fffffe          BL       ADC_HwInit
;;;71     
;;;72         // DAC初始化
;;;73         DAC_Init();
000020  f7fffffe          BL       DAC_Init
;;;74         
;;;75     	// AD模块初始化
;;;76         ADC_BaseInit();
000024  f7fffffe          BL       ADC_BaseInit
;;;77     
;;;78         // PWM初始化
;;;79         PWM_OUT1_Init();
000028  f7fffffe          BL       PWM_OUT1_Init
;;;80        
;;;81         // STS串口初始化
;;;82         STS_UART_Init();
00002c  f7fffffe          BL       STS_UART_Init
;;;83     
;;;84         // STS协议串口初始化
;;;85         STS_PROTOCOL_Init();
000030  f7fffffe          BL       STS_PROTOCOL_Init
;;;86     
;;;87         // 电源通讯串口初始化
;;;88         POWER_UART_Init();
000034  f7fffffe          BL       POWER_UART_Init
;;;89     
;;;90         // 电源通讯协议初始化
;;;91         POWER_PROTOCOL_Init();
000038  f7fffffe          BL       POWER_PROTOCOL_Init
;;;92     
;;;93         // 万用表通讯串口初始化
;;;94         AVO_UART_Init();
00003c  f7fffffe          BL       AVO_UART_Init
;;;95     
;;;96         // 万用表通讯协议初始化
;;;97         AVO_PROTOCOL_Init() ;
000040  f7fffffe          BL       AVO_PROTOCOL_Init
;;;98     
;;;99         // 状态机初始化
;;;100        STATE_Init();
000044  f7fffffe          BL       STATE_Init
;;;101    
;;;102        // 启动按键初始化
;;;103        KEY_Init();
000048  f7fffffe          BL       KEY_Init
;;;104    
;;;105        // 注销所有按键
;;;106        KEYMSG_StopAllService();
00004c  f7fffffe          BL       KEYMSG_StopAllService
;;;107    
;;;108        // 注册按键
;;;109        KEYMSG_RegisterMsgService(KEY_NAME_START, KEY_MSG_UP, Key_Info, 0);
000050  2300              MOVS     r3,#0
000052  4a1b              LDR      r2,|L2.192|
000054  2101              MOVS     r1,#1
000056  4618              MOV      r0,r3
000058  f7fffffe          BL       KEYMSG_RegisterMsgService
;;;110    
;;;111        // 参数初始化
;;;112        PARAM_Init();
00005c  f7fffffe          BL       PARAM_Init
;;;113    
;;;114        // 升级协议选择
;;;115        DUTCTRL_BusInit();
000060  f7fffffe          BL       DUTCTRL_BusInit
;;;116    
;;;117        // 身份上报
;;;118        TIMER_AddTask(TIMER_ID_REPORT_OF_IDENTITY,
000064  2001              MOVS     r0,#1
000066  1e81              SUBS     r1,r0,#2
000068  e9cd1000          STRD     r1,r0,[sp,#0]
00006c  2300              MOVS     r3,#0
00006e  4a15              LDR      r2,|L2.196|
000070  f44f71fa          MOV      r1,#0x1f4
000074  2014              MOVS     r0,#0x14
000076  f7fffffe          BL       TIMER_AddTask
;;;119                      500,
;;;120                      Report_Identity,
;;;121                      0,
;;;122                      -1,
;;;123                      ACTION_MODE_ADD_TO_QUEUE);              
;;;124        
;;;125        EI();
00007a  b662              CPSIE    i
                  |L2.124|
;;;126    
;;;127        while (1)
;;;128        {
;;;129            // 定时器任务队列处理
;;;130            TIMER_TaskQueueProcess();
00007c  f7fffffe          BL       TIMER_TaskQueueProcess
;;;131     
;;;132            // STS通讯驱动层过程处理
;;;133            STS_UART_Process();
000080  f7fffffe          BL       STS_UART_Process
;;;134    
;;;135            // STS通讯协议层过程处理
;;;136            STS_PROTOCOL_Process();
000084  f7fffffe          BL       STS_PROTOCOL_Process
;;;137    
;;;138            // 按键过程处理
;;;139            KEYMSG_Process();
000088  f7fffffe          BL       KEYMSG_Process
;;;140    
;;;141            // 电源板通讯驱动层过程处理
;;;142            POWER_UART_Process();
00008c  f7fffffe          BL       POWER_UART_Process
;;;143    
;;;144            // 电源板通讯协议层过程处理
;;;145            POWER_PROTOCOL_Process();
000090  f7fffffe          BL       POWER_PROTOCOL_Process
;;;146    
;;;147            // 万用表通讯驱动层过程处理
;;;148            AVO_UART_Process();
000094  f7fffffe          BL       AVO_UART_Process
;;;149    
;;;150            // 万用表通讯驱动层过程处理
;;;151            AVO_PROTOCOL_Process();
000098  f7fffffe          BL       AVO_PROTOCOL_Process
;;;152    
;;;153            // UART驱动层过程处理
;;;154            UART_DRIVE_Process();
00009c  f7fffffe          BL       UART_DRIVE_Process
;;;155    
;;;156            // UART协议层过程处理
;;;157            DUT_UART_PROTOCOL_Process();
0000a0  f7fffffe          BL       DUT_UART_PROTOCOL_Process
;;;158    
;;;159            // 小米协议层过程处理
;;;160            UART_PROTOCOL_XM_Process();
0000a4  f7fffffe          BL       UART_PROTOCOL_XM_Process
;;;161    
;;;162            // CAN协议层过程处理
;;;163            CAN_PROTOCOL_Process_Test();
0000a8  f7fffffe          BL       CAN_PROTOCOL_Process_Test
;;;164    
;;;165            // 3A生产协议
;;;166            CAN_PROTOCOL_Process_3A();
0000ac  f7fffffe          BL       CAN_PROTOCOL_Process_3A
;;;167            
;;;168            // 3A生产协议
;;;169            UART_PROTOCOL_Process();
0000b0  f7fffffe          BL       UART_PROTOCOL_Process
;;;170            
;;;171            // 状态机过程处理
;;;172            STATE_Process();    
0000b4  f7fffffe          BL       STATE_Process
;;;173    
;;;174    		// ADC过程处理
;;;175    		ADC_Process();        
0000b8  f7fffffe          BL       ADC_Process
0000bc  e7de              B        |L2.124|
;;;176        }
;;;177    }
;;;178    
                          ENDP

0000be  0000              DCW      0x0000
                  |L2.192|
                          DCD      Key_Info
                  |L2.196|
                          DCD      Report_Identity

;*** Start embedded assembler ***

#line 1 "User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_Key_Info____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___6_main_c_Key_Info____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_Key_Info____REVSH|
#line 128
|__asm___6_main_c_Key_Info____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
