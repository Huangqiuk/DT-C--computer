; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\gd32f10x_misc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\output\gd32f10x_misc.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I.\User -I.\Libraries\inc -I.\Libraries\src -I.\CMSIS -I.\Startup -I.\User\qrencode -ID:\Keil_v5\Packs\GigaDevice\GD32F10x_DFP\2.0.3\Device\Include -D__MICROLIB -D__UVISION_VERSION=539 -DGD32F10X_XD -DUSE_STDPERIPH_DRIVER -DGD32F10X_XD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\gd32f10x_misc.crf Libraries\src\gd32f10x_misc.c]
                          THUMB

                          AREA ||i.nvic_irq_disable||, CODE, READONLY, ALIGN=1

                  nvic_irq_disable PROC
;;;116    */
;;;117    void nvic_irq_disable(uint8_t nvic_irq)
000000  f000021f          AND      r2,r0,#0x1f
;;;118    {
;;;119        /* disable the selected IRQ.*/
;;;120        NVIC->ICER[nvic_irq >> 0x05U] = (uint32_t)0x01U << (nvic_irq & (uint8_t)0x1FU);
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0940              LSRS     r0,r0,#5
00000a  0080              LSLS     r0,r0,#2
00000c  f10020e0          ADD      r0,r0,#0xe000e000
000010  f8c01180          STR      r1,[r0,#0x180]
;;;121    }
000014  4770              BX       lr
;;;122    
                          ENDP


                          AREA ||i.nvic_irq_enable||, CODE, READONLY, ALIGN=2

                  nvic_irq_enable PROC
;;;65     */
;;;66     void nvic_irq_enable(uint8_t nvic_irq, 
000000  b5f0              PUSH     {r4-r7,lr}
;;;67                          uint8_t nvic_irq_pre_priority, 
;;;68                          uint8_t nvic_irq_sub_priority)
;;;69     {
000002  4606              MOV      r6,r0
000004  460f              MOV      r7,r1
;;;70         uint32_t temp_priority = 0x00U, temp_pre = 0x00U, temp_sub = 0x00U;
000006  2300              MOVS     r3,#0
000008  2400              MOVS     r4,#0
;;;71     
;;;72         /* use the priority group value to get the temp_pre and the temp_sub */
;;;73         switch ((SCB->AIRCR) & (uint32_t)0x700U) {
00000a  4820              LDR      r0,|L2.140|
00000c  6800              LDR      r0,[r0,#0]
00000e  f40065e0          AND      r5,r0,#0x700
000012  f44f60a0          MOV      r0,#0x500
000016  4285              CMP      r5,r0
000018  d02f              BEQ      |L2.122|
00001a  dc06              BGT      |L2.42|
00001c  f5b57f40          CMP      r5,#0x300
000020  d031              BEQ      |L2.134|
000022  f5b56f80          CMP      r5,#0x400
000026  d106              BNE      |L2.54|
000028  e02a              B        |L2.128|
                  |L2.42|
00002a  f5b56fc0          CMP      r5,#0x600
00002e  d021              BEQ      |L2.116|
000030  f5b56fe0          CMP      r5,#0x700
000034  d01c              BEQ      |L2.112|
                  |L2.54|
;;;74         case NVIC_PRIGROUP_PRE0_SUB4:
;;;75             temp_pre = 0U;
;;;76             temp_sub = 0x4U;
;;;77             break;
;;;78         case NVIC_PRIGROUP_PRE1_SUB3:
;;;79             temp_pre = 1U;
;;;80             temp_sub = 0x3U;
;;;81             break;
;;;82         case NVIC_PRIGROUP_PRE2_SUB2:
;;;83             temp_pre = 2U;
;;;84             temp_sub = 0x2U;
;;;85             break;
;;;86         case NVIC_PRIGROUP_PRE3_SUB1:
;;;87             temp_pre = 3U;
;;;88             temp_sub = 0x1U;
;;;89             break;
;;;90         case NVIC_PRIGROUP_PRE4_SUB0:
;;;91             temp_pre = 4U;
;;;92             temp_sub = 0x0U;
;;;93             break;
;;;94         default:
;;;95             nvic_priority_group_set(NVIC_PRIGROUP_PRE2_SUB2);
000036  f7fffffe          BL       nvic_priority_group_set
;;;96             temp_pre = 2U;
00003a  2302              MOVS     r3,#2
;;;97             temp_sub = 0x2U;
00003c  2402              MOVS     r4,#2
                  |L2.62|
;;;98             break;
;;;99         }
;;;100    
;;;101        /* get the temp_priority to fill the NVIC->IP register */
;;;102        temp_priority = (uint32_t)nvic_irq_pre_priority << (0x4U - temp_pre);
00003e  f1c30004          RSB      r0,r3,#4
000042  4087              LSLS     r7,r7,r0
;;;103        temp_priority |= nvic_irq_sub_priority &(0x0FU >> (0x4U - temp_sub));
000044  f1c40104          RSB      r1,r4,#4
000048  200f              MOVS     r0,#0xf
00004a  40c8              LSRS     r0,r0,r1
00004c  4010              ANDS     r0,r0,r2
00004e  4338              ORRS     r0,r0,r7
;;;104        temp_priority = temp_priority << 0x04U;
000050  0100              LSLS     r0,r0,#4
;;;105        NVIC->IP[nvic_irq] = (uint8_t)temp_priority;
000052  f10621e0          ADD      r1,r6,#0xe000e000
000056  f8810400          STRB     r0,[r1,#0x400]
;;;106    
;;;107        /* enable the selected IRQ */
;;;108        NVIC->ISER[nvic_irq >> 0x05U] = (uint32_t)0x01U << (nvic_irq & (uint8_t)0x1FU);
00005a  f006011f          AND      r1,r6,#0x1f
00005e  2001              MOVS     r0,#1
000060  4088              LSLS     r0,r0,r1
000062  0971              LSRS     r1,r6,#5
000064  0089              LSLS     r1,r1,#2
000066  f10121e0          ADD      r1,r1,#0xe000e000
00006a  f8c10100          STR      r0,[r1,#0x100]
00006e  bdf0              POP      {r4-r7,pc}            ;77
                  |L2.112|
000070  2404              MOVS     r4,#4                 ;76
000072  e7e4              B        |L2.62|
                  |L2.116|
000074  2301              MOVS     r3,#1                 ;79
000076  2403              MOVS     r4,#3                 ;80
000078  e7e1              B        |L2.62|
                  |L2.122|
00007a  2302              MOVS     r3,#2                 ;83
00007c  2402              MOVS     r4,#2                 ;84
00007e  e7de              B        |L2.62|
                  |L2.128|
000080  2303              MOVS     r3,#3                 ;87
000082  2401              MOVS     r4,#1                 ;88
000084  e7db              B        |L2.62|
                  |L2.134|
000086  2304              MOVS     r3,#4                 ;91
000088  e7d9              B        |L2.62|
;;;109    }
;;;110    
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      0xe000ed0c

                          AREA ||i.nvic_priority_group_set||, CODE, READONLY, ALIGN=2

                  nvic_priority_group_set PROC
;;;51     */
;;;52     void nvic_priority_group_set(uint32_t nvic_prigroup)
000000  4902              LDR      r1,|L3.12|
;;;53     {
;;;54         /* set the priority group value */
;;;55         SCB->AIRCR = NVIC_AIRCR_VECTKEY_MASK | nvic_prigroup;
000002  4308              ORRS     r0,r0,r1
000004  4902              LDR      r1,|L3.16|
000006  6008              STR      r0,[r1,#0]
;;;56     }
000008  4770              BX       lr
;;;57     
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x05fa0000
                  |L3.16|
                          DCD      0xe000ed0c

                          AREA ||i.nvic_vector_table_set||, CODE, READONLY, ALIGN=2

                  nvic_vector_table_set PROC
;;;131    */
;;;132    void nvic_vector_table_set(uint32_t nvic_vict_tab, uint32_t offset)
000000  4a02              LDR      r2,|L4.12|
;;;133    {
;;;134        SCB->VTOR = nvic_vict_tab | (offset & NVIC_VECTTAB_OFFSET_MASK);
000002  4011              ANDS     r1,r1,r2
000004  4301              ORRS     r1,r1,r0
000006  4802              LDR      r0,|L4.16|
000008  6001              STR      r1,[r0,#0]
;;;135    }
00000a  4770              BX       lr
;;;136    
                          ENDP

                  |L4.12|
                          DCD      0x1fffff80
                  |L4.16|
                          DCD      0xe000ed08

                          AREA ||i.system_lowpower_reset||, CODE, READONLY, ALIGN=2

                  system_lowpower_reset PROC
;;;163    */
;;;164    void system_lowpower_reset(uint8_t lowpower_mode)
000000  4902              LDR      r1,|L5.12|
;;;165    {
;;;166        SCB->SCR &= (~(uint32_t)lowpower_mode);
000002  680a              LDR      r2,[r1,#0]
000004  4382              BICS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;167    }
000008  4770              BX       lr
;;;168    
                          ENDP

00000a  0000              DCW      0x0000
                  |L5.12|
                          DCD      0xe000ed10

                          AREA ||i.system_lowpower_set||, CODE, READONLY, ALIGN=2

                  system_lowpower_set PROC
;;;147    */
;;;148    void system_lowpower_set(uint8_t lowpower_mode)
000000  4902              LDR      r1,|L6.12|
;;;149    {
;;;150        SCB->SCR |= (uint32_t)lowpower_mode;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;151    }
000008  4770              BX       lr
;;;152    
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
                          DCD      0xe000ed10

                          AREA ||i.systick_clksource_set||, CODE, READONLY, ALIGN=1

                  systick_clksource_set PROC
;;;177    
;;;178    void systick_clksource_set(uint32_t systick_clksource)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;179    {
;;;180        if(SYSTICK_CLKSOURCE_HCLK == systick_clksource ){
000004  2804              CMP      r0,#4
000006  d004              BEQ      |L7.18|
;;;181            /* set the systick clock source from HCLK */
;;;182            SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
;;;183        }else{
;;;184            /* set the systick clock source from HCLK/8 */
;;;185            SysTick->CTRL &= SYSTICK_CLKSOURCE_HCLK_DIV8;
000008  6908              LDR      r0,[r1,#0x10]
00000a  f0200004          BIC      r0,r0,#4
00000e  6108              STR      r0,[r1,#0x10]
;;;186        }
;;;187    }
000010  4770              BX       lr
                  |L7.18|
000012  6908              LDR      r0,[r1,#0x10]         ;182
000014  f0400004          ORR      r0,r0,#4              ;182
000018  6108              STR      r0,[r1,#0x10]         ;182
00001a  4770              BX       lr
                          ENDP


;*** Start embedded assembler ***

#line 1 "Libraries\\src\\gd32f10x_misc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_misc_c_25ea0539____REV16|
#line 114 ".\\CMSIS\\core_cmInstr.h"
|__asm___15_gd32f10x_misc_c_25ea0539____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_misc_c_25ea0539____REVSH|
#line 128
|__asm___15_gd32f10x_misc_c_25ea0539____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
